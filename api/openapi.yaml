openapi: 3.0.3
info:
  description: |
    Welcome to the Svix API documentation!

    Useful links: [Homepage](https://www.svix.com) | [Support email](mailto:support+docs@svix.com) | [Blog](https://www.svix.com/blog/) | [Slack Community](https://www.svix.com/slack/)

    # Introduction

    This is the reference documentation and schemas for the [Svix webhook service](https://www.svix.com) API. For tutorials and other documentation please refer to [the documentation](https://docs.svix.com).

    ## Main concepts

    In Svix you have four important entities you will be interacting with:

    - `messages`: these are the webhooks being sent. They can have contents and a few other properties.
    - `application`: this is where `messages` are sent to. Usually you want to create one application for each user on your platform.
    - `endpoint`: endpoints are the URLs messages will be sent to. Each application can have multiple `endpoints` and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type).
    - `event-type`: event types are identifiers denoting the type of the message being sent. Event types are primarily used to decide which events are sent to which endpoint.


    ## Authentication

    Get your authentication token (`AUTH_TOKEN`) from the [Svix dashboard](https://dashboard.svix.com) and use it as part of the `Authorization` header as such: `Authorization: Bearer ${AUTH_TOKEN}`. For more information on authentication, please refer to the [authentication token docs](https://docs.svix.com/api-keys).




    ## Code samples

    The code samples assume you already have the respective libraries installed and you know how to use them. For the latest information on how to do that, please refer to [the documentation](https://docs.svix.com/).


    ## Idempotency

    Svix supports [idempotency](https://en.wikipedia.org/wiki/Idempotence) for safely retrying requests without accidentally performing the same operation twice. This is useful when an API call is disrupted in transit and you do not receive a response.

    To perform an idempotent request, pass the idempotency key in the `Idempotency-Key` header to the request. The idempotency key should be a unique value generated by the client. You can create the key in however way you like, though we suggest using UUID v4, or any other string with enough entropy to avoid collisions.

    Svix's idempotency works by saving the resulting status code and body of the first request made for any given idempotency key for any successful request. Subsequent requests with the same key return the same result for a period of up to 12 hours.

    Please note that idempotency is only supported for `POST` requests.


    ## Cross-Origin Resource Sharing

    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/). And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
  title: Svix API
  version: 1.20.0
  x-logo:
    altText: Svix Logo
    url: https://www.svix.com/static/img/brand-padded.svg
servers:
- description: The Svix EU region
  url: https://api.eu.svix.com
- description: The Svix US region
  url: https://api.us.svix.com
tags:
- description: Endpoints are the URLs messages will be sent to. Each application can
    have multiple endpoints and each message sent to that application will be sent
    to all of them (unless they are not subscribed to the sent event type).
  name: Endpoint
- description: Attempts to deliver `Message`s to `Endpoint`s.
  name: Message Attempt
- description: Integrations are services your users connect an application to. An
    integration can manage the application and its endpoints.
  name: Integration
- description: Event types are identifiers denoting the type of message being sent.
    Event types are primarily used to decide which events are sent to which endpoint.
  name: Event Type
- description: Consumer Applications are where messages are sent to. In most cases
    you would want to have one application for each of your users.
  name: Application
- description: Messages are the webhook events being sent.
  name: Message
- description: Easily give your users access to our pre-built management UI.
  name: Authentication
- description: The background tasks that have been executed for your environment.
  name: Background Tasks
- description: Generate statistics about your Svix utilization
  name: Statistics
- description: Health checks for the API.
  name: Health
- description: The webhooks the Svix service sends to notify you of events.
  name: Webhooks
paths:
  /api/v1/auth/app-portal-access/{app_id}:
    post:
      description: Use this function to get magic links (and authentication codes)
        for connecting your users to the Consumer Application Portal.
      operationId: Authentication_obtainMagicLinkAndCode
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-app-portal-access-app_id-post-parameters-0-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPortalAccessIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPortalAccessOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Consumer App Portal Access
      tags:
      - Authentication
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const appPortalAccessOut = await svix.authentication.appPortalAccess("app_id", {
              featureFlags: [],
              expiry: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const appPortalAccessOut = await svix.authentication.appPortalAccess("app_id", {
              featureFlags: [],
              expiry: null
          });
      - label: Python
        lang: Python
        source: |-
          app_portal_access_out = svix.authentication.app_portal_access("app_id", AppPortalAccessIn(
              feature_flags=[],
              expiry=None
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          app_portal_access_out = await svix.authentication.app_portal_access("app_id", AppPortalAccessIn(
              feature_flags=[],
              expiry=None
          ), None)
      - label: Go
        lang: Go
        source: |-
          appPortalAccessOut, err := svixClient.Authentication.AppPortalAccess(ctx, "app_id", &AppPortalAccessIn{
              FeatureFlags: []interface{}{},
              Expiry: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val appPortalAccessOut = svix.authentication.appPortalAccess("app_id", AppPortalAccessIn()
              .featureFlags(arrayOf())
              .expiry(null)
          )
      - label: Java
        lang: Java
        source: |-
          AppPortalAccessOut appPortalAccessOut = svix.getAuthentication().appPortalAccess("app_id", new AppPortalAccessIn()
              .featureFlags(new Object[]{})
              .expiry(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          app_portal_access_out = svix.authentication.app_portal_access("app_id", Svix::AppPortalAccessIn.new({
              "feature_flags": [],
              "expiry": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          let app_portal_access_out = svix.authentication().app_portal_access("app_id", AppPortalAccessIn {
              feature_flags: Some(vec![]),
              expiry: None,
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var appPortalAccessOut = await svix.Authentication.AppPortalAccessAsync("app_id", new AppPortalAccessIn{
              featureFlags: new Object[] {},
              expiry: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix authentication app-portal-access "app_id" '{
              "featureFlags": [],
              "expiry": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/auth/app-portal-access/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "featureFlags": [],
                  "expiry": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-auth-app-portal-access-app_id
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/auth/dashboard-access/{app_id}:
    post:
      deprecated: true
      description: |-
        DEPRECATED: Please use `app-portal-access` instead.

        Use this function to get magic links (and authentication codes) for connecting your users to the Consumer Application Portal.
      operationId: Authentication_generateMagicLink
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-dashboard-access-app_id-post-parameters-0-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardAccessOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Dashboard Access
      tags:
      - Authentication
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const dashboardAccessOut = await svix.authentication.dashboardAccess("app_id");
      - label: TypeScript
        lang: JavaScript
        source: const dashboardAccessOut = await svix.authentication.dashboardAccess("app_id");
      - label: Python
        lang: Python
        source: "dashboard_access_out = svix.authentication.dashboard_access(\"app_id\"\
          , None)"
      - label: Python (Async)
        lang: Python
        source: "dashboard_access_out = await svix.authentication.dashboard_access(\"\
          app_id\", None)"
      - label: Go
        lang: Go
        source: "dashboardAccessOut, err := svixClient.Authentication.DashboardAccess(ctx,\
          \ \"app_id\")"
      - label: Kotlin
        lang: Kotlin
        source: val dashboardAccessOut = svix.authentication.dashboardAccess("app_id")
      - label: Java
        lang: Java
        source: DashboardAccessOut dashboardAccessOut = svix.getAuthentication().dashboardAccess("app_id")
      - label: Ruby
        lang: Ruby
        source: dashboard_access_out = svix.authentication.dashboard_access("app_id")
      - label: Rust
        lang: Rust
        source: "let dashboard_access_out = svix.authentication().dashboard_access(\"\
          app_id\", None).await?;"
      - label: C#
        lang: C#
        source: var dashboardAccessOut = await svix.Authentication.DashboardAccessAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix authentication dashboard-access "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/auth/dashboard-access/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-auth-dashboard-access-app_id
      x-accepts: application/json
  /api/v1/auth/logout:
    post:
      description: |-
        Logout an app token.

        Trying to log out other tokens will fail.
      operationId: Authentication_revokeToken
      parameters:
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Logout
      tags:
      - Authentication
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: await svix.authentication.logout();
      - label: TypeScript
        lang: JavaScript
        source: await svix.authentication.logout();
      - label: Python
        lang: Python
        source: svix.authentication.logout(None)
      - label: Python (Async)
        lang: Python
        source: await svix.authentication.logout(None)
      - label: Go
        lang: Go
        source: err := svixClient.Authentication.Logout(ctx)
      - label: Kotlin
        lang: Kotlin
        source: svix.authentication.logout()
      - label: Java
        lang: Java
        source: svix.getAuthentication().logout()
      - label: Ruby
        lang: Ruby
        source: svix.authentication.logout()
      - label: Rust
        lang: Rust
        source: svix.authentication().logout(None).await?;
      - label: C#
        lang: C#
        source: await svix.Authentication.LogoutAsync()
      - label: CLI
        lang: Shell
        source: 'svix authentication logout '
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/auth/logout/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-auth-logout
      x-accepts: application/json
  /api/v1/auth/app/{app_id}/expire-all:
    post:
      description: Expire all of the tokens associated with a specific Application
      operationId: Authentication_expireAppTokens
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-app-app_id-expire-all-post-parameters-0-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTokenExpireIn'
        required: true
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Expire All
      tags:
      - Authentication
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          await svix.authentication.expireAll("app_id", {
              expiry: 60
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          await svix.authentication.expireAll("app_id", {
              expiry: 60
          });
      - label: Python
        lang: Python
        source: |-
          svix.authentication.expire_all("app_id", ApplicationTokenExpireIn(
              expiry=60
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          await svix.authentication.expire_all("app_id", ApplicationTokenExpireIn(
              expiry=60
          ), None)
      - label: Go
        lang: Go
        source: |-
          err := svixClient.Authentication.ExpireAll(ctx, "app_id", &ApplicationTokenExpireIn{
              Expiry: 60,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          svix.authentication.expireAll("app_id", ApplicationTokenExpireIn()
              .expiry(60)
          )
      - label: Java
        lang: Java
        source: |-
          svix.getAuthentication().expireAll("app_id", new ApplicationTokenExpireIn()
              .expiry(60)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          svix.authentication.expire_all("app_id", Svix::ApplicationTokenExpireIn.new({
              "expiry": 60
          }))
      - label: Rust
        lang: Rust
        source: |-
          svix.authentication().expire_all("app_id", ApplicationTokenExpireIn {
              expiry: Some(60),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          await svix.Authentication.ExpireAllAsync("app_id", new ApplicationTokenExpireIn{
              expiry: 60
          })
      - label: CLI
        lang: Shell
        source: |-
          svix authentication expire-all "app_id" '{
              "expiry": 60
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/auth/app/{app_id}/expire-all/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "expiry": 60
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-auth-app-app_id-expire-all
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app:
    get:
      description: List of all the organization's applications.
      operationId: Application_listAll
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-get-parameters-1-schema
        style: form
      - description: The sorting order of the returned items
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_ApplicationOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Applications
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const listResponseApplicationOut = await svix.application.list();
      - label: TypeScript
        lang: JavaScript
        source: const listResponseApplicationOut = await svix.application.list();
      - label: Python
        lang: Python
        source: list_response_application_out = svix.application.list(None)
      - label: Python (Async)
        lang: Python
        source: list_response_application_out = await svix.application.list(None)
      - label: Go
        lang: Go
        source: "listResponseApplicationOut, err := svixClient.Application.List(ctx,\
          \ nil)"
      - label: Kotlin
        lang: Kotlin
        source: val listResponseApplicationOut = svix.application.list()
      - label: Java
        lang: Java
        source: ListResponseApplicationOut listResponseApplicationOut = svix.getApplication().list()
      - label: Ruby
        lang: Ruby
        source: list_response_application_out = svix.application.list()
      - label: Rust
        lang: Rust
        source: let list_response_application_out = svix.application().list(None).await?;
      - label: C#
        lang: C#
        source: var listResponseApplicationOut = await svix.Application.ListAsync()
      - label: CLI
        lang: Shell
        source: 'svix application list '
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app
      x-accepts: application/json
    post:
      description: Create a new application.
      operationId: Application_createNewApplication
      parameters:
      - description: "Get an existing application, or create a new one if doesn't\
          \ exist. It's two separate functions in the libs."
        explode: true
        in: query
        name: get_if_exists
        required: false
        schema:
          default: false
          description: "Get an existing application, or create a new one if doesn't\
            \ exist. It's two separate functions in the libs."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-post-parameters-0-schema
        style: form
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Create Application
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.create({
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.create({
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: Python
        lang: Python
        source: |-
          application_out = svix.application.create(ApplicationIn(
              name="My first application",
              rate_limit=None,
              uid="unique-app-identifier"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          application_out = await svix.application.create(ApplicationIn(
              name="My first application",
              rate_limit=None,
              uid="unique-app-identifier"
          ), None)
      - label: Go
        lang: Go
        source: |-
          applicationOut, err := svixClient.Application.Create(ctx, &ApplicationIn{
              Name: "My first application",
              RateLimit: nil,
              Uid: "unique-app-identifier",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val applicationOut = svix.application.create(ApplicationIn()
              .name("My first application")
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Java
        lang: Java
        source: |-
          ApplicationOut applicationOut = svix.getApplication().create(new ApplicationIn()
              .name("My first application")
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          application_out = svix.application.create(Svix::ApplicationIn.new({
              "name": "My first application",
              "rate_limit": nil,
              "uid": "unique-app-identifier"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let application_out = svix.application().create(ApplicationIn {
              name: "My first application".to_string(),
              rate_limit: None,
              uid: Some("unique-app-identifier".to_string()),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var applicationOut = await svix.Application.CreateAsync(new ApplicationIn{
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix application create '{
              "name": "My first application",
              "rateLimit": null,
              "uid": "unique-app-identifier"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "My first application",
                  "rateLimit": null,
                  "uid": "unique-app-identifier"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}:
    delete:
      description: Delete an application.
      operationId: Application_removeApp
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-delete-parameters-0-schema
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete Application
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: await svix.application.delete("app_id");
      - label: TypeScript
        lang: JavaScript
        source: await svix.application.delete("app_id");
      - label: Python
        lang: Python
        source: svix.application.delete("app_id")
      - label: Python (Async)
        lang: Python
        source: await svix.application.delete("app_id")
      - label: Go
        lang: Go
        source: "err := svixClient.Application.Delete(ctx, \"app_id\")"
      - label: Kotlin
        lang: Kotlin
        source: svix.application.delete("app_id")
      - label: Java
        lang: Java
        source: svix.getApplication().delete("app_id")
      - label: Ruby
        lang: Ruby
        source: svix.application.delete("app_id")
      - label: Rust
        lang: Rust
        source: svix.application().delete("app_id").await?;
      - label: C#
        lang: C#
        source: await svix.Application.DeleteAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix application delete "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id
      x-accepts: application/json
    get:
      description: Get an application.
      operationId: Application_getById
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-get-parameters-0-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Application
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const applicationOut = await svix.application.get("app_id");
      - label: TypeScript
        lang: JavaScript
        source: const applicationOut = await svix.application.get("app_id");
      - label: Python
        lang: Python
        source: application_out = svix.application.get("app_id")
      - label: Python (Async)
        lang: Python
        source: application_out = await svix.application.get("app_id")
      - label: Go
        lang: Go
        source: "applicationOut, err := svixClient.Application.Get(ctx, \"app_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: val applicationOut = svix.application.get("app_id")
      - label: Java
        lang: Java
        source: ApplicationOut applicationOut = svix.getApplication().get("app_id")
      - label: Ruby
        lang: Ruby
        source: application_out = svix.application.get("app_id")
      - label: Rust
        lang: Rust
        source: let application_out = svix.application().get("app_id").await?;
      - label: C#
        lang: C#
        source: var applicationOut = await svix.Application.GetAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix application get "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id
      x-accepts: application/json
    patch:
      description: Partially update an application.
      operationId: Application_partiallyUpdate
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-patch-parameters-0-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Patch Application
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.patch("app_id", {
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.patch("app_id", {
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: Python
        lang: Python
        source: |-
          application_out = svix.application.patch("app_id", ApplicationPatch(
              rate_limit=None,
              uid="unique-app-identifier"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          application_out = await svix.application.patch("app_id", ApplicationPatch(
              rate_limit=None,
              uid="unique-app-identifier"
          ))
      - label: Go
        lang: Go
        source: |-
          applicationOut, err := svixClient.Application.Patch(ctx, "app_id", &ApplicationPatch{
              RateLimit: nil,
              Uid: "unique-app-identifier",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val applicationOut = svix.application.patch("app_id", ApplicationPatch()
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Java
        lang: Java
        source: |-
          ApplicationOut applicationOut = svix.getApplication().patch("app_id", new ApplicationPatch()
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          application_out = svix.application.patch("app_id", Svix::ApplicationPatch.new({
              "rate_limit": nil,
              "uid": "unique-app-identifier"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let application_out = svix.application().patch("app_id", ApplicationPatch {
              rate_limit: None,
              uid: Some("unique-app-identifier".to_string()),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var applicationOut = await svix.Application.PatchAsync("app_id", new ApplicationPatch{
              rateLimit: null,
              uid: "unique-app-identifier"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix application patch "app_id" '{
              "rateLimit": null,
              "uid": "unique-app-identifier"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PATCH' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "rateLimit": null,
                  "uid": "unique-app-identifier"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update an application.
      operationId: Application_updateApp
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-put-parameters-0-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Update Application
      tags:
      - Application
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.update("app_id", {
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const applicationOut = await svix.application.update("app_id", {
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          });
      - label: Python
        lang: Python
        source: |-
          application_out = svix.application.update("app_id", ApplicationIn(
              name="My first application",
              rate_limit=None,
              uid="unique-app-identifier"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          application_out = await svix.application.update("app_id", ApplicationIn(
              name="My first application",
              rate_limit=None,
              uid="unique-app-identifier"
          ))
      - label: Go
        lang: Go
        source: |-
          applicationOut, err := svixClient.Application.Update(ctx, "app_id", &ApplicationIn{
              Name: "My first application",
              RateLimit: nil,
              Uid: "unique-app-identifier",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val applicationOut = svix.application.update("app_id", ApplicationIn()
              .name("My first application")
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Java
        lang: Java
        source: |-
          ApplicationOut applicationOut = svix.getApplication().update("app_id", new ApplicationIn()
              .name("My first application")
              .rateLimit(null)
              .uid("unique-app-identifier")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          application_out = svix.application.update("app_id", Svix::ApplicationIn.new({
              "name": "My first application",
              "rate_limit": nil,
              "uid": "unique-app-identifier"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let application_out = svix.application().update("app_id", ApplicationIn {
              name: "My first application".to_string(),
              rate_limit: None,
              uid: Some("unique-app-identifier".to_string()),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var applicationOut = await svix.Application.UpdateAsync("app_id", new ApplicationIn{
              name: "My first application",
              rateLimit: null,
              uid: "unique-app-identifier"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix application update "app_id" '{
              "name": "My first application",
              "rateLimit": null,
              "uid": "unique-app-identifier"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "My first application",
                  "rateLimit": null,
                  "uid": "unique-app-identifier"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint:
    get:
      description: List the application's endpoints.
      operationId: Endpoint_listEndpoints
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-0-schema
        style: simple
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-2-schema
        style: form
      - description: The sorting order of the returned items
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EndpointOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Endpoints
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const listResponseEndpointOut = await svix.endpoint.list("app_id");
      - label: TypeScript
        lang: JavaScript
        source: const listResponseEndpointOut = await svix.endpoint.list("app_id");
      - label: Python
        lang: Python
        source: "list_response_endpoint_out = svix.endpoint.list(\"app_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_endpoint_out = await svix.endpoint.list(\"app_id\"\
          , None)"
      - label: Go
        lang: Go
        source: "listResponseEndpointOut, err := svixClient.Endpoint.List(ctx, \"\
          app_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: val listResponseEndpointOut = svix.endpoint.list("app_id")
      - label: Java
        lang: Java
        source: ListResponseEndpointOut listResponseEndpointOut = svix.getEndpoint().list("app_id")
      - label: Ruby
        lang: Ruby
        source: list_response_endpoint_out = svix.endpoint.list("app_id")
      - label: Rust
        lang: Rust
        source: "let list_response_endpoint_out = svix.endpoint().list(\"app_id\"\
          , None).await?;"
      - label: C#
        lang: C#
        source: var listResponseEndpointOut = await svix.Endpoint.ListAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix endpoint list "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint
      x-accepts: application/json
    post:
      description: |-
        Create a new endpoint for the application.

        When `secret` is `null` the secret is automatically generated (recommended)
      operationId: Endpoint_createNew
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-post-parameters-0-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Create Endpoint
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.create("app_id", {
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: ["user.signup", "user.deleted"],
              channels: ["project_123", "group_2"],
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.create("app_id", {
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: ["user.signup", "user.deleted"],
              channels: ["project_123", "group_2"],
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: Python
        lang: Python
        source: |-
          endpoint_out = svix.endpoint.create("app_id", EndpointIn(
              description="An example endpoint name",
              rate_limit=None,
              uid="unique-ep-identifier",
              url="https://example.com/webhook/",
              version=1,
              disabled=False,
              filter_types=["user.signup", "user.deleted"],
              channels=["project_123", "group_2"],
              secret="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          endpoint_out = await svix.endpoint.create("app_id", EndpointIn(
              description="An example endpoint name",
              rate_limit=None,
              uid="unique-ep-identifier",
              url="https://example.com/webhook/",
              version=1,
              disabled=False,
              filter_types=["user.signup", "user.deleted"],
              channels=["project_123", "group_2"],
              secret="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ), None)
      - label: Go
        lang: Go
        source: |-
          endpointOut, err := svixClient.Endpoint.Create(ctx, "app_id", &EndpointIn{
              Description: "An example endpoint name",
              RateLimit: nil,
              Uid: "unique-ep-identifier",
              Url: "https://example.com/webhook/",
              Version: 1,
              Disabled: false,
              FilterTypes: []string{"user.signup", "user.deleted"},
              Channels: []string{"project_123", "group_2"},
              Secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val endpointOut = svix.endpoint.create("app_id", EndpointIn()
              .description("An example endpoint name")
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .url("https://example.com/webhook/")
              .version(1)
              .disabled(false)
              .filterTypes(arrayOf("user.signup", "user.deleted"))
              .channels(arrayOf("project_123", "group_2"))
              .secret("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Java
        lang: Java
        source: |-
          EndpointOut endpointOut = svix.getEndpoint().create("app_id", new EndpointIn()
              .description("An example endpoint name")
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .url("https://example.com/webhook/")
              .version(1)
              .disabled(false)
              .filterTypes(new String[]{"user.signup", "user.deleted"})
              .channels(new String[]{"project_123", "group_2"})
              .secret("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          endpoint_out = svix.endpoint.create("app_id", Svix::EndpointIn.new({
              "description": "An example endpoint name",
              "rate_limit": nil,
              "uid": "unique-ep-identifier",
              "url": "https://example.com/webhook/",
              "version": 1,
              "disabled": false,
              "filter_types": ["user.signup", "user.deleted"],
              "channels": ["project_123", "group_2"],
              "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let endpoint_out = svix.endpoint().create("app_id", EndpointIn {
              description: Some("An example endpoint name".to_string()),
              rate_limit: None,
              uid: Some("unique-ep-identifier".to_string()),
              url: "https://example.com/webhook/".to_string(),
              version: Some(1),
              disabled: Some(false),
              filter_types: Some(vec!["user.signup".to_string(), "user.deleted".to_string()]),
              channels: Some(vec!["project_123".to_string(), "group_2".to_string()]),
              secret: Some("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD".to_string()),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var endpointOut = await svix.Endpoint.CreateAsync("app_id", new EndpointIn{
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: new string[] {"user.signup", "user.deleted"},
              channels: new string[] {"project_123", "group_2"},
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint create "app_id" '{
              "description": "An example endpoint name",
              "rateLimit": null,
              "uid": "unique-ep-identifier",
              "url": "https://example.com/webhook/",
              "version": 1,
              "disabled": false,
              "filterTypes": ["user.signup", "user.deleted"],
              "channels": ["project_123", "group_2"],
              "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "description": "An example endpoint name",
                  "rateLimit": null,
                  "uid": "unique-ep-identifier",
                  "url": "https://example.com/webhook/",
                  "version": 1,
                  "disabled": false,
                  "filterTypes": ["user.signup", "user.deleted"],
                  "channels": ["project_123", "group_2"],
                  "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}:
    delete:
      description: Delete an endpoint.
      operationId: Endpoint_remove
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-1-schema
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete Endpoint
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "await svix.endpoint.delete(\"app_id\", \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "await svix.endpoint.delete(\"app_id\", \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "svix.endpoint.delete(\"app_id\", \"endpoint_id\")"
      - label: Python (Async)
        lang: Python
        source: "await svix.endpoint.delete(\"app_id\", \"endpoint_id\")"
      - label: Go
        lang: Go
        source: "err := svixClient.Endpoint.Delete(ctx, \"app_id\", \"endpoint_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: "svix.endpoint.delete(\"app_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "svix.getEndpoint().delete(\"app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "svix.endpoint.delete(\"app_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "svix.endpoint().delete(\"app_id\", \"endpoint_id\").await?;"
      - label: C#
        lang: C#
        source: "await svix.Endpoint.DeleteAsync(\"app_id\", \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix endpoint delete "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-endpoint-endpoint_id
      x-accepts: application/json
    get:
      description: Get an endpoint.
      operationId: Endpoint_getEndpoint
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Endpoint
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const endpointOut = await svix.endpoint.get(\"app_id\", \"endpoint_id\"\
          );"
      - label: TypeScript
        lang: JavaScript
        source: "const endpointOut = await svix.endpoint.get(\"app_id\", \"endpoint_id\"\
          );"
      - label: Python
        lang: Python
        source: "endpoint_out = svix.endpoint.get(\"app_id\", \"endpoint_id\")"
      - label: Python (Async)
        lang: Python
        source: "endpoint_out = await svix.endpoint.get(\"app_id\", \"endpoint_id\"\
          )"
      - label: Go
        lang: Go
        source: "endpointOut, err := svixClient.Endpoint.Get(ctx, \"app_id\", \"endpoint_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: "val endpointOut = svix.endpoint.get(\"app_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "EndpointOut endpointOut = svix.getEndpoint().get(\"app_id\", \"endpoint_id\"\
          )"
      - label: Ruby
        lang: Ruby
        source: "endpoint_out = svix.endpoint.get(\"app_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "let endpoint_out = svix.endpoint().get(\"app_id\", \"endpoint_id\"\
          ).await?;"
      - label: C#
        lang: C#
        source: "var endpointOut = await svix.Endpoint.GetAsync(\"app_id\", \"endpoint_id\"\
          )"
      - label: CLI
        lang: Shell
        source: svix endpoint get "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id
      x-accepts: application/json
    patch:
      description: Partially update an endpoint.
      operationId: Endpoint_partiallyUpdate
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Patch Endpoint
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.patch("app_id", "endpoint_id", {
              rateLimit: null,
              uid: "unique-ep-identifier",
              version: 1,
              filterTypes: null,
              channels: null,
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.patch("app_id", "endpoint_id", {
              rateLimit: null,
              uid: "unique-ep-identifier",
              version: 1,
              filterTypes: null,
              channels: null,
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: Python
        lang: Python
        source: |-
          endpoint_out = svix.endpoint.patch("app_id", "endpoint_id", EndpointPatch(
              rate_limit=None,
              uid="unique-ep-identifier",
              version=1,
              filter_types=None,
              channels=None,
              secret="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          endpoint_out = await svix.endpoint.patch("app_id", "endpoint_id", EndpointPatch(
              rate_limit=None,
              uid="unique-ep-identifier",
              version=1,
              filter_types=None,
              channels=None,
              secret="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ))
      - label: Go
        lang: Go
        source: |-
          endpointOut, err := svixClient.Endpoint.Patch(ctx, "app_id", "endpoint_id", &EndpointPatch{
              RateLimit: nil,
              Uid: "unique-ep-identifier",
              Version: 1,
              FilterTypes: nil,
              Channels: nil,
              Secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val endpointOut = svix.endpoint.patch("app_id", "endpoint_id", EndpointPatch()
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .version(1)
              .filterTypes(null)
              .channels(null)
              .secret("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Java
        lang: Java
        source: |-
          EndpointOut endpointOut = svix.getEndpoint().patch("app_id", "endpoint_id", new EndpointPatch()
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .version(1)
              .filterTypes(null)
              .channels(null)
              .secret("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          endpoint_out = svix.endpoint.patch("app_id", "endpoint_id", Svix::EndpointPatch.new({
              "rate_limit": nil,
              "uid": "unique-ep-identifier",
              "version": 1,
              "filter_types": nil,
              "channels": nil,
              "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let endpoint_out = svix.endpoint().patch("app_id", "endpoint_id", EndpointPatch {
              rate_limit: None,
              uid: Some("unique-ep-identifier".to_string()),
              version: Some(1),
              filter_types: None,
              channels: None,
              secret: Some("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD".to_string()),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var endpointOut = await svix.Endpoint.PatchAsync("app_id", "endpoint_id", new EndpointPatch{
              rateLimit: null,
              uid: "unique-ep-identifier",
              version: 1,
              filterTypes: null,
              channels: null,
              secret: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint patch "app_id" "endpoint_id" '{
              "rateLimit": null,
              "uid": "unique-ep-identifier",
              "version": 1,
              "filterTypes": null,
              "channels": null,
              "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PATCH' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "rateLimit": null,
                  "uid": "unique-ep-identifier",
                  "version": 1,
                  "filterTypes": null,
                  "channels": null,
                  "secret": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update an endpoint.
      operationId: Endpoint_updateEndpoint
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Update Endpoint
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.update("app_id", "endpoint_id", {
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: ["user.signup", "user.deleted"],
              channels: ["project_123", "group_2"]
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const endpointOut = await svix.endpoint.update("app_id", "endpoint_id", {
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: ["user.signup", "user.deleted"],
              channels: ["project_123", "group_2"]
          });
      - label: Python
        lang: Python
        source: |-
          endpoint_out = svix.endpoint.update("app_id", "endpoint_id", EndpointUpdate(
              description="An example endpoint name",
              rate_limit=None,
              uid="unique-ep-identifier",
              url="https://example.com/webhook/",
              version=1,
              disabled=False,
              filter_types=["user.signup", "user.deleted"],
              channels=["project_123", "group_2"]
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          endpoint_out = await svix.endpoint.update("app_id", "endpoint_id", EndpointUpdate(
              description="An example endpoint name",
              rate_limit=None,
              uid="unique-ep-identifier",
              url="https://example.com/webhook/",
              version=1,
              disabled=False,
              filter_types=["user.signup", "user.deleted"],
              channels=["project_123", "group_2"]
          ))
      - label: Go
        lang: Go
        source: |-
          endpointOut, err := svixClient.Endpoint.Update(ctx, "app_id", "endpoint_id", &EndpointUpdate{
              Description: "An example endpoint name",
              RateLimit: nil,
              Uid: "unique-ep-identifier",
              Url: "https://example.com/webhook/",
              Version: 1,
              Disabled: false,
              FilterTypes: []string{"user.signup", "user.deleted"},
              Channels: []string{"project_123", "group_2"},
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val endpointOut = svix.endpoint.update("app_id", "endpoint_id", EndpointUpdate()
              .description("An example endpoint name")
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .url("https://example.com/webhook/")
              .version(1)
              .disabled(false)
              .filterTypes(arrayOf("user.signup", "user.deleted"))
              .channels(arrayOf("project_123", "group_2"))
          )
      - label: Java
        lang: Java
        source: |-
          EndpointOut endpointOut = svix.getEndpoint().update("app_id", "endpoint_id", new EndpointUpdate()
              .description("An example endpoint name")
              .rateLimit(null)
              .uid("unique-ep-identifier")
              .url("https://example.com/webhook/")
              .version(1)
              .disabled(false)
              .filterTypes(new String[]{"user.signup", "user.deleted"})
              .channels(new String[]{"project_123", "group_2"})
          )
      - label: Ruby
        lang: Ruby
        source: |-
          endpoint_out = svix.endpoint.update("app_id", "endpoint_id", Svix::EndpointUpdate.new({
              "description": "An example endpoint name",
              "rate_limit": nil,
              "uid": "unique-ep-identifier",
              "url": "https://example.com/webhook/",
              "version": 1,
              "disabled": false,
              "filter_types": ["user.signup", "user.deleted"],
              "channels": ["project_123", "group_2"]
          }))
      - label: Rust
        lang: Rust
        source: |-
          let endpoint_out = svix.endpoint().update("app_id", "endpoint_id", EndpointUpdate {
              description: Some("An example endpoint name".to_string()),
              rate_limit: None,
              uid: Some("unique-ep-identifier".to_string()),
              url: "https://example.com/webhook/".to_string(),
              version: Some(1),
              disabled: Some(false),
              filter_types: Some(vec!["user.signup".to_string(), "user.deleted".to_string()]),
              channels: Some(vec!["project_123".to_string(), "group_2".to_string()]),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var endpointOut = await svix.Endpoint.UpdateAsync("app_id", "endpoint_id", new EndpointUpdate{
              description: "An example endpoint name",
              rateLimit: null,
              uid: "unique-ep-identifier",
              url: "https://example.com/webhook/",
              version: 1,
              disabled: false,
              filterTypes: new string[] {"user.signup", "user.deleted"},
              channels: new string[] {"project_123", "group_2"}
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint update "app_id" "endpoint_id" '{
              "description": "An example endpoint name",
              "rateLimit": null,
              "uid": "unique-ep-identifier",
              "url": "https://example.com/webhook/",
              "version": 1,
              "disabled": false,
              "filterTypes": ["user.signup", "user.deleted"],
              "channels": ["project_123", "group_2"]
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "description": "An example endpoint name",
                  "rateLimit": null,
                  "uid": "unique-ep-identifier",
                  "url": "https://example.com/webhook/",
                  "version": 1,
                  "disabled": false,
                  "filterTypes": ["user.signup", "user.deleted"],
                  "channels": ["project_123", "group_2"]
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-endpoint-endpoint_id
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/secret:
    get:
      description: |-
        Get the endpoint's signing secret.

        This is used to verify the authenticity of the webhook.
        For more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).
      operationId: Endpoint_getSecret
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSecretOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Endpoint Secret
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const endpointSecretOut = await svix.endpoint.getSecret(\"app_id\"\
          , \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const endpointSecretOut = await svix.endpoint.getSecret(\"app_id\"\
          , \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "endpoint_secret_out = svix.endpoint.get_secret(\"app_id\", \"endpoint_id\"\
          )"
      - label: Python (Async)
        lang: Python
        source: "endpoint_secret_out = await svix.endpoint.get_secret(\"app_id\",\
          \ \"endpoint_id\")"
      - label: Go
        lang: Go
        source: "endpointSecretOut, err := svixClient.Endpoint.GetSecret(ctx, \"app_id\"\
          , \"endpoint_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val endpointSecretOut = svix.endpoint.getSecret(\"app_id\", \"endpoint_id\"\
          )"
      - label: Java
        lang: Java
        source: "EndpointSecretOut endpointSecretOut = svix.getEndpoint().getSecret(\"\
          app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "endpoint_secret_out = svix.endpoint.get_secret(\"app_id\", \"endpoint_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "let endpoint_secret_out = svix.endpoint().get_secret(\"app_id\",\
          \ \"endpoint_id\").await?;"
      - label: C#
        lang: C#
        source: "var endpointSecretOut = await svix.Endpoint.GetSecretAsync(\"app_id\"\
          , \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix endpoint get-secret "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-secret
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate:
    post:
      description: Rotates the endpoint's signing secret.  The previous secret will
        be valid for the next 24 hours.
      operationId: Endpoint_rotateSecret
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-1-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointSecretRotateIn'
        required: true
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Rotate Endpoint Secret
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          await svix.endpoint.rotateSecret("app_id", "endpoint_id", {
              key: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          await svix.endpoint.rotateSecret("app_id", "endpoint_id", {
              key: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          });
      - label: Python
        lang: Python
        source: |-
          svix.endpoint.rotate_secret("app_id", "endpoint_id", EndpointSecretRotateIn(
              key="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          await svix.endpoint.rotate_secret("app_id", "endpoint_id", EndpointSecretRotateIn(
              key="whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          ), None)
      - label: Go
        lang: Go
        source: |-
          err := svixClient.Endpoint.RotateSecret(ctx, "app_id", "endpoint_id", &EndpointSecretRotateIn{
              Key: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          svix.endpoint.rotateSecret("app_id", "endpoint_id", EndpointSecretRotateIn()
              .key("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Java
        lang: Java
        source: |-
          svix.getEndpoint().rotateSecret("app_id", "endpoint_id", new EndpointSecretRotateIn()
              .key("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          svix.endpoint.rotate_secret("app_id", "endpoint_id", Svix::EndpointSecretRotateIn.new({
              "key": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }))
      - label: Rust
        lang: Rust
        source: |-
          svix.endpoint().rotate_secret("app_id", "endpoint_id", EndpointSecretRotateIn {
              key: Some("whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD".to_string()),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          await svix.Endpoint.RotateSecretAsync("app_id", "endpoint_id", new EndpointSecretRotateIn{
              key: "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint rotate-secret "app_id" "endpoint_id" '{
              "key": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "key": "whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/stats:
    get:
      description: Get basic statistics for the endpoint.
      operationId: Endpoint_getStats
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-1-schema
        style: simple
      - description: Filter the range to data starting from this date
        explode: true
        in: query
        name: since
        required: false
        schema:
          description: Filter the range to data starting from this date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Filter the range to data ending by this date
        explode: true
        in: query
        name: until
        required: false
        schema:
          description: Filter the range to data ending by this date
          format: date-time
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointStats'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Endpoint Stats
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const endpointStats = await svix.endpoint.getStats(\"app_id\", \"\
          endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const endpointStats = await svix.endpoint.getStats(\"app_id\", \"\
          endpoint_id\");"
      - label: Python
        lang: Python
        source: "endpoint_stats = svix.endpoint.get_stats(\"app_id\", \"endpoint_id\"\
          )"
      - label: Python (Async)
        lang: Python
        source: "endpoint_stats = await svix.endpoint.get_stats(\"app_id\", \"endpoint_id\"\
          )"
      - label: Go
        lang: Go
        source: "endpointStats, err := svixClient.Endpoint.GetStats(ctx, \"app_id\"\
          , \"endpoint_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val endpointStats = svix.endpoint.getStats(\"app_id\", \"endpoint_id\"\
          )"
      - label: Java
        lang: Java
        source: "EndpointStats endpointStats = svix.getEndpoint().getStats(\"app_id\"\
          , \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "endpoint_stats = svix.endpoint.get_stats(\"app_id\", \"endpoint_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "let endpoint_stats = svix.endpoint().get_stats(\"app_id\", \"endpoint_id\"\
          ).await?;"
      - label: C#
        lang: C#
        source: "var endpointStats = await svix.Endpoint.GetStatsAsync(\"app_id\"\
          , \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix endpoint get-stats "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-stats
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/recover:
    post:
      description: Resend all failed messages since a given time.
      operationId: Endpoint_resendFailedWebhooks
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-1-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Recover Failed Webhooks
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const recoverOut = await svix.endpoint.recover("app_id", "endpoint_id", {
              until: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const recoverOut = await svix.endpoint.recover("app_id", "endpoint_id", {
              until: null
          });
      - label: Python
        lang: Python
        source: |-
          recover_out = svix.endpoint.recover("app_id", "endpoint_id", RecoverIn(
              until=None
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          recover_out = await svix.endpoint.recover("app_id", "endpoint_id", RecoverIn(
              until=None
          ), None)
      - label: Go
        lang: Go
        source: |-
          recoverOut, err := svixClient.Endpoint.Recover(ctx, "app_id", "endpoint_id", &RecoverIn{
              Until: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val recoverOut = svix.endpoint.recover("app_id", "endpoint_id", RecoverIn()
              .until(null)
          )
      - label: Java
        lang: Java
        source: |-
          RecoverOut recoverOut = svix.getEndpoint().recover("app_id", "endpoint_id", new RecoverIn()
              .until(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          recover_out = svix.endpoint.recover("app_id", "endpoint_id", Svix::RecoverIn.new({
              "until": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          let recover_out = svix.endpoint().recover("app_id", "endpoint_id", RecoverIn {
              until: None,
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var recoverOut = await svix.Endpoint.RecoverAsync("app_id", "endpoint_id", new RecoverIn{
              until: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint recover "app_id" "endpoint_id" '{
              "until": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/recover/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "until": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-recover
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/replay-missing:
    post:
      description: Replays messages to the endpoint. Only messages that were created
        after `since` will be sent. Messages that were previously sent to the endpoint
        are not resent.
      operationId: Endpoint_replayMissingWebhooks
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-1-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplayIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplayOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Replay Missing Webhooks
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const replayOut = await svix.endpoint.replay("app_id", "endpoint_id", {
              until: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const replayOut = await svix.endpoint.replay("app_id", "endpoint_id", {
              until: null
          });
      - label: Python
        lang: Python
        source: |-
          replay_out = svix.endpoint.replay("app_id", "endpoint_id", ReplayIn(
              until=None
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          replay_out = await svix.endpoint.replay("app_id", "endpoint_id", ReplayIn(
              until=None
          ), None)
      - label: Go
        lang: Go
        source: |-
          replayOut, err := svixClient.Endpoint.Replay(ctx, "app_id", "endpoint_id", &ReplayIn{
              Until: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val replayOut = svix.endpoint.replay("app_id", "endpoint_id", ReplayIn()
              .until(null)
          )
      - label: Java
        lang: Java
        source: |-
          ReplayOut replayOut = svix.getEndpoint().replay("app_id", "endpoint_id", new ReplayIn()
              .until(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          replay_out = svix.endpoint.replay("app_id", "endpoint_id", Svix::ReplayIn.new({
              "until": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          let replay_out = svix.endpoint().replay("app_id", "endpoint_id", ReplayIn {
              until: None,
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var replayOut = await svix.Endpoint.ReplayAsync("app_id", "endpoint_id", new ReplayIn{
              until: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint replay "app_id" "endpoint_id" '{
              "until": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/replay-missing/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "until": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-replay-missing
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/headers:
    get:
      description: Get the additional headers to be sent with the webhook
      operationId: Endpoint_getHeaders
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointHeadersOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Endpoint Headers
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const endpointHeadersOut = await svix.endpoint.getHeaders(\"app_id\"\
          , \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const endpointHeadersOut = await svix.endpoint.getHeaders(\"app_id\"\
          , \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "endpoint_headers_out = svix.endpoint.get_headers(\"app_id\", \"endpoint_id\"\
          )"
      - label: Python (Async)
        lang: Python
        source: "endpoint_headers_out = await svix.endpoint.get_headers(\"app_id\"\
          , \"endpoint_id\")"
      - label: Go
        lang: Go
        source: "endpointHeadersOut, err := svixClient.Endpoint.GetHeaders(ctx, \"\
          app_id\", \"endpoint_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val endpointHeadersOut = svix.endpoint.getHeaders(\"app_id\", \"\
          endpoint_id\")"
      - label: Java
        lang: Java
        source: "EndpointHeadersOut endpointHeadersOut = svix.getEndpoint().getHeaders(\"\
          app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "endpoint_headers_out = svix.endpoint.get_headers(\"app_id\", \"endpoint_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "let endpoint_headers_out = svix.endpoint().get_headers(\"app_id\"\
          , \"endpoint_id\").await?;"
      - label: C#
        lang: C#
        source: "var endpointHeadersOut = await svix.Endpoint.GetHeadersAsync(\"app_id\"\
          , \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix endpoint get-headers "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-headers
      x-accepts: application/json
    patch:
      description: Partially set the additional headers to be sent with the webhook
      operationId: Endpoint_partiallySetHeaders
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointHeadersPatchIn'
        required: true
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Patch Endpoint Headers
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          await svix.endpoint.patchHeaders("app_id", "endpoint_id", {
              headers: {"X-Example":"123","X-Foobar":"Bar"}
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          await svix.endpoint.patchHeaders("app_id", "endpoint_id", {
              headers: {"X-Example":"123","X-Foobar":"Bar"}
          });
      - label: Python
        lang: Python
        source: |-
          svix.endpoint.patch_headers("app_id", "endpoint_id", EndpointHeadersPatchIn(
              headers={"X-Example": "123", "X-Foobar": "Bar"}
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          await svix.endpoint.patch_headers("app_id", "endpoint_id", EndpointHeadersPatchIn(
              headers={"X-Example": "123", "X-Foobar": "Bar"}
          ))
      - label: Go
        lang: Go
        source: |-
          err := svixClient.Endpoint.PatchHeaders(ctx, "app_id", "endpoint_id", &EndpointHeadersPatchIn{
              Headers: map[string]interface{}{"X-Example": "123", "X-Foobar": "Bar"},
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          svix.endpoint.patchHeaders("app_id", "endpoint_id", EndpointHeadersPatchIn()
              .headers(/* ... */)
          )
      - label: Java
        lang: Java
        source: |-
          svix.getEndpoint().patchHeaders("app_id", "endpoint_id", new EndpointHeadersPatchIn()
              .headers(/* ... */)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          svix.endpoint.patch_headers("app_id", "endpoint_id", Svix::EndpointHeadersPatchIn.new({
              "headers": {"X-Example":"123","X-Foobar":"Bar"}
          }))
      - label: Rust
        lang: Rust
        source: |-
          svix.endpoint().patch_headers("app_id", "endpoint_id", EndpointHeadersPatchIn {
              headers: json!({"X-Example":"123","X-Foobar":"Bar"}),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          await svix.Endpoint.PatchHeadersAsync("app_id", "endpoint_id", new EndpointHeadersPatchIn{
              headers: /* ... */
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint patch-headers "app_id" "endpoint_id" '{
              "headers": {"X-Example":"123","X-Foobar":"Bar"}
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PATCH' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "headers": {"X-Example":"123","X-Foobar":"Bar"}
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id-headers
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Set the additional headers to be sent with the webhook
      operationId: Endpoint_updateHeaders
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointHeadersIn'
        required: true
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Update Endpoint Headers
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          await svix.endpoint.updateHeaders("app_id", "endpoint_id", {
              headers: {"X-Example":"123","X-Foobar":"Bar"}
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          await svix.endpoint.updateHeaders("app_id", "endpoint_id", {
              headers: {"X-Example":"123","X-Foobar":"Bar"}
          });
      - label: Python
        lang: Python
        source: |-
          svix.endpoint.update_headers("app_id", "endpoint_id", EndpointHeadersIn(
              headers={"X-Example": "123", "X-Foobar": "Bar"}
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          await svix.endpoint.update_headers("app_id", "endpoint_id", EndpointHeadersIn(
              headers={"X-Example": "123", "X-Foobar": "Bar"}
          ))
      - label: Go
        lang: Go
        source: |-
          err := svixClient.Endpoint.UpdateHeaders(ctx, "app_id", "endpoint_id", &EndpointHeadersIn{
              Headers: map[string]interface{}{"X-Example": "123", "X-Foobar": "Bar"},
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          svix.endpoint.updateHeaders("app_id", "endpoint_id", EndpointHeadersIn()
              .headers(/* ... */)
          )
      - label: Java
        lang: Java
        source: |-
          svix.getEndpoint().updateHeaders("app_id", "endpoint_id", new EndpointHeadersIn()
              .headers(/* ... */)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          svix.endpoint.update_headers("app_id", "endpoint_id", Svix::EndpointHeadersIn.new({
              "headers": {"X-Example":"123","X-Foobar":"Bar"}
          }))
      - label: Rust
        lang: Rust
        source: |-
          svix.endpoint().update_headers("app_id", "endpoint_id", EndpointHeadersIn {
              headers: json!({"X-Example":"123","X-Foobar":"Bar"}),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          await svix.Endpoint.UpdateHeadersAsync("app_id", "endpoint_id", new EndpointHeadersIn{
              headers: /* ... */
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint update-headers "app_id" "endpoint_id" '{
              "headers": {"X-Example":"123","X-Foobar":"Bar"}
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "headers": {"X-Example":"123","X-Foobar":"Bar"}
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-endpoint-endpoint_id-headers
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation:
    get:
      description: Get the transformation code associated with this endpoint
      operationId: Endpoint_getTransformationCode
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointTransformationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Endpoint Transformation
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const endpointTransformationOut = await svix.endpoint.transformationGet(\"\
          app_id\", \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const endpointTransformationOut = await svix.endpoint.transformationGet(\"\
          app_id\", \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "endpoint_transformation_out = svix.endpoint.transformation_get(\"\
          app_id\", \"endpoint_id\")"
      - label: Python (Async)
        lang: Python
        source: "endpoint_transformation_out = await svix.endpoint.transformation_get(\"\
          app_id\", \"endpoint_id\")"
      - label: Go
        lang: Go
        source: "endpointTransformationOut, err := svixClient.Endpoint.TransformationGet(ctx,\
          \ \"app_id\", \"endpoint_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val endpointTransformationOut = svix.endpoint.transformationGet(\"\
          app_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "EndpointTransformationOut endpointTransformationOut = svix.getEndpoint().transformationGet(\"\
          app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "endpoint_transformation_out = svix.endpoint.transformation_get(\"\
          app_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "let endpoint_transformation_out = svix.endpoint().transformation_get(\"\
          app_id\", \"endpoint_id\").await?;"
      - label: C#
        lang: C#
        source: "var endpointTransformationOut = await svix.Endpoint.TransformationGetAsync(\"\
          app_id\", \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix endpoint transformation-get "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-transformation
      x-accepts: application/json
    patch:
      description: Set or unset the transformation code associated with this endpoint
      operationId: Endpoint_setTransformationCode
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointTransformationIn'
        required: true
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Set Endpoint Transformation
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          await svix.endpoint.transformationPartialUpdate("app_id", "endpoint_id", {
              code: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          await svix.endpoint.transformationPartialUpdate("app_id", "endpoint_id", {
              code: null
          });
      - label: Python
        lang: Python
        source: |-
          svix.endpoint.transformation_partial_update("app_id", "endpoint_id", EndpointTransformationIn(
              code=None
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          await svix.endpoint.transformation_partial_update("app_id", "endpoint_id", EndpointTransformationIn(
              code=None
          ))
      - label: Go
        lang: Go
        source: |-
          err := svixClient.Endpoint.TransformationPartialUpdate(ctx, "app_id", "endpoint_id", &EndpointTransformationIn{
              Code: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          svix.endpoint.transformationPartialUpdate("app_id", "endpoint_id", EndpointTransformationIn()
              .code(null)
          )
      - label: Java
        lang: Java
        source: |-
          svix.getEndpoint().transformationPartialUpdate("app_id", "endpoint_id", new EndpointTransformationIn()
              .code(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          svix.endpoint.transformation_partial_update("app_id", "endpoint_id", Svix::EndpointTransformationIn.new({
              "code": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          svix.endpoint().transformation_partial_update("app_id", "endpoint_id", EndpointTransformationIn {
              code: None,
          }).await?;
      - label: C#
        lang: C#
        source: |-
          await svix.Endpoint.TransformationPartialUpdateAsync("app_id", "endpoint_id", new EndpointTransformationIn{
              code: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint transformation-partial-update "app_id" "endpoint_id" '{
              "code": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PATCH' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "code": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id-transformation
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example:
    post:
      description: Send an example message for event
      operationId: Endpoint_sendExampleMessage
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-0-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-1-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventExampleIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Send Event Type Example Message
      tags:
      - Endpoint
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const messageOut = await svix.endpoint.sendExample("app_id", "endpoint_id", {
              eventType: "user.signup"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const messageOut = await svix.endpoint.sendExample("app_id", "endpoint_id", {
              eventType: "user.signup"
          });
      - label: Python
        lang: Python
        source: |-
          message_out = svix.endpoint.send_example("app_id", "endpoint_id", EventExampleIn(
              event_type="user.signup"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          message_out = await svix.endpoint.send_example("app_id", "endpoint_id", EventExampleIn(
              event_type="user.signup"
          ), None)
      - label: Go
        lang: Go
        source: |-
          messageOut, err := svixClient.Endpoint.SendExample(ctx, "app_id", "endpoint_id", &EventExampleIn{
              EventType: "user.signup",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val messageOut = svix.endpoint.sendExample("app_id", "endpoint_id", EventExampleIn()
              .eventType("user.signup")
          )
      - label: Java
        lang: Java
        source: |-
          MessageOut messageOut = svix.getEndpoint().sendExample("app_id", "endpoint_id", new EventExampleIn()
              .eventType("user.signup")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          message_out = svix.endpoint.send_example("app_id", "endpoint_id", Svix::EventExampleIn.new({
              "event_type": "user.signup"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let message_out = svix.endpoint().send_example("app_id", "endpoint_id", EventExampleIn {
              event_type: "user.signup".to_string(),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var messageOut = await svix.Endpoint.SendExampleAsync("app_id", "endpoint_id", new EventExampleIn{
              eventType: "user.signup"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix endpoint send-example "app_id" "endpoint_id" '{
              "eventType": "user.signup"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "eventType": "user.signup"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-send-example
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/event-type:
    get:
      description: Return the list of event types.
      operationId: EventType_getList
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: user.signup
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-1-schema
        style: form
      - description: The sorting order of the returned items
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
        style: form
      - description: When `true` archived (deleted but not expunged) items are included
          in the response
        explode: true
        in: query
        name: include_archived
        required: false
        schema:
          default: false
          description: When `true` archived (deleted but not expunged) items are included
            in the response
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-3-schema
        style: form
      - description: When `true` the full item (including the schema) is included
          in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: false
          description: When `true` the full item (including the schema) is included
            in the response
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-4-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EventTypeOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Event Types
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const listResponseEventTypeOut = await svix.eventType.list();
      - label: TypeScript
        lang: JavaScript
        source: const listResponseEventTypeOut = await svix.eventType.list();
      - label: Python
        lang: Python
        source: list_response_event_type_out = svix.event_type.list(None)
      - label: Python (Async)
        lang: Python
        source: list_response_event_type_out = await svix.event_type.list(None)
      - label: Go
        lang: Go
        source: "listResponseEventTypeOut, err := svixClient.EventType.List(ctx, nil)"
      - label: Kotlin
        lang: Kotlin
        source: val listResponseEventTypeOut = svix.eventType.list()
      - label: Java
        lang: Java
        source: ListResponseEventTypeOut listResponseEventTypeOut = svix.getEventType().list()
      - label: Ruby
        lang: Ruby
        source: list_response_event_type_out = svix.event_type.list()
      - label: Rust
        lang: Rust
        source: let list_response_event_type_out = svix.event_type().list(None).await?;
      - label: C#
        lang: C#
        source: var listResponseEventTypeOut = await svix.EventType.ListAsync()
      - label: CLI
        lang: Shell
        source: 'svix event-type list '
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/event-type/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-event-type
      x-accepts: application/json
    post:
      description: |-
        Create new or unarchive existing event type.

        Unarchiving an event type will allow endpoints to filter on it and messages to be sent with it.
        Endpoints filtering on the event type before archival will continue to filter on it.
        This operation does not preserve the description and schemas.
      operationId: EventType_createOrUpdate
      parameters:
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Create Event Type
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.create({
              name: "user.signup",
              description: "A user has signed up",
              archived: false,
              schemas: {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              featureFlag: "cool-new-feature"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.create({
              name: "user.signup",
              description: "A user has signed up",
              archived: false,
              schemas: {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              featureFlag: "cool-new-feature"
          });
      - label: Python
        lang: Python
        source: |-
          event_type_out = svix.event_type.create(EventTypeIn(
              name="user.signup",
              description="A user has signed up",
              archived=False,
              schemas={"1": {"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"}},
              feature_flag="cool-new-feature"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          event_type_out = await svix.event_type.create(EventTypeIn(
              name="user.signup",
              description="A user has signed up",
              archived=False,
              schemas={"1": {"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"}},
              feature_flag="cool-new-feature"
          ), None)
      - label: Go
        lang: Go
        source: |-
          eventTypeOut, err := svixClient.EventType.Create(ctx, &EventTypeIn{
              Name: "user.signup",
              Description: "A user has signed up",
              Archived: false,
              Schemas: map[interface{}]interface{}{"1": map[string]interface{}{"description": "An invoice was paid by a user", "properties": map[interface{}]interface{}{"invoiceId": map[string]interface{}{"description": "The invoice id", "type": "string"}, "userId": map[string]interface{}{"description": "The user id", "type": "string"}}, "required": []string{"invoiceId", "userId"}, "title": "Invoice Paid Event", "type": "object"}},
              FeatureFlag: "cool-new-feature",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val eventTypeOut = svix.eventType.create(EventTypeIn()
              .name("user.signup")
              .description("A user has signed up")
              .archived(false)
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Java
        lang: Java
        source: |-
          EventTypeOut eventTypeOut = svix.getEventType().create(new EventTypeIn()
              .name("user.signup")
              .description("A user has signed up")
              .archived(false)
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          event_type_out = svix.event_type.create(Svix::EventTypeIn.new({
              "name": "user.signup",
              "description": "A user has signed up",
              "archived": false,
              "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              "feature_flag": "cool-new-feature"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let event_type_out = svix.event_type().create(EventTypeIn {
              name: "user.signup".to_string(),
              description: "A user has signed up".to_string(),
              archived: Some(false),
              schemas: Some(json!({"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}})),
              feature_flag: Some("cool-new-feature".to_string()),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var eventTypeOut = await svix.EventType.CreateAsync(new EventTypeIn{
              name: "user.signup",
              description: "A user has signed up",
              archived: false,
              schemas: /* ... */,
              featureFlag: "cool-new-feature"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix event-type create '{
              "name": "user.signup",
              "description": "A user has signed up",
              "archived": false,
              "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              "featureFlag": "cool-new-feature"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/event-type/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "user.signup",
                  "description": "A user has signed up",
                  "archived": false,
                  "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
                  "featureFlag": "cool-new-feature"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-event-type
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/event-type/import/openapi:
    post:
      description: |-
        Given an OpenAPI spec, create new or update existing event types.
        If an existing `archived` event type is updated, it will be unarchvied.

        The importer will convert all webhooks found in the either the `webhooks` or `x-webhooks`
        top-level.
      operationId: EventType_importFromOpenapi
      parameters:
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeImportOpenApiIn'
        description: |-
          Import a list of event types from webhooks defined in an OpenAPI spec.

          The OpenAPI spec can be specified as either `spec` given the spec as a JSON object, or as `specRaw` (a `string`) which will be parsed as YAML or JSON by the server. Sending neither or both is invalid, resulting in a `400` **Bad Request**.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeImportOpenApiOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Event Type Import From Openapi
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const eventTypeImportOpenApiOut = await svix.eventType.importOpenapi({
              spec: {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}},
              specRaw: {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}}
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const eventTypeImportOpenApiOut = await svix.eventType.importOpenapi({
              spec: {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}},
              specRaw: {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}}
          });
      - label: Python
        lang: Python
        source: |-
          event_type_import_open_api_out = svix.event_type.import_openapi(EventTypeImportOpenApiIn(
              spec={"info": {"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": {"pet.new": {"post": {"requestBody": {"content": {"application/json": {"schema": {"properties": {"id": {"format": "int64", "type": "integer"}, "name": {"type": "string"}, "tag": {"type": "string"}}, "required": ["id", "name"]}}}, "description": "Information about a new pet in the system"}, "responses": {"200": {"description": "Return a 200 status to indicate that the data was received successfully"}}}}}},
              spec_raw={"info": {"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": {"pet.new": {"post": {"requestBody": {"content": {"application/json": {"schema": {"properties": {"id": {"format": "int64", "type": "integer"}, "name": {"type": "string"}, "tag": {"type": "string"}}, "required": ["id", "name"]}}}, "description": "Information about a new pet in the system"}, "responses": {"200": {"description": "Return a 200 status to indicate that the data was received successfully"}}}}}}
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          event_type_import_open_api_out = await svix.event_type.import_openapi(EventTypeImportOpenApiIn(
              spec={"info": {"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": {"pet.new": {"post": {"requestBody": {"content": {"application/json": {"schema": {"properties": {"id": {"format": "int64", "type": "integer"}, "name": {"type": "string"}, "tag": {"type": "string"}}, "required": ["id", "name"]}}}, "description": "Information about a new pet in the system"}, "responses": {"200": {"description": "Return a 200 status to indicate that the data was received successfully"}}}}}},
              spec_raw={"info": {"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": {"pet.new": {"post": {"requestBody": {"content": {"application/json": {"schema": {"properties": {"id": {"format": "int64", "type": "integer"}, "name": {"type": "string"}, "tag": {"type": "string"}}, "required": ["id", "name"]}}}, "description": "Information about a new pet in the system"}, "responses": {"200": {"description": "Return a 200 status to indicate that the data was received successfully"}}}}}}
          ), None)
      - label: Go
        lang: Go
        source: |-
          eventTypeImportOpenApiOut, err := svixClient.EventType.ImportOpenapi(ctx, &EventTypeImportOpenApiIn{
              Spec: map[interface{}]interface{}{"info": map[string]interface{}{"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": map[interface{}]interface{}{"pet.new": map[interface{}]interface{}{"post": map[interface{}]interface{}{"requestBody": map[interface{}]interface{}{"content": map[interface{}]interface{}{"application/json": map[interface{}]interface{}{"schema": map[interface{}]interface{}{"properties": map[interface{}]interface{}{"id": map[string]interface{}{"format": "int64", "type": "integer"}, "name": map[string]interface{}{"type": "string"}, "tag": map[string]interface{}{"type": "string"}}, "required": []string{"id", "name"}}}}, "description": "Information about a new pet in the system"}, "responses": map[interface{}]interface{}{"200": map[string]interface{}{"description": "Return a 200 status to indicate that the data was received successfully"}}}}}},
              SpecRaw: map[interface{}]interface{}{"info": map[string]interface{}{"title": "Webhook Example", "version": "1.0.0"}, "openapi": "3.1.0", "webhooks": map[interface{}]interface{}{"pet.new": map[interface{}]interface{}{"post": map[interface{}]interface{}{"requestBody": map[interface{}]interface{}{"content": map[interface{}]interface{}{"application/json": map[interface{}]interface{}{"schema": map[interface{}]interface{}{"properties": map[interface{}]interface{}{"id": map[string]interface{}{"format": "int64", "type": "integer"}, "name": map[string]interface{}{"type": "string"}, "tag": map[string]interface{}{"type": "string"}}, "required": []string{"id", "name"}}}}, "description": "Information about a new pet in the system"}, "responses": map[interface{}]interface{}{"200": map[string]interface{}{"description": "Return a 200 status to indicate that the data was received successfully"}}}}}},
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val eventTypeImportOpenApiOut = svix.eventType.importOpenapi(EventTypeImportOpenApiIn()
              .spec(/* ... */)
              .specRaw(/* ... */)
          )
      - label: Java
        lang: Java
        source: |-
          EventTypeImportOpenApiOut eventTypeImportOpenApiOut = svix.getEventType().importOpenapi(new EventTypeImportOpenApiIn()
              .spec(/* ... */)
              .specRaw(/* ... */)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          event_type_import_open_api_out = svix.event_type.import_openapi(Svix::EventTypeImportOpenApiIn.new({
              "spec": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}},
              "spec_raw": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}}
          }))
      - label: Rust
        lang: Rust
        source: |-
          let event_type_import_open_api_out = svix.event_type().import_openapi(EventTypeImportOpenApiIn {
              spec: Some(json!({"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}})),
              spec_raw: Some(json!({"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}})),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var eventTypeImportOpenApiOut = await svix.EventType.ImportOpenapiAsync(new EventTypeImportOpenApiIn{
              spec: /* ... */,
              specRaw: /* ... */
          })
      - label: CLI
        lang: Shell
        source: |-
          svix event-type import-openapi '{
              "spec": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}},
              "specRaw": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}}
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/event-type/import/openapi/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "spec": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}},
                  "specRaw": {"info":{"title":"Webhook Example","version":"1.0.0"},"openapi":"3.1.0","webhooks":{"pet.new":{"post":{"requestBody":{"content":{"application/json":{"schema":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"tag":{"type":"string"}},"required":["id","name"]}}},"description":"Information about a new pet in the system"},"responses":{"200":{"description":"Return a 200 status to indicate that the data was received successfully"}}}}}}
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-event-type-import-openapi
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/event-type/{event_type_name}:
    delete:
      description: |-
        Archive an event type.

        Endpoints already configured to filter on an event type will continue to do so after archival.
        However, new messages can not be sent with it and endpoints can not filter on it.
        An event type can be unarchived with the
        [create operation](#operation/create_event_type_api_v1_event_type__post).
      operationId: EventType_archiveType
      parameters:
      - description: The event type's name
        explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-0-schema
        style: simple
      - description: By default event types are archived when "deleted". Passing this
          to `true` deletes them entirely.
        explode: true
        in: query
        name: expunge
        required: false
        schema:
          default: false
          description: By default event types are archived when "deleted". Passing
            this to `true` deletes them entirely.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-1-schema
        style: form
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete Event Type
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: await svix.eventType.delete("event_type_name");
      - label: TypeScript
        lang: JavaScript
        source: await svix.eventType.delete("event_type_name");
      - label: Python
        lang: Python
        source: svix.event_type.delete("event_type_name")
      - label: Python (Async)
        lang: Python
        source: await svix.event_type.delete("event_type_name")
      - label: Go
        lang: Go
        source: "err := svixClient.EventType.Delete(ctx, \"event_type_name\")"
      - label: Kotlin
        lang: Kotlin
        source: svix.eventType.delete("event_type_name")
      - label: Java
        lang: Java
        source: svix.getEventType().delete("event_type_name")
      - label: Ruby
        lang: Ruby
        source: svix.event_type.delete("event_type_name")
      - label: Rust
        lang: Rust
        source: svix.event_type().delete("event_type_name").await?;
      - label: C#
        lang: C#
        source: await svix.EventType.DeleteAsync("event_type_name")
      - label: CLI
        lang: Shell
        source: svix event-type delete "event_type_name"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/event-type/{event_type_name}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-event-type-event_type_name
      x-accepts: application/json
    get:
      description: Get an event type.
      operationId: EventType_getByName
      parameters:
      - description: The event type's name
        explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-get-parameters-0-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Event Type
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const eventTypeOut = await svix.eventType.get("event_type_name");
      - label: TypeScript
        lang: JavaScript
        source: const eventTypeOut = await svix.eventType.get("event_type_name");
      - label: Python
        lang: Python
        source: event_type_out = svix.event_type.get("event_type_name")
      - label: Python (Async)
        lang: Python
        source: event_type_out = await svix.event_type.get("event_type_name")
      - label: Go
        lang: Go
        source: "eventTypeOut, err := svixClient.EventType.Get(ctx, \"event_type_name\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: val eventTypeOut = svix.eventType.get("event_type_name")
      - label: Java
        lang: Java
        source: EventTypeOut eventTypeOut = svix.getEventType().get("event_type_name")
      - label: Ruby
        lang: Ruby
        source: event_type_out = svix.event_type.get("event_type_name")
      - label: Rust
        lang: Rust
        source: let event_type_out = svix.event_type().get("event_type_name").await?;
      - label: C#
        lang: C#
        source: var eventTypeOut = await svix.EventType.GetAsync("event_type_name")
      - label: CLI
        lang: Shell
        source: svix event-type get "event_type_name"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/event-type/{event_type_name}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-event-type-event_type_name
      x-accepts: application/json
    patch:
      description: Partially update an event type.
      operationId: EventType_partiallyUpdateType
      parameters:
      - description: The event type's name
        explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-patch-parameters-0-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypePatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Patch Event Type
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.patch("event_type_name", {
              schemas: {"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"},
              featureFlag: "cool-new-feature"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.patch("event_type_name", {
              schemas: {"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"},
              featureFlag: "cool-new-feature"
          });
      - label: Python
        lang: Python
        source: |-
          event_type_out = svix.event_type.patch("event_type_name", EventTypePatch(
              schemas={"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"},
              feature_flag="cool-new-feature"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          event_type_out = await svix.event_type.patch("event_type_name", EventTypePatch(
              schemas={"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"},
              feature_flag="cool-new-feature"
          ))
      - label: Go
        lang: Go
        source: |-
          eventTypeOut, err := svixClient.EventType.Patch(ctx, "event_type_name", &EventTypePatch{
              Schemas: map[string]interface{}{"description": "An invoice was paid by a user", "properties": map[interface{}]interface{}{"invoiceId": map[string]interface{}{"description": "The invoice id", "type": "string"}, "userId": map[string]interface{}{"description": "The user id", "type": "string"}}, "required": []string{"invoiceId", "userId"}, "title": "Invoice Paid Event", "type": "object"},
              FeatureFlag: "cool-new-feature",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val eventTypeOut = svix.eventType.patch("event_type_name", EventTypePatch()
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Java
        lang: Java
        source: |-
          EventTypeOut eventTypeOut = svix.getEventType().patch("event_type_name", new EventTypePatch()
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          event_type_out = svix.event_type.patch("event_type_name", Svix::EventTypePatch.new({
              "schemas": {"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"},
              "feature_flag": "cool-new-feature"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let event_type_out = svix.event_type().patch("event_type_name", EventTypePatch {
              schemas: Some(json!({"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"})),
              feature_flag: Some("cool-new-feature".to_string()),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var eventTypeOut = await svix.EventType.PatchAsync("event_type_name", new EventTypePatch{
              schemas: /* ... */,
              featureFlag: "cool-new-feature"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix event-type patch "event_type_name" '{
              "schemas": {"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"},
              "featureFlag": "cool-new-feature"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PATCH' \
            'https://api.eu.svix.com/api/v1/event-type/{event_type_name}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "schemas": {"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"},
                  "featureFlag": "cool-new-feature"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--api-v1-event-type-event_type_name
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Update an event type.
      operationId: EventType_updateType
      parameters:
      - description: The event type's name
        explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-put-parameters-0-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeOut'
          description: ""
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Update Event Type
      tags:
      - Event Type
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.update("event_type_name", {
              description: "A user has signed up",
              archived: false,
              schemas: {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              featureFlag: "cool-new-feature"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const eventTypeOut = await svix.eventType.update("event_type_name", {
              description: "A user has signed up",
              archived: false,
              schemas: {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              featureFlag: "cool-new-feature"
          });
      - label: Python
        lang: Python
        source: |-
          event_type_out = svix.event_type.update("event_type_name", EventTypeUpdate(
              description="A user has signed up",
              archived=False,
              schemas={"1": {"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"}},
              feature_flag="cool-new-feature"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          event_type_out = await svix.event_type.update("event_type_name", EventTypeUpdate(
              description="A user has signed up",
              archived=False,
              schemas={"1": {"description": "An invoice was paid by a user", "properties": {"invoiceId": {"description": "The invoice id", "type": "string"}, "userId": {"description": "The user id", "type": "string"}}, "required": ["invoiceId", "userId"], "title": "Invoice Paid Event", "type": "object"}},
              feature_flag="cool-new-feature"
          ))
      - label: Go
        lang: Go
        source: |-
          eventTypeOut, err := svixClient.EventType.Update(ctx, "event_type_name", &EventTypeUpdate{
              Description: "A user has signed up",
              Archived: false,
              Schemas: map[interface{}]interface{}{"1": map[string]interface{}{"description": "An invoice was paid by a user", "properties": map[interface{}]interface{}{"invoiceId": map[string]interface{}{"description": "The invoice id", "type": "string"}, "userId": map[string]interface{}{"description": "The user id", "type": "string"}}, "required": []string{"invoiceId", "userId"}, "title": "Invoice Paid Event", "type": "object"}},
              FeatureFlag: "cool-new-feature",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val eventTypeOut = svix.eventType.update("event_type_name", EventTypeUpdate()
              .description("A user has signed up")
              .archived(false)
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Java
        lang: Java
        source: |-
          EventTypeOut eventTypeOut = svix.getEventType().update("event_type_name", new EventTypeUpdate()
              .description("A user has signed up")
              .archived(false)
              .schemas(/* ... */)
              .featureFlag("cool-new-feature")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          event_type_out = svix.event_type.update("event_type_name", Svix::EventTypeUpdate.new({
              "description": "A user has signed up",
              "archived": false,
              "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              "feature_flag": "cool-new-feature"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let event_type_out = svix.event_type().update("event_type_name", EventTypeUpdate {
              description: "A user has signed up".to_string(),
              archived: Some(false),
              schemas: Some(json!({"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}})),
              feature_flag: Some("cool-new-feature".to_string()),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var eventTypeOut = await svix.EventType.UpdateAsync("event_type_name", new EventTypeUpdate{
              description: "A user has signed up",
              archived: false,
              schemas: /* ... */,
              featureFlag: "cool-new-feature"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix event-type update "event_type_name" '{
              "description": "A user has signed up",
              "archived": false,
              "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
              "featureFlag": "cool-new-feature"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/event-type/{event_type_name}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "description": "A user has signed up",
                  "archived": false,
                  "schemas": {"1":{"description":"An invoice was paid by a user","properties":{"invoiceId":{"description":"The invoice id","type":"string"},"userId":{"description":"The user id","type":"string"}},"required":["invoiceId","userId"],"title":"Invoice Paid Event","type":"object"}},
                  "featureFlag": "cool-new-feature"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-event-type-event_type_name
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/background-task:
    get:
      description: List background tasks executed in the past 90 days.
      operationId: BackgroundTasks_listRecentTasks
      parameters:
      - description: Filter the response based on the status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        style: form
      - description: Filter the response based on the type
        explode: true
        in: query
        name: task
        required: false
        schema:
          $ref: '#/components/schemas/BackgroundTaskType'
        style: form
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          nullable: true
          type: string
        style: form
      - description: The sorting order of the returned items
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Ordering'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_BackgroundTaskOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Background Tasks
      tags:
      - Background Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-background-task
      x-accepts: application/json
  /api/v1/background-task/{task_id}:
    get:
      description: Get a background task by ID.
      operationId: BackgroundTasks_getTaskById
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundTaskOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Background Task
      tags:
      - Background Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-background-task-task_id
      x-accepts: application/json
  /api/v1/app/{app_id}/msg:
    get:
      description: |
        List all of the application's messages.

        The `before` and `after` parameters let you filter all items created before or after a certain date. These can be used alongside an iterator to paginate over results
        within a certain window.

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.
      operationId: Message_listAllMessages
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-0-schema
        style: simple
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-2-schema
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-3-schema
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: When `true` message payloads are included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-6-schema
        style: form
      - description: Filter messages matching the provided tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter messages matching the provided tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-7-schema
        style: form
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-8-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Messages
      tags:
      - Message
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const listResponseMessageOut = await svix.message.list("app_id");
      - label: TypeScript
        lang: JavaScript
        source: const listResponseMessageOut = await svix.message.list("app_id");
      - label: Python
        lang: Python
        source: "list_response_message_out = svix.message.list(\"app_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_out = await svix.message.list(\"app_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageOut, err := svixClient.Message.List(ctx, \"app_id\"\
          , nil)"
      - label: Kotlin
        lang: Kotlin
        source: val listResponseMessageOut = svix.message.list("app_id")
      - label: Java
        lang: Java
        source: ListResponseMessageOut listResponseMessageOut = svix.getMessage().list("app_id")
      - label: Ruby
        lang: Ruby
        source: list_response_message_out = svix.message.list("app_id")
      - label: Rust
        lang: Rust
        source: "let list_response_message_out = svix.message().list(\"app_id\", None).await?;"
      - label: C#
        lang: C#
        source: var listResponseMessageOut = await svix.Message.ListAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix message list "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg
      x-accepts: application/json
    post:
      description: |-
        Creates a new message and dispatches it to all of the application's endpoints.

        The `eventId` is an optional custom unique ID. It's verified to be unique only up to a day, after that no verification will be made.
        If a message with the same `eventId` already exists for any application in your environment, a 409 conflict error will be returned.

        The `eventType` indicates the type and schema of the event. All messages of a certain `eventType` are expected to have the same schema. Endpoints can choose to only listen to specific event types.
        Messages can also have `channels`, which similar to event types let endpoints filter by them. Unlike event types, messages can have multiple channels, and channels don't imply a specific message content or schema.

        The `payload` property is the webhook's body (the actual webhook message). Svix supports payload sizes of up to ~350kb, though it's generally a good idea to keep webhook payloads small, probably no larger than 40kb.
      operationId: Message_createNew
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-0-schema
        style: simple
      - description: When `true` message payloads are included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-1-schema
        style: form
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Payload too large
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Create Message
      tags:
      - Message
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const messageOut = await svix.message.create("app_id", {
              eventId: "unique-msg-identifier",
              eventType: "user.signup",
              payload: {"email":"test@example.com","type":"user.created","username":"test_user"},
              channels: ["project_123", "group_2"],
              payloadRetentionPeriod: 90,
              application: null,
              tags: ["my_tag", "other"],
              transformationsParams: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const messageOut = await svix.message.create("app_id", {
              eventId: "unique-msg-identifier",
              eventType: "user.signup",
              payload: {"email":"test@example.com","type":"user.created","username":"test_user"},
              channels: ["project_123", "group_2"],
              payloadRetentionPeriod: 90,
              application: null,
              tags: ["my_tag", "other"],
              transformationsParams: null
          });
      - label: Python
        lang: Python
        source: |-
          message_out = svix.message.create("app_id", MessageIn(
              event_id="unique-msg-identifier",
              event_type="user.signup",
              payload={"email": "test@example.com", "type": "user.created", "username": "test_user"},
              channels=["project_123", "group_2"],
              payload_retention_period=90,
              application=None,
              tags=["my_tag", "other"],
              transformations_params=None
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          message_out = await svix.message.create("app_id", MessageIn(
              event_id="unique-msg-identifier",
              event_type="user.signup",
              payload={"email": "test@example.com", "type": "user.created", "username": "test_user"},
              channels=["project_123", "group_2"],
              payload_retention_period=90,
              application=None,
              tags=["my_tag", "other"],
              transformations_params=None
          ), None)
      - label: Go
        lang: Go
        source: |-
          messageOut, err := svixClient.Message.Create(ctx, "app_id", &MessageIn{
              EventId: "unique-msg-identifier",
              EventType: "user.signup",
              Payload: map[string]interface{}{"email": "test@example.com", "type": "user.created", "username": "test_user"},
              Channels: []string{"project_123", "group_2"},
              PayloadRetentionPeriod: 90,
              Application: nil,
              Tags: []string{"my_tag", "other"},
              TransformationsParams: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val messageOut = svix.message.create("app_id", MessageIn()
              .eventId("unique-msg-identifier")
              .eventType("user.signup")
              .payload(/* ... */)
              .channels(arrayOf("project_123", "group_2"))
              .payloadRetentionPeriod(90)
              .application(null)
              .tags(arrayOf("my_tag", "other"))
              .transformationsParams(null)
          )
      - label: Java
        lang: Java
        source: |-
          MessageOut messageOut = svix.getMessage().create("app_id", new MessageIn()
              .eventId("unique-msg-identifier")
              .eventType("user.signup")
              .payload(/* ... */)
              .channels(new String[]{"project_123", "group_2"})
              .payloadRetentionPeriod(90)
              .application(null)
              .tags(new String[]{"my_tag", "other"})
              .transformationsParams(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          message_out = svix.message.create("app_id", Svix::MessageIn.new({
              "event_id": "unique-msg-identifier",
              "event_type": "user.signup",
              "payload": {"email":"test@example.com","type":"user.created","username":"test_user"},
              "channels": ["project_123", "group_2"],
              "payload_retention_period": 90,
              "application": nil,
              "tags": ["my_tag", "other"],
              "transformations_params": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          let message_out = svix.message().create("app_id", MessageIn {
              event_id: Some("unique-msg-identifier".to_string()),
              event_type: "user.signup".to_string(),
              payload: json!({"email":"test@example.com","type":"user.created","username":"test_user"}),
              channels: Some(vec!["project_123".to_string(), "group_2".to_string()]),
              payload_retention_period: Some(90),
              application: None,
              tags: Some(vec!["my_tag".to_string(), "other".to_string()]),
              transformations_params: None,
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var messageOut = await svix.Message.CreateAsync("app_id", new MessageIn{
              eventId: "unique-msg-identifier",
              eventType: "user.signup",
              payload: /* ... */,
              channels: new string[] {"project_123", "group_2"},
              payloadRetentionPeriod: 90,
              application: null,
              tags: new string[] {"my_tag", "other"},
              transformationsParams: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix message create "app_id" '{
              "eventId": "unique-msg-identifier",
              "eventType": "user.signup",
              "payload": {"email":"test@example.com","type":"user.created","username":"test_user"},
              "channels": ["project_123", "group_2"],
              "payloadRetentionPeriod": 90,
              "application": null,
              "tags": ["my_tag", "other"],
              "transformationsParams": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "eventId": "unique-msg-identifier",
                  "eventType": "user.signup",
                  "payload": {"email":"test@example.com","type":"user.created","username":"test_user"},
                  "channels": ["project_123", "group_2"],
                  "payloadRetentionPeriod": 90,
                  "application": null,
                  "tags": ["my_tag", "other"],
                  "transformationsParams": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-msg
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}:
    get:
      description: Get a message by its ID or eventID.
      operationId: Message_getByIdOrEventId
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-0-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-1-schema
        style: simple
      - description: When `true` message payloads are included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Message
      tags:
      - Message
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const messageOut = await svix.message.get(\"app_id\", \"msg_id\"\
          );"
      - label: TypeScript
        lang: JavaScript
        source: "const messageOut = await svix.message.get(\"app_id\", \"msg_id\"\
          );"
      - label: Python
        lang: Python
        source: "message_out = svix.message.get(\"app_id\", \"msg_id\")"
      - label: Python (Async)
        lang: Python
        source: "message_out = await svix.message.get(\"app_id\", \"msg_id\")"
      - label: Go
        lang: Go
        source: "messageOut, err := svixClient.Message.Get(ctx, \"app_id\", \"msg_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: "val messageOut = svix.message.get(\"app_id\", \"msg_id\")"
      - label: Java
        lang: Java
        source: "MessageOut messageOut = svix.getMessage().get(\"app_id\", \"msg_id\"\
          )"
      - label: Ruby
        lang: Ruby
        source: "message_out = svix.message.get(\"app_id\", \"msg_id\")"
      - label: Rust
        lang: Rust
        source: "let message_out = svix.message().get(\"app_id\", \"msg_id\").await?;"
      - label: C#
        lang: C#
        source: "var messageOut = await svix.Message.GetAsync(\"app_id\", \"msg_id\"\
          )"
      - label: CLI
        lang: Shell
        source: svix message get "app_id" "msg_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/content:
    delete:
      description: |-
        Delete the given message's payload. Useful in cases when a message was accidentally sent with sensitive content.

        The message can't be replayed or resent once its payload has been deleted or expired.
      operationId: Message_deletePayload
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-0-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-1-schema
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete message payload
      tags:
      - Message
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "await svix.message.expungeContent(\"app_id\", \"msg_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "await svix.message.expungeContent(\"app_id\", \"msg_id\");"
      - label: Python
        lang: Python
        source: "svix.message.expunge_content(\"app_id\", \"msg_id\")"
      - label: Python (Async)
        lang: Python
        source: "await svix.message.expunge_content(\"app_id\", \"msg_id\")"
      - label: Go
        lang: Go
        source: "err := svixClient.Message.ExpungeContent(ctx, \"app_id\", \"msg_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: "svix.message.expungeContent(\"app_id\", \"msg_id\")"
      - label: Java
        lang: Java
        source: "svix.getMessage().expungeContent(\"app_id\", \"msg_id\")"
      - label: Ruby
        lang: Ruby
        source: "svix.message.expunge_content(\"app_id\", \"msg_id\")"
      - label: Rust
        lang: Rust
        source: "svix.message().expunge_content(\"app_id\", \"msg_id\").await?;"
      - label: C#
        lang: C#
        source: "await svix.Message.ExpungeContentAsync(\"app_id\", \"msg_id\")"
      - label: CLI
        lang: Shell
        source: svix message expunge-content "app_id" "msg_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/content/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-msg-msg_id-content
      x-accepts: application/json
  /api/v1/app/{app_id}/attempt/endpoint/{endpoint_id}:
    get:
      description: |
        List attempts by endpoint id

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.
      operationId: MessageAttempt_listByEndpoint
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-1-schema
        style: form
      - description: Filter response based on the delivery status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Filter response based on the HTTP status code
        explode: true
        in: query
        name: status_code_class
        required: false
        schema:
          $ref: '#/components/schemas/StatusCodeClass'
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-4-schema
        style: form
      - description: Filter response based on the tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-5-schema
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: When `true` attempt content is included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` attempt content is included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-8-schema
        style: form
      - description: "When `true`, the message information is included in the response"
        explode: true
        in: query
        name: with_msg
        required: false
        schema:
          default: false
          description: "When `true`, the message information is included in the response"
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-9-schema
        style: form
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-10-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-11-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-12-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempts By Endpoint
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByEndpoint(\"\
          app_id\", \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByEndpoint(\"\
          app_id\", \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_endpoint(\"\
          app_id\", \"endpoint_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_attempt_out = await svix.message_attempt.list_by_endpoint(\"\
          app_id\", \"endpoint_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageAttemptOut, err := svixClient.MessageAttempt.ListByEndpoint(ctx,\
          \ \"app_id\", \"endpoint_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseMessageAttemptOut = svix.messageAttempt.listByEndpoint(\"\
          app_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "ListResponseMessageAttemptOut listResponseMessageAttemptOut = svix.getMessageAttempt().listByEndpoint(\"\
          app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_endpoint(\"\
          app_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_message_attempt_out = svix.message_attempt().list_by_endpoint(\"\
          app_id\", \"endpoint_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseMessageAttemptOut = await svix.MessageAttempt.ListByEndpointAsync(\"\
          app_id\", \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-by-endpoint "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/attempt/endpoint/{endpoint_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-attempt-endpoint-endpoint_id
      x-accepts: application/json
  /api/v1/app/{app_id}/attempt/msg/{msg_id}:
    get:
      description: |
        List attempts by message id

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.
      operationId: MessageAttempt_listByMsgAttemptedDestinations
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-1-schema
        style: form
      - description: Filter response based on the delivery status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Filter response based on the HTTP status code
        explode: true
        in: query
        name: status_code_class
        required: false
        schema:
          $ref: '#/components/schemas/StatusCodeClass'
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-4-schema
        style: form
      - description: Filter response based on the tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-5-schema
        style: form
      - description: Filter the attempts based on the attempted endpoint
        explode: true
        in: query
        name: endpoint_id
        required: false
        schema:
          description: Filter the attempts based on the attempted endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-6-schema
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: When `true` attempt content is included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` attempt content is included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-9-schema
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-10-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-11-schema
        style: simple
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-12-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempts By Msg
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByMsg(\"\
          app_id\", \"msg_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByMsg(\"\
          app_id\", \"msg_id\");"
      - label: Python
        lang: Python
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_msg(\"\
          app_id\", \"msg_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_attempt_out = await svix.message_attempt.list_by_msg(\"\
          app_id\", \"msg_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageAttemptOut, err := svixClient.MessageAttempt.ListByMsg(ctx,\
          \ \"app_id\", \"msg_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseMessageAttemptOut = svix.messageAttempt.listByMsg(\"\
          app_id\", \"msg_id\")"
      - label: Java
        lang: Java
        source: "ListResponseMessageAttemptOut listResponseMessageAttemptOut = svix.getMessageAttempt().listByMsg(\"\
          app_id\", \"msg_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_msg(\"\
          app_id\", \"msg_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_message_attempt_out = svix.message_attempt().list_by_msg(\"\
          app_id\", \"msg_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseMessageAttemptOut = await svix.MessageAttempt.ListByMsgAsync(\"\
          app_id\", \"msg_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-by-msg "app_id" "msg_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/attempt/msg/{msg_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-attempt-msg-msg_id
      x-accepts: application/json
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/msg:
    get:
      description: |
        List messages for a particular endpoint. Additionally includes metadata about the latest message attempt.

        The `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.
      operationId: MessageAttempt_listAttemptedMessages
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-1-schema
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-2-schema
        style: form
      - description: Filter response based on the message tags
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter response based on the message tags
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-3-schema
        style: form
      - description: Filter response based on the delivery status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: When `true` message payloads are included in the response
        explode: true
        in: query
        name: with_content
        required: false
        schema:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-7-schema
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-8-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-9-schema
        style: simple
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-10-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EndpointMessageOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempted Messages
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseEndpointMessageOut = await svix.messageAttempt.listAttemptedMessages(\"\
          app_id\", \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseEndpointMessageOut = await svix.messageAttempt.listAttemptedMessages(\"\
          app_id\", \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "list_response_endpoint_message_out = svix.message_attempt.list_attempted_messages(\"\
          app_id\", \"endpoint_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_endpoint_message_out = await svix.message_attempt.list_attempted_messages(\"\
          app_id\", \"endpoint_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseEndpointMessageOut, err := svixClient.MessageAttempt.ListAttemptedMessages(ctx,\
          \ \"app_id\", \"endpoint_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseEndpointMessageOut = svix.messageAttempt.listAttemptedMessages(\"\
          app_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "ListResponseEndpointMessageOut listResponseEndpointMessageOut = svix.getMessageAttempt().listAttemptedMessages(\"\
          app_id\", \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_endpoint_message_out = svix.message_attempt.list_attempted_messages(\"\
          app_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_endpoint_message_out = svix.message_attempt().list_attempted_messages(\"\
          app_id\", \"endpoint_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseEndpointMessageOut = await svix.MessageAttempt.ListAttemptedMessagesAsync(\"\
          app_id\", \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-attempted-messages "app_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-msg
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint:
    get:
      description: |-
        List endpoints attempted by a given message. Additionally includes metadata about the latest message attempt.
        By default, endpoints are listed in ascending order by ID.
      operationId: MessageAttempt_listAttemptedDestinations
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-1-schema
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-2-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-3-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageEndpointOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempted Destinations
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseMessageEndpointOut = await svix.messageAttempt.listAttemptedDestinations(\"\
          app_id\", \"msg_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseMessageEndpointOut = await svix.messageAttempt.listAttemptedDestinations(\"\
          app_id\", \"msg_id\");"
      - label: Python
        lang: Python
        source: "list_response_message_endpoint_out = svix.message_attempt.list_attempted_destinations(\"\
          app_id\", \"msg_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_endpoint_out = await svix.message_attempt.list_attempted_destinations(\"\
          app_id\", \"msg_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageEndpointOut, err := svixClient.MessageAttempt.ListAttemptedDestinations(ctx,\
          \ \"app_id\", \"msg_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseMessageEndpointOut = svix.messageAttempt.listAttemptedDestinations(\"\
          app_id\", \"msg_id\")"
      - label: Java
        lang: Java
        source: "ListResponseMessageEndpointOut listResponseMessageEndpointOut = svix.getMessageAttempt().listAttemptedDestinations(\"\
          app_id\", \"msg_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_message_endpoint_out = svix.message_attempt.list_attempted_destinations(\"\
          app_id\", \"msg_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_message_endpoint_out = svix.message_attempt().list_attempted_destinations(\"\
          app_id\", \"msg_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseMessageEndpointOut = await svix.MessageAttempt.ListAttemptedDestinationsAsync(\"\
          app_id\", \"msg_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-attempted-destinations "app_id" "msg_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-endpoint
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt:
    get:
      deprecated: true
      description: |
        DEPRECATED: please use list_attempts with endpoint_id as a query parameter instead.

        List the message attempts for a particular endpoint.

        Returning the endpoint.

        The `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.
      operationId: MessageAttempt_listByEndpointDeprecated
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-1-schema
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-2-schema
        style: form
      - description: Filter response based on the tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-3-schema
        style: form
      - description: Filter response based on the delivery status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-7-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-8-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-9-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-10-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptEndpointOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempts For Endpoint
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseMessageAttemptEndpointOut = await svix.messageAttempt.listByEndpointDeprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseMessageAttemptEndpointOut = await svix.messageAttempt.listByEndpointDeprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\");"
      - label: Python
        lang: Python
        source: "list_response_message_attempt_endpoint_out = svix.message_attempt.list_by_endpoint_deprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_attempt_endpoint_out = await svix.message_attempt.list_by_endpoint_deprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageAttemptEndpointOut, err := svixClient.MessageAttempt.ListByEndpointDeprecated(ctx,\
          \ \"app_id\", \"msg_id\", \"endpoint_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseMessageAttemptEndpointOut = svix.messageAttempt.listByEndpointDeprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\")"
      - label: Java
        lang: Java
        source: "ListResponseMessageAttemptEndpointOut listResponseMessageAttemptEndpointOut\
          \ = svix.getMessageAttempt().listByEndpointDeprecated(\"app_id\", \"msg_id\"\
          , \"endpoint_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_message_attempt_endpoint_out = svix.message_attempt.list_by_endpoint_deprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_message_attempt_endpoint_out = svix.message_attempt().list_by_endpoint_deprecated(\"\
          app_id\", \"msg_id\", \"endpoint_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseMessageAttemptEndpointOut = await svix.MessageAttempt.ListByEndpointDeprecatedAsync(\"\
          app_id\", \"msg_id\", \"endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-by-endpoint-deprecated "app_id" "msg_id"
          "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/attempt:
    get:
      deprecated: true
      description: |-
        Deprecated: Please use "List Attempts by Endpoint" and "List Attempts by Msg" instead.

        Note that by default this endpoint is limited to retrieving 90 days' worth of data
        relative to now or, if an iterator is provided, 90 days before/after the time indicated
        by the iterator ID. If you require data beyond those time ranges, you will need to explicitly
        set the `before` or `after` parameter as appropriate.

        `msg_id`: Use a message id or a message `eventId`
      operationId: MessageAttempt_listByMsgAttemptedDestinations
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-1-schema
        style: form
      - description: Filter the attempts based on the attempted endpoint
        explode: true
        in: query
        name: endpoint_id
        required: false
        schema:
          description: Filter the attempts based on the attempted endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-2-schema
        style: form
      - description: Filter response based on the channel
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-3-schema
        style: form
      - description: Filter response based on the tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-4-schema
        style: form
      - description: Filter response based on the delivery status
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      - description: Only include items created before a certain date
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Only include items created after a certain date
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Filter response based on the HTTP status code
        explode: true
        in: query
        name: status_code_class
        required: false
        schema:
          $ref: '#/components/schemas/StatusCodeClass'
        style: form
      - description: Filter response based on the event type
        explode: true
        in: query
        name: event_types
        required: false
        schema:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-9-schema-items
          nullable: true
          type: array
          uniqueItems: true
        style: form
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-10-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-11-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Attempts
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByMsgDeprecated(\"\
          app_id\", \"msg_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const listResponseMessageAttemptOut = await svix.messageAttempt.listByMsgDeprecated(\"\
          app_id\", \"msg_id\");"
      - label: Python
        lang: Python
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_msg_deprecated(\"\
          app_id\", \"msg_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_message_attempt_out = await svix.message_attempt.list_by_msg_deprecated(\"\
          app_id\", \"msg_id\", None)"
      - label: Go
        lang: Go
        source: "listResponseMessageAttemptOut, err := svixClient.MessageAttempt.ListByMsgDeprecated(ctx,\
          \ \"app_id\", \"msg_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: "val listResponseMessageAttemptOut = svix.messageAttempt.listByMsgDeprecated(\"\
          app_id\", \"msg_id\")"
      - label: Java
        lang: Java
        source: "ListResponseMessageAttemptOut listResponseMessageAttemptOut = svix.getMessageAttempt().listByMsgDeprecated(\"\
          app_id\", \"msg_id\")"
      - label: Ruby
        lang: Ruby
        source: "list_response_message_attempt_out = svix.message_attempt.list_by_msg_deprecated(\"\
          app_id\", \"msg_id\")"
      - label: Rust
        lang: Rust
        source: "let list_response_message_attempt_out = svix.message_attempt().list_by_msg_deprecated(\"\
          app_id\", \"msg_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var listResponseMessageAttemptOut = await svix.MessageAttempt.ListByMsgDeprecatedAsync(\"\
          app_id\", \"msg_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt list-by-msg-deprecated "app_id" "msg_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-attempt
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}:
    get:
      description: "`msg_id`: Use a message id or a message `eventId`"
      operationId: MessageAttempt_getByDestination
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-0-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-1-schema
        style: simple
      - description: The attempt's ID
        explode: false
        in: path
        name: attempt_id
        required: true
        schema:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-2-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageAttemptOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Attempt
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const messageAttemptOut = await svix.messageAttempt.get(\"app_id\"\
          , \"msg_id\", \"attempt_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const messageAttemptOut = await svix.messageAttempt.get(\"app_id\"\
          , \"msg_id\", \"attempt_id\");"
      - label: Python
        lang: Python
        source: "message_attempt_out = svix.message_attempt.get(\"app_id\", \"msg_id\"\
          , \"attempt_id\")"
      - label: Python (Async)
        lang: Python
        source: "message_attempt_out = await svix.message_attempt.get(\"app_id\",\
          \ \"msg_id\", \"attempt_id\")"
      - label: Go
        lang: Go
        source: "messageAttemptOut, err := svixClient.MessageAttempt.Get(ctx, \"app_id\"\
          , \"msg_id\", \"attempt_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val messageAttemptOut = svix.messageAttempt.get(\"app_id\", \"msg_id\"\
          , \"attempt_id\")"
      - label: Java
        lang: Java
        source: "MessageAttemptOut messageAttemptOut = svix.getMessageAttempt().get(\"\
          app_id\", \"msg_id\", \"attempt_id\")"
      - label: Ruby
        lang: Ruby
        source: "message_attempt_out = svix.message_attempt.get(\"app_id\", \"msg_id\"\
          , \"attempt_id\")"
      - label: Rust
        lang: Rust
        source: "let message_attempt_out = svix.message_attempt().get(\"app_id\",\
          \ \"msg_id\", \"attempt_id\").await?;"
      - label: C#
        lang: C#
        source: "var messageAttemptOut = await svix.MessageAttempt.GetAsync(\"app_id\"\
          , \"msg_id\", \"attempt_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt get "app_id" "msg_id" "attempt_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-attempt-attempt_id
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/content:
    delete:
      description: Deletes the given attempt's response body. Useful when an endpoint
        accidentally returned sensitive content.
      operationId: MessageAttempt_deleteResponseBody
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-0-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-1-schema
        style: simple
      - description: The attempt's ID
        explode: false
        in: path
        name: attempt_id
        required: true
        schema:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-2-schema
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete attempt response body
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "await svix.messageAttempt.expungeContent(\"app_id\", \"msg_id\",\
          \ \"attempt_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "await svix.messageAttempt.expungeContent(\"app_id\", \"msg_id\",\
          \ \"attempt_id\");"
      - label: Python
        lang: Python
        source: "svix.message_attempt.expunge_content(\"app_id\", \"msg_id\", \"attempt_id\"\
          )"
      - label: Python (Async)
        lang: Python
        source: "await svix.message_attempt.expunge_content(\"app_id\", \"msg_id\"\
          , \"attempt_id\")"
      - label: Go
        lang: Go
        source: "err := svixClient.MessageAttempt.ExpungeContent(ctx, \"app_id\",\
          \ \"msg_id\", \"attempt_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "svix.messageAttempt.expungeContent(\"app_id\", \"msg_id\", \"attempt_id\"\
          )"
      - label: Java
        lang: Java
        source: "svix.getMessageAttempt().expungeContent(\"app_id\", \"msg_id\", \"\
          attempt_id\")"
      - label: Ruby
        lang: Ruby
        source: "svix.message_attempt.expunge_content(\"app_id\", \"msg_id\", \"attempt_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "svix.message_attempt().expunge_content(\"app_id\", \"msg_id\", \"\
          attempt_id\").await?;"
      - label: C#
        lang: C#
        source: "await svix.MessageAttempt.ExpungeContentAsync(\"app_id\", \"msg_id\"\
          , \"attempt_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt expunge-content "app_id" "msg_id" "attempt_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/content/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content
      x-accepts: application/json
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend:
    post:
      description: Resend a message to the specified endpoint.
      operationId: MessageAttempt_resendMessageToEndpoint
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-0-schema
        style: simple
      - description: The msg's ID or UID
        explode: false
        in: path
        name: msg_id
        required: true
        schema:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-1-schema
        style: simple
      - description: The ep's ID or UID
        explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-2-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Resend Webhook
      tags:
      - Message Attempt
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "await svix.messageAttempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          );"
      - label: TypeScript
        lang: JavaScript
        source: "await svix.messageAttempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          );"
      - label: Python
        lang: Python
        source: "svix.message_attempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          , None)"
      - label: Python (Async)
        lang: Python
        source: "await svix.message_attempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          , None)"
      - label: Go
        lang: Go
        source: "err := svixClient.MessageAttempt.Resend(ctx, \"app_id\", \"msg_id\"\
          , \"endpoint_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "svix.messageAttempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          )"
      - label: Java
        lang: Java
        source: "svix.getMessageAttempt().resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          )"
      - label: Ruby
        lang: Ruby
        source: "svix.message_attempt.resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "svix.message_attempt().resend(\"app_id\", \"msg_id\", \"endpoint_id\"\
          , None).await?;"
      - label: C#
        lang: C#
        source: "await svix.MessageAttempt.ResendAsync(\"app_id\", \"msg_id\", \"\
          endpoint_id\")"
      - label: CLI
        lang: Shell
        source: svix message-attempt resend "app_id" "msg_id" "endpoint_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend
      x-accepts: application/json
  /api/v1/stats/usage/app:
    post:
      description: |-
        Creates a background task to calculate the message destinations for all applications in the environment.

        Note that this endpoint is asynchronous. You will need to poll the `Get Background Task` endpoint to
        retrieve the results of the operation.
      operationId: Statistics_calculateMessageDestinations
      parameters:
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUsageStatsIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsageStatsOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Aggregate App Stats
      tags:
      - Statistics
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const appUsageStatsOut = await svix.statistics.aggregateAppStats({
              appIds: null
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const appUsageStatsOut = await svix.statistics.aggregateAppStats({
              appIds: null
          });
      - label: Python
        lang: Python
        source: |-
          app_usage_stats_out = svix.statistics.aggregate_app_stats(AppUsageStatsIn(
              app_ids=None
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          app_usage_stats_out = await svix.statistics.aggregate_app_stats(AppUsageStatsIn(
              app_ids=None
          ), None)
      - label: Go
        lang: Go
        source: |-
          appUsageStatsOut, err := svixClient.Statistics.AggregateAppStats(ctx, &AppUsageStatsIn{
              AppIds: nil,
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val appUsageStatsOut = svix.statistics.aggregateAppStats(AppUsageStatsIn()
              .appIds(null)
          )
      - label: Java
        lang: Java
        source: |-
          AppUsageStatsOut appUsageStatsOut = svix.getStatistics().aggregateAppStats(new AppUsageStatsIn()
              .appIds(null)
          )
      - label: Ruby
        lang: Ruby
        source: |-
          app_usage_stats_out = svix.statistics.aggregate_app_stats(Svix::AppUsageStatsIn.new({
              "app_ids": nil
          }))
      - label: Rust
        lang: Rust
        source: |-
          let app_usage_stats_out = svix.statistics().aggregate_app_stats(AppUsageStatsIn {
              app_ids: None,
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var appUsageStatsOut = await svix.Statistics.AggregateAppStatsAsync(new AppUsageStatsIn{
              appIds: null
          })
      - label: CLI
        lang: Shell
        source: |-
          svix statistics aggregate-app-stats '{
              "appIds": null
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/stats/usage/app/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "appIds": null
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-stats-usage-app
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/stats/usage/event-types:
    put:
      description: |-
        Creates a background task to calculate the listed event types for all apps in the organization.

        Note that this endpoint is asynchronous. You will need to poll the `Get Background Task` endpoint to
        retrieve the results of the operation.
      operationId: Statistics_calculateEventTypesForAllApps
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateEventTypesOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Aggregate Event Types
      tags:
      - Statistics
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const aggregateEventTypesOut = await svix.statistics.aggregateEventTypes();
      - label: TypeScript
        lang: JavaScript
        source: const aggregateEventTypesOut = await svix.statistics.aggregateEventTypes();
      - label: Python
        lang: Python
        source: aggregate_event_types_out = svix.statistics.aggregate_event_types()
      - label: Python (Async)
        lang: Python
        source: aggregate_event_types_out = await svix.statistics.aggregate_event_types()
      - label: Go
        lang: Go
        source: "aggregateEventTypesOut, err := svixClient.Statistics.AggregateEventTypes(ctx)"
      - label: Kotlin
        lang: Kotlin
        source: val aggregateEventTypesOut = svix.statistics.aggregateEventTypes()
      - label: Java
        lang: Java
        source: AggregateEventTypesOut aggregateEventTypesOut = svix.getStatistics().aggregateEventTypes()
      - label: Ruby
        lang: Ruby
        source: aggregate_event_types_out = svix.statistics.aggregate_event_types()
      - label: Rust
        lang: Rust
        source: let aggregate_event_types_out = svix.statistics().aggregate_event_types().await?;
      - label: C#
        lang: C#
        source: var aggregateEventTypesOut = await svix.Statistics.AggregateEventTypesAsync()
      - label: CLI
        lang: Shell
        source: 'svix statistics aggregate-event-types '
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/stats/usage/event-types/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-stats-usage-event-types
      x-accepts: application/json
  /api/v1/app/{app_id}/integration:
    get:
      description: List the application's integrations.
      operationId: Integration_listIntegrations
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-0-schema
        style: simple
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: The iterator returned from a prior invocation
        explode: true
        in: query
        name: iterator
        required: false
        schema:
          description: The iterator returned from a prior invocation
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_IntegrationOut_'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: List Integrations
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: const listResponseIntegrationOut = await svix.integration.list("app_id");
      - label: TypeScript
        lang: JavaScript
        source: const listResponseIntegrationOut = await svix.integration.list("app_id");
      - label: Python
        lang: Python
        source: "list_response_integration_out = svix.integration.list(\"app_id\"\
          , None)"
      - label: Python (Async)
        lang: Python
        source: "list_response_integration_out = await svix.integration.list(\"app_id\"\
          , None)"
      - label: Go
        lang: Go
        source: "listResponseIntegrationOut, err := svixClient.Integration.List(ctx,\
          \ \"app_id\", nil)"
      - label: Kotlin
        lang: Kotlin
        source: val listResponseIntegrationOut = svix.integration.list("app_id")
      - label: Java
        lang: Java
        source: ListResponseIntegrationOut listResponseIntegrationOut = svix.getIntegration().list("app_id")
      - label: Ruby
        lang: Ruby
        source: list_response_integration_out = svix.integration.list("app_id")
      - label: Rust
        lang: Rust
        source: "let list_response_integration_out = svix.integration().list(\"app_id\"\
          , None).await?;"
      - label: C#
        lang: C#
        source: var listResponseIntegrationOut = await svix.Integration.ListAsync("app_id")
      - label: CLI
        lang: Shell
        source: svix integration list "app_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration
      x-accepts: application/json
    post:
      description: Create an integration.
      operationId: Integration_createNewIntegration
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-post-parameters-0-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Create Integration
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const integrationOut = await svix.integration.create("app_id", {
              name: "Example Integration"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const integrationOut = await svix.integration.create("app_id", {
              name: "Example Integration"
          });
      - label: Python
        lang: Python
        source: |-
          integration_out = svix.integration.create("app_id", IntegrationIn(
              name="Example Integration"
          ), None)
      - label: Python (Async)
        lang: Python
        source: |-
          integration_out = await svix.integration.create("app_id", IntegrationIn(
              name="Example Integration"
          ), None)
      - label: Go
        lang: Go
        source: |-
          integrationOut, err := svixClient.Integration.Create(ctx, "app_id", &IntegrationIn{
              Name: "Example Integration",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val integrationOut = svix.integration.create("app_id", IntegrationIn()
              .name("Example Integration")
          )
      - label: Java
        lang: Java
        source: |-
          IntegrationOut integrationOut = svix.getIntegration().create("app_id", new IntegrationIn()
              .name("Example Integration")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          integration_out = svix.integration.create("app_id", Svix::IntegrationIn.new({
              "name": "Example Integration"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let integration_out = svix.integration().create("app_id", IntegrationIn {
              name: "Example Integration".to_string(),
          }, None).await?;
      - label: C#
        lang: C#
        source: |-
          var integrationOut = await svix.Integration.CreateAsync("app_id", new IntegrationIn{
              name: "Example Integration"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix integration create "app_id" '{
              "name": "Example Integration"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "Example Integration"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-integration
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/integration/{integ_id}:
    delete:
      description: Delete an integration.
      operationId: Integration_deleteById
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-0-schema
        style: simple
      - description: The integ's ID
        explode: false
        in: path
        name: integ_id
        required: true
        schema:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-1-schema
        style: simple
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Delete Integration
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "await svix.integration.delete(\"app_id\", \"integ_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "await svix.integration.delete(\"app_id\", \"integ_id\");"
      - label: Python
        lang: Python
        source: "svix.integration.delete(\"app_id\", \"integ_id\")"
      - label: Python (Async)
        lang: Python
        source: "await svix.integration.delete(\"app_id\", \"integ_id\")"
      - label: Go
        lang: Go
        source: "err := svixClient.Integration.Delete(ctx, \"app_id\", \"integ_id\"\
          )"
      - label: Kotlin
        lang: Kotlin
        source: "svix.integration.delete(\"app_id\", \"integ_id\")"
      - label: Java
        lang: Java
        source: "svix.getIntegration().delete(\"app_id\", \"integ_id\")"
      - label: Ruby
        lang: Ruby
        source: "svix.integration.delete(\"app_id\", \"integ_id\")"
      - label: Rust
        lang: Rust
        source: "svix.integration().delete(\"app_id\", \"integ_id\").await?;"
      - label: C#
        lang: C#
        source: "await svix.Integration.DeleteAsync(\"app_id\", \"integ_id\")"
      - label: CLI
        lang: Shell
        source: svix integration delete "app_id" "integ_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'DELETE' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-integration-integ_id
      x-accepts: application/json
    get:
      description: Get an integration.
      operationId: Integration_getById
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-0-schema
        style: simple
      - description: The integ's ID
        explode: false
        in: path
        name: integ_id
        required: true
        schema:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Integration
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const integrationOut = await svix.integration.get(\"app_id\", \"\
          integ_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const integrationOut = await svix.integration.get(\"app_id\", \"\
          integ_id\");"
      - label: Python
        lang: Python
        source: "integration_out = svix.integration.get(\"app_id\", \"integ_id\")"
      - label: Python (Async)
        lang: Python
        source: "integration_out = await svix.integration.get(\"app_id\", \"integ_id\"\
          )"
      - label: Go
        lang: Go
        source: "integrationOut, err := svixClient.Integration.Get(ctx, \"app_id\"\
          , \"integ_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val integrationOut = svix.integration.get(\"app_id\", \"integ_id\"\
          )"
      - label: Java
        lang: Java
        source: "IntegrationOut integrationOut = svix.getIntegration().get(\"app_id\"\
          , \"integ_id\")"
      - label: Ruby
        lang: Ruby
        source: "integration_out = svix.integration.get(\"app_id\", \"integ_id\")"
      - label: Rust
        lang: Rust
        source: "let integration_out = svix.integration().get(\"app_id\", \"integ_id\"\
          ).await?;"
      - label: C#
        lang: C#
        source: "var integrationOut = await svix.Integration.GetAsync(\"app_id\",\
          \ \"integ_id\")"
      - label: CLI
        lang: Shell
        source: svix integration get "app_id" "integ_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration-integ_id
      x-accepts: application/json
    put:
      description: Update an integration.
      operationId: Integration_updateIntegration
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-0-schema
        style: simple
      - description: The integ's ID
        explode: false
        in: path
        name: integ_id
        required: true
        schema:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-1-schema
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Update Integration
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: |-
          const integrationOut = await svix.integration.update("app_id", "integ_id", {
              name: "Example Integration"
          });
      - label: TypeScript
        lang: JavaScript
        source: |-
          const integrationOut = await svix.integration.update("app_id", "integ_id", {
              name: "Example Integration"
          });
      - label: Python
        lang: Python
        source: |-
          integration_out = svix.integration.update("app_id", "integ_id", IntegrationUpdate(
              name="Example Integration"
          ))
      - label: Python (Async)
        lang: Python
        source: |-
          integration_out = await svix.integration.update("app_id", "integ_id", IntegrationUpdate(
              name="Example Integration"
          ))
      - label: Go
        lang: Go
        source: |-
          integrationOut, err := svixClient.Integration.Update(ctx, "app_id", "integ_id", &IntegrationUpdate{
              Name: "Example Integration",
          })
      - label: Kotlin
        lang: Kotlin
        source: |-
          val integrationOut = svix.integration.update("app_id", "integ_id", IntegrationUpdate()
              .name("Example Integration")
          )
      - label: Java
        lang: Java
        source: |-
          IntegrationOut integrationOut = svix.getIntegration().update("app_id", "integ_id", new IntegrationUpdate()
              .name("Example Integration")
          )
      - label: Ruby
        lang: Ruby
        source: |-
          integration_out = svix.integration.update("app_id", "integ_id", Svix::IntegrationUpdate.new({
              "name": "Example Integration"
          }))
      - label: Rust
        lang: Rust
        source: |-
          let integration_out = svix.integration().update("app_id", "integ_id", IntegrationUpdate {
              name: "Example Integration".to_string(),
          }).await?;
      - label: C#
        lang: C#
        source: |-
          var integrationOut = await svix.Integration.UpdateAsync("app_id", "integ_id", new IntegrationUpdate{
              name: "Example Integration"
          })
      - label: CLI
        lang: Shell
        source: |-
          svix integration update "app_id" "integ_id" '{
              "name": "Example Integration"
          }'
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'PUT' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/{integ_id}/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{
                  "name": "Example Integration"
              }'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-integration-integ_id
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/app/{app_id}/integration/{integ_id}/key:
    get:
      description: Get an integration's key.
      operationId: Integration_getKey
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-0-schema
        style: simple
      - description: The integ's ID
        explode: false
        in: path
        name: integ_id
        required: true
        schema:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-1-schema
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationKeyOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Get Integration Key
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const integrationKeyOut = await svix.integration.getKey(\"app_id\"\
          , \"integ_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const integrationKeyOut = await svix.integration.getKey(\"app_id\"\
          , \"integ_id\");"
      - label: Python
        lang: Python
        source: "integration_key_out = svix.integration.get_key(\"app_id\", \"integ_id\"\
          )"
      - label: Python (Async)
        lang: Python
        source: "integration_key_out = await svix.integration.get_key(\"app_id\",\
          \ \"integ_id\")"
      - label: Go
        lang: Go
        source: "integrationKeyOut, err := svixClient.Integration.GetKey(ctx, \"app_id\"\
          , \"integ_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val integrationKeyOut = svix.integration.getKey(\"app_id\", \"integ_id\"\
          )"
      - label: Java
        lang: Java
        source: "IntegrationKeyOut integrationKeyOut = svix.getIntegration().getKey(\"\
          app_id\", \"integ_id\")"
      - label: Ruby
        lang: Ruby
        source: "integration_key_out = svix.integration.get_key(\"app_id\", \"integ_id\"\
          )"
      - label: Rust
        lang: Rust
        source: "let integration_key_out = svix.integration().get_key(\"app_id\",\
          \ \"integ_id\").await?;"
      - label: C#
        lang: C#
        source: "var integrationKeyOut = await svix.Integration.GetKeyAsync(\"app_id\"\
          , \"integ_id\")"
      - label: CLI
        lang: Shell
        source: svix integration get-key "app_id" "integ_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/{integ_id}/key/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration-integ_id-key
      x-accepts: application/json
  /api/v1/app/{app_id}/integration/{integ_id}/key/rotate:
    post:
      description: Rotate the integration's key. The previous key will be immediately
        revoked.
      operationId: Integration_rotateIntegrationKey
      parameters:
      - description: The app's ID or UID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-0-schema
        style: simple
      - description: The integ's ID
        explode: false
        in: path
        name: integ_id
        required: true
        schema:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-1-schema
        style: simple
      - description: The request's idempotency key
        explode: false
        in: header
        name: idempotency-key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationKeyOut'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      security:
      - HTTPBearer: []
      summary: Rotate Integration Key
      tags:
      - Integration
      x-codeSamples:
      - label: JavaScript
        lang: JavaScript
        source: "const integrationKeyOut = await svix.integration.rotateKey(\"app_id\"\
          , \"integ_id\");"
      - label: TypeScript
        lang: JavaScript
        source: "const integrationKeyOut = await svix.integration.rotateKey(\"app_id\"\
          , \"integ_id\");"
      - label: Python
        lang: Python
        source: "integration_key_out = svix.integration.rotate_key(\"app_id\", \"\
          integ_id\", None)"
      - label: Python (Async)
        lang: Python
        source: "integration_key_out = await svix.integration.rotate_key(\"app_id\"\
          , \"integ_id\", None)"
      - label: Go
        lang: Go
        source: "integrationKeyOut, err := svixClient.Integration.RotateKey(ctx, \"\
          app_id\", \"integ_id\")"
      - label: Kotlin
        lang: Kotlin
        source: "val integrationKeyOut = svix.integration.rotateKey(\"app_id\", \"\
          integ_id\")"
      - label: Java
        lang: Java
        source: "IntegrationKeyOut integrationKeyOut = svix.getIntegration().rotateKey(\"\
          app_id\", \"integ_id\")"
      - label: Ruby
        lang: Ruby
        source: "integration_key_out = svix.integration.rotate_key(\"app_id\", \"\
          integ_id\")"
      - label: Rust
        lang: Rust
        source: "let integration_key_out = svix.integration().rotate_key(\"app_id\"\
          , \"integ_id\", None).await?;"
      - label: C#
        lang: C#
        source: "var integrationKeyOut = await svix.Integration.RotateKeyAsync(\"\
          app_id\", \"integ_id\")"
      - label: CLI
        lang: Shell
        source: svix integration rotate-key "app_id" "integ_id"
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'POST' \
            'https://api.eu.svix.com/api/v1/app/{app_id}/integration/{integ_id}/key/rotate/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-integration-integ_id-key-rotate
      x-accepts: application/json
  /api/v1/health:
    get:
      description: Verify the API server is up and running.
      operationId: Health_checkServerStatus
      responses:
        "204":
          description: no content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
          x-do-not-generate: true
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
          x-do-not-generate: true
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
          x-do-not-generate: true
      summary: Health
      tags:
      - Health
      x-codeSamples:
      - label: cURL
        lang: Shell
        source: |-
          curl -X 'GET' \
            'https://api.eu.svix.com/api/v1/health/' \
            -H 'Authorization: Bearer AUTH_TOKEN' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json'
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--api-v1-health
      x-accepts: application/json
components:
  schemas:
    EndpointCreatedEvent:
      description: Sent when an endpoint is created.
      properties:
        data:
          $ref: '#/components/schemas/EndpointCreatedEventData'
        type:
          default: endpoint.created
          enum:
          - endpoint.created
          example: endpoint.created
          type: string
          x-konfig-original-example: endpoint.created
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointCreatedEvent-properties-type
      required:
      - data
      - type
      type: object
    EndpointCreatedEventData:
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-appUid
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-endpointId
        endpointUid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-endpointUid
      required:
      - appId
      - endpointId
      type: object
    EndpointDeletedEvent:
      description: Sent when an endpoint is deleted.
      properties:
        data:
          $ref: '#/components/schemas/EndpointDeletedEventData'
        type:
          default: endpoint.deleted
          enum:
          - endpoint.deleted
          example: endpoint.deleted
          type: string
          x-konfig-original-example: endpoint.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDeletedEvent-properties-type
      required:
      - data
      - type
      type: object
    EndpointDeletedEventData:
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-appUid
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-endpointId
        endpointUid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-endpointUid
      required:
      - appId
      - endpointId
      type: object
    EndpointDisabledEvent:
      description: Sent when an endpoint has been automatically disabled after continuous
        failures.
      properties:
        data:
          $ref: '#/components/schemas/EndpointDisabledEventData'
        type:
          default: endpoint.disabled
          enum:
          - endpoint.disabled
          example: endpoint.disabled
          type: string
          x-konfig-original-example: endpoint.disabled
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDisabledEvent-properties-type
      required:
      - data
      - type
      type: object
    EndpointDisabledEventData:
      description: Sent when an endpoint has been automatically disabled after continuous
        failures.
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-appUid
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-endpointId
        endpointUid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-endpointUid
        failSince:
          format: date-time
          type: string
      required:
      - appId
      - endpointId
      - failSince
      type: object
    EndpointUpdatedEvent:
      description: Sent when an endpoint is updated.
      properties:
        data:
          $ref: '#/components/schemas/EndpointUpdatedEventData'
        type:
          default: endpoint.updated
          enum:
          - endpoint.updated
          example: endpoint.updated
          type: string
          x-konfig-original-example: endpoint.updated
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdatedEvent-properties-type
      required:
      - data
      - type
      type: object
    EndpointUpdatedEventData:
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-appUid
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-endpointId
        endpointUid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-endpointUid
      required:
      - appId
      - endpointId
      type: object
    MessageAttemptExhaustedEvent:
      description: Sent when a message delivery has failed (all of the retry attempts
        have been exhausted).
      properties:
        data:
          $ref: '#/components/schemas/MessageAttemptExhaustedEventData'
        type:
          default: message.attempt.exhausted
          enum:
          - message.attempt.exhausted
          example: message.attempt.exhausted
          type: string
          x-konfig-original-example: message.attempt.exhausted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEvent-properties-type
      required:
      - data
      - type
      type: object
    MessageAttemptExhaustedEventData:
      description: Sent when a message delivery has failed (all of the retry attempts
        have been exhausted) as a "message.attempt.exhausted" type or after it's failed
        four times as a "message.attempt.failing" event.
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-appUid
        msgId:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-msgId
        msgEventId:
          description: The msg's UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-msgEventId
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-endpointId
        lastAttempt:
          $ref: '#/components/schemas/MessageAttemptFailedData'
      required:
      - appId
      - endpointId
      - lastAttempt
      - msgId
      type: object
    MessageAttemptFailedData:
      properties:
        id:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailedData-properties-id
        responseStatusCode:
          format: int16
          type: integer
        timestamp:
          format: date-time
          type: string
      required:
      - id
      - responseStatusCode
      - timestamp
      type: object
    MessageAttemptFailingEvent:
      description: |-
        Sent after a message has been failing for a few times.
        It's sent on the fourth failure. It complements `message.attempt.exhausted` which is sent after the last failure.
      properties:
        data:
          $ref: '#/components/schemas/MessageAttemptFailingEventData'
        type:
          default: message.attempt.failing
          enum:
          - message.attempt.failing
          example: message.attempt.failing
          type: string
          x-konfig-original-example: message.attempt.failing
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEvent-properties-type
      required:
      - data
      - type
      type: object
    MessageAttemptFailingEventData:
      description: Sent when a message delivery has failed (all of the retry attempts
        have been exhausted) as a "message.attempt.exhausted" type or after it's failed
        four times as a "message.attempt.failing" event.
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-appUid
        msgId:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-msgId
        msgEventId:
          description: The msg's UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-msgEventId
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-endpointId
        lastAttempt:
          $ref: '#/components/schemas/MessageAttemptFailedData'
      required:
      - appId
      - endpointId
      - lastAttempt
      - msgId
      type: object
    MessageAttemptRecoveredEvent:
      description: Sent on a successful dispatch after an earlier failure op webhook
        has already been sent.
      properties:
        data:
          $ref: '#/components/schemas/MessageAttemptRecoveredEventData'
        type:
          default: message.attempt.recovered
          enum:
          - message.attempt.recovered
          example: message.attempt.recovered
          type: string
          x-konfig-original-example: message.attempt.recovered
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEvent-properties-type
      required:
      - data
      - type
      type: object
    MessageAttemptRecoveredEventData:
      description: Sent when a message delivery has failed (all of the retry attempts
        have been exhausted) as a "message.attempt.exhausted" type or after it's failed
        four times as a "message.attempt.failing" event.
      properties:
        appId:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-appId
        appUid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-appUid
        msgId:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-msgId
        msgEventId:
          description: The msg's UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-msgEventId
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-endpointId
        lastAttempt:
          $ref: '#/components/schemas/MessageAttemptFailedData'
      required:
      - appId
      - endpointId
      - lastAttempt
      - msgId
      type: object
    AppPortalAccessIn:
      example:
        expiry: 604800
        featureFlags: []
      properties:
        featureFlags:
          description: The set of feature flags the created token will have access
            to.
          example: []
          items:
            example: cool-new-feature
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: cool-new-feature
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags-items
          type: array
          uniqueItems: true
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags
        expiry:
          default: 604800
          description: "How long the token will be valid for, in seconds. Valid values\
            \ are between 1 hour and 7 days. The default is 7 days."
          example: 604800
          format: uint64
          maximum: 604800
          minimum: 3600
          nullable: true
          type: integer
          x-konfig-original-example: 604800
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-expiry
      type: object
    AppPortalAccessOut:
      example:
        url: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
        token: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      properties:
        url:
          example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessOut-properties-url
        token:
          example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          type: string
          x-konfig-original-example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessOut-properties-token
      required:
      - token
      - url
      type: object
      x-konfig-is-used-in-successful-response: true
    HttpErrorOut:
      properties:
        code:
          type: string
        detail:
          type: string
      required:
      - code
      - detail
      title: HttpError
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - detail
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ValidationError:
      description: Validation errors have their own schema to provide context for
        invalid requests eg. mismatched types and out of bounds values. There may
        be any number of these per 422 UNPROCESSABLE ENTITY error.
      properties:
        loc:
          description: "The location as a [`Vec`] of [`String`]s -- often in the form\
            \ `[\"body\", \"field_name\"]`, `[\"query\", \"field_name\"]`, etc. They\
            \ may, however, be arbitrarily deep."
          items:
            type: string
          type: array
        msg:
          description: The message accompanying the validation error item.
          type: string
        type:
          description: "The type of error, often \"type_error\" or \"value_error\"\
            , but sometimes with more context like as \"value_error.number.not_ge\""
          type: string
      required:
      - loc
      - msg
      - type
      type: object
    DashboardAccessOut:
      example:
        url: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
        token: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      properties:
        url:
          example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DashboardAccessOut-properties-url
        token:
          example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          type: string
          x-konfig-original-example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DashboardAccessOut-properties-token
      required:
      - token
      - url
      type: object
      x-konfig-is-used-in-successful-response: true
    ApplicationTokenExpireIn:
      example:
        expiry: 60
      properties:
        expiry:
          description: How many seconds until the old key is expired.
          example: 60
          format: int64
          maximum: 259200
          minimum: 0
          nullable: true
          type: integer
          x-konfig-original-example: 60
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationTokenExpireIn-properties-expiry
      type: object
    ApplicationIn:
      example:
        uid: unique-app-identifier
        metadata: {}
        rateLimit: 1
        name: My first application
      properties:
        name:
          example: My first application
          minLength: 1
          type: string
          x-konfig-original-example: My first application
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-name
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the application
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-uid
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-metadata
      required:
      - name
      type: object
    ApplicationOut:
      example:
        uid: unique-app-identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: metadata
        rateLimit: 0
        name: My first application
        id: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        uid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationOut-properties-uid
        name:
          example: My first application
          type: string
          x-konfig-original-example: My first application
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationOut-properties-name
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        id:
          description: The app's ID
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationOut-properties-id
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - createdAt
      - id
      - metadata
      - name
      - updatedAt
      type: object
      x-konfig-is-used-in-successful-response: true
    Ordering:
      description: Defines the ordering in a listing of results.
      enum:
      - ascending
      - descending
      type: string
    ListResponse_ApplicationOut_:
      example:
        iterator: iterator
        data:
        - uid: unique-app-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: metadata
          rateLimit: 0
          name: My first application
          id: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - uid: unique-app-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: metadata
          rateLimit: 0
          name: My first application
          id: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApplicationOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_ApplicationOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_ApplicationOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    ApplicationPatch:
      example:
        uid: unique-app-identifier
        metadata:
          key: metadata
        rateLimit: 0
        name: name
      properties:
        name:
          type: string
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationPatch-properties-uid
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    EndpointIn:
      example:
        uid: unique-ep-identifier
        metadata: {}
        rateLimit: 1
        channels:
        - project_123
        - group_2
        description: An example endpoint name
        disabled: false
        secret: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
        version: 1
        filterTypes:
        - user.signup
        - user.deleted
        url: https://example.com/webhook/
      properties:
        description:
          default: ""
          example: An example endpoint name
          type: string
          x-konfig-original-example: An example endpoint name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-description
        version:
          default: 1
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          nullable: true
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-version
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-channels
        secret:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-secret
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-metadata
      required:
      - url
      type: object
    EndpointOut:
      example:
        uid: unique-ep-identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: metadata
        rateLimit: 0
        channels:
        - project_123
        - group_2
        description: description
        disabled: false
        id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
        version: 1
        filterTypes:
        - user.signup
        - user.deleted
        url: https://example.com/webhook/
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          description: An example endpoint name
          type: string
        version:
          deprecated: true
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-version
        id:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-id
        metadata:
          additionalProperties:
            type: string
          type: object
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointOut-properties-channels
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - description
      - id
      - metadata
      - updatedAt
      - url
      - version
      type: object
      x-konfig-is-used-in-successful-response: true
    ListResponse_EndpointOut_:
      example:
        iterator: iterator
        data:
        - uid: unique-ep-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: metadata
          rateLimit: 0
          channels:
          - project_123
          - group_2
          description: description
          disabled: false
          id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          version: 1
          filterTypes:
          - user.signup
          - user.deleted
          url: https://example.com/webhook/
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - uid: unique-ep-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: metadata
          rateLimit: 0
          channels:
          - project_123
          - group_2
          description: description
          disabled: false
          id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          version: 1
          filterTypes:
          - user.signup
          - user.deleted
          url: https://example.com/webhook/
          updatedAt: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EndpointOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EndpointOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointUpdate:
      example:
        uid: unique-ep-identifier
        metadata: {}
        rateLimit: 1
        channels:
        - project_123
        - group_2
        description: An example endpoint name
        disabled: false
        version: 1
        filterTypes:
        - user.signup
        - user.deleted
        url: https://example.com/webhook/
      properties:
        description:
          default: ""
          example: An example endpoint name
          type: string
          x-konfig-original-example: An example endpoint name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-description
        version:
          default: 1
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          nullable: true
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-version
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-metadata
      required:
      - url
      type: object
    EndpointPatch:
      example:
        uid: unique-ep-identifier
        metadata:
          key: metadata
        rateLimit: 0
        channels:
        - project_1337
        - project_1337
        description: description
        disabled: true
        secret: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
        version: 1
        filterTypes:
        - user.signup
        - user.signup
        url: https://openapi-generator.tech
      properties:
        description:
          type: string
        version:
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-version
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-uid
        url:
          format: uri
          type: string
        disabled:
          type: boolean
        filterTypes:
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-filterTypes-items
          nullable: true
          type: array
          uniqueItems: true
        channels:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-channels-items
          nullable: true
          type: array
          uniqueItems: true
        secret:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-secret
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    EndpointSecretOut:
      example:
        key: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      properties:
        key:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointSecretOut-properties-key
      required:
      - key
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointSecretRotateIn:
      example:
        key: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      properties:
        key:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointSecretRotateIn-properties-key
      type: object
    EndpointStats:
      example:
        fail: 5
        success: 0
        pending: 6
        sending: 1
      properties:
        success:
          format: int64
          type: integer
        pending:
          format: int64
          type: integer
        sending:
          format: int64
          type: integer
        fail:
          format: int64
          type: integer
      required:
      - fail
      - pending
      - sending
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    RecoverIn:
      example:
        until: 2000-01-23T04:56:07.000+00:00
        since: 2000-01-23T04:56:07.000+00:00
      properties:
        since:
          format: date-time
          type: string
        until:
          format: date-time
          nullable: true
          type: string
      required:
      - since
      type: object
    RecoverOut:
      example:
        task: null
        id: id
        status: null
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
      x-konfig-is-used-in-successful-response: true
    BackgroundTaskStatus:
      enum:
      - running
      - finished
      - failed
      type: string
    BackgroundTaskType:
      enum:
      - endpoint.replay
      - endpoint.recover
      - application.stats
      - message.broadcast
      - sdk.generate
      - event-type.aggregate
      type: string
    ReplayIn:
      example:
        until: 2000-01-23T04:56:07.000+00:00
        since: 2000-01-23T04:56:07.000+00:00
      properties:
        since:
          format: date-time
          type: string
        until:
          format: date-time
          nullable: true
          type: string
      required:
      - since
      type: object
    ReplayOut:
      example:
        task: null
        id: id
        status: null
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointHeadersOut:
      description: |-
        The value of the headers is returned in the `headers` field.

        Sensitive headers that have been redacted are returned in the sensitive field.
      example:
        headers:
          X-Example: "123"
          X-Foobar: Bar
        sensitive:
        - Authorization
      properties:
        headers:
          additionalProperties:
            type: string
          example:
            X-Example: "123"
            X-Foobar: Bar
          type: object
          x-konfig-original-example:
            X-Example: "123"
            X-Foobar: Bar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersOut-properties-headers
        sensitive:
          example:
          - Authorization
          items:
            type: string
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - Authorization
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersOut-properties-sensitive
      required:
      - headers
      - sensitive
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointHeadersPatchIn:
      example:
        headers:
          X-Example: "123"
          X-Foobar: Bar
      properties:
        headers:
          additionalProperties:
            nullable: true
            type: string
          example:
            X-Example: "123"
            X-Foobar: Bar
          type: object
          x-konfig-original-example:
            X-Example: "123"
            X-Foobar: Bar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersPatchIn-properties-headers
      required:
      - headers
      type: object
    EndpointHeadersIn:
      example:
        headers:
          X-Example: "123"
          X-Foobar: Bar
      properties:
        headers:
          additionalProperties:
            type: string
          example:
            X-Example: "123"
            X-Foobar: Bar
          type: object
          x-konfig-original-example:
            X-Example: "123"
            X-Foobar: Bar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersIn-properties-headers
      required:
      - headers
      type: object
    EndpointTransformationOut:
      example:
        code: code
        enabled: false
      properties:
        code:
          maxLength: 51200
          minLength: 10
          nullable: true
          type: string
        enabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointTransformationOut-properties-enabled
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointTransformationIn:
      example:
        code: code
        enabled: true
      properties:
        code:
          maxLength: 51200
          minLength: 10
          nullable: true
          type: string
        enabled:
          type: boolean
      type: object
    EndpointTransformationSimulateIn:
      properties:
        code:
          maxLength: 51200
          minLength: 10
          type: string
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointTransformationSimulateIn-properties-eventType
        channels:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointTransformationSimulateIn-properties-channels-items
          nullable: true
          type: array
          uniqueItems: true
        payload:
          type: object
      required:
      - code
      - eventType
      - payload
      type: object
    EndpointTransformationSimulateOut:
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
        payload:
          type: string
        method:
          $ref: '#/components/schemas/TransformationHttpMethod'
      required:
      - payload
      - url
      type: object
    TransformationHttpMethod:
      enum:
      - POST
      - PUT
      type: string
    EventExampleIn:
      example:
        eventType: user.signup
      properties:
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventExampleIn-properties-eventType
      required:
      - eventType
      type: object
    MessageOut:
      example:
        eventId: unique-msg-identifier
        channels:
        - project_123
        - group_2
        payload:
          email: test@example.com
          type: user.created
          username: test_user
        eventType: user.signup
        id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
        tags:
        - project_1337
        - project_1337
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        tags:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-tags-items
          nullable: true
          type: array
          uniqueItems: true
        eventId:
          description: Optional unique identifier for the message
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-eventId
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-eventType
        payload:
          example:
            email: test@example.com
            type: user.created
            username: test_user
          type: object
          x-konfig-original-example:
            email: test@example.com
            type: user.created
            username: test_user
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-payload
        channels:
          description: List of free-form identifiers that endpoints can filter by
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-channels-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-channels
        id:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageOut-properties-id
        timestamp:
          format: date-time
          type: string
      required:
      - eventType
      - id
      - payload
      - timestamp
      type: object
      x-konfig-is-used-in-successful-response: true
    EventTypeIn:
      example:
        archived: false
        featureFlag: cool-new-feature
        schemas:
          "1":
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
        name: user.signup
        description: A user has signed up
      properties:
        description:
          example: A user has signed up
          type: string
          x-konfig-original-example: A user has signed up
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-description
        name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-name
        archived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-archived
        schemas:
          additionalProperties:
            type: object
          description: The schema for the event type for a specific version as a JSON
            schema.
          example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          nullable: true
          type: object
          x-konfig-original-example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-featureFlag
      required:
      - description
      - name
      type: object
    EventTypeOut:
      example:
        archived: false
        createdAt: 2000-01-23T04:56:07.000+00:00
        featureFlag: cool-new-feature
        schemas:
          "1":
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
        name: user.signup
        description: A user has signed up
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          example: A user has signed up
          type: string
          x-konfig-original-example: A user has signed up
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeOut-properties-description
        name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeOut-properties-name
        archived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeOut-properties-archived
        schemas:
          additionalProperties:
            type: object
          description: The schema for the event type for a specific version as a JSON
            schema.
          example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          nullable: true
          type: object
          x-konfig-original-example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeOut-properties-schemas
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeOut-properties-featureFlag
      required:
      - createdAt
      - description
      - name
      - updatedAt
      type: object
      x-konfig-is-used-in-successful-response: true
    ListResponse_EventTypeOut_:
      example:
        iterator: iterator
        data:
        - archived: false
          createdAt: 2000-01-23T04:56:07.000+00:00
          featureFlag: cool-new-feature
          schemas:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          name: user.signup
          description: A user has signed up
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - archived: false
          createdAt: 2000-01-23T04:56:07.000+00:00
          featureFlag: cool-new-feature
          schemas:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          name: user.signup
          description: A user has signed up
          updatedAt: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventTypeOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EventTypeOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EventTypeOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    EventTypeImportOpenApiIn:
      description: |-
        Import a list of event types from webhooks defined in an OpenAPI spec.

        The OpenAPI spec can be specified as either `spec` given the spec as a JSON object, or as `specRaw` (a `string`) which will be parsed as YAML or JSON by the server. Sending neither or both is invalid, resulting in a `400` **Bad Request**.
      example:
        specRaw: "{\"openapi\":\"3.1.0\",\"info\":{\"title\":\"Webhook Example\",\"\
          version\":\"1.0.0\"},\"webhooks\":{\"pet.new\":{\"post\":{\"requestBody\"\
          :{\"description\":\"Information about a new pet in the system\",\"content\"\
          :{\"application/json\":{\"schema\":{\"properties\":{\"id\":{\"format\":\"\
          int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"tag\":{\"\
          type\":\"string\"}},\"required\":[\"id\",\"name\"]}}}},\"responses\":{\"\
          200\":{\"description\":\"Return a 200 status to indicate that the data was\
          \ received successfully\"}}}}}}"
        spec:
          openapi: 3.1.0
          info:
            title: Webhook Example
            version: 1.0.0
          webhooks:
            pet.new:
              post:
                requestBody:
                  description: Information about a new pet in the system
                  content:
                    application/json:
                      schema:
                        properties:
                          id:
                            format: int64
                            type: integer
                          name:
                            type: string
                          tag:
                            type: string
                        required:
                        - id
                        - name
                responses:
                  "200":
                    description: Return a 200 status to indicate that the data was
                      received successfully
      properties:
        spec:
          additionalProperties:
            type: object
          description: A pre-parsed JSON spec.
          example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          nullable: true
          type: object
          x-konfig-original-example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-spec
        specRaw:
          description: "A string, parsed by the server as YAML or JSON."
          example: "{\"openapi\":\"3.1.0\",\"info\":{\"title\":\"Webhook Example\"\
            ,\"version\":\"1.0.0\"},\"webhooks\":{\"pet.new\":{\"post\":{\"requestBody\"\
            :{\"description\":\"Information about a new pet in the system\",\"content\"\
            :{\"application/json\":{\"schema\":{\"properties\":{\"id\":{\"format\"\
            :\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"tag\"\
            :{\"type\":\"string\"}},\"required\":[\"id\",\"name\"]}}}},\"responses\"\
            :{\"200\":{\"description\":\"Return a 200 status to indicate that the\
            \ data was received successfully\"}}}}}}"
          nullable: true
          type: string
          x-konfig-original-example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-specRaw
      type: object
    EventTypeImportOpenApiOut:
      example:
        data:
          modified:
          - user.signup
          - user.signup
      properties:
        data:
          $ref: '#/components/schemas/EventTypeImportOpenApiOutData'
      required:
      - data
      type: object
      x-konfig-is-used-in-successful-response: true
    EventTypeImportOpenApiOutData:
      example:
        modified:
        - user.signup
        - user.signup
      properties:
        modified:
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeImportOpenApiOutData-properties-modified-items
          type: array
      required:
      - modified
      type: object
    ExportEventTypeOut:
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
    RetryScheduleInOut:
      properties:
        retrySchedule:
          items:
            $ref: '#/components/schemas/Duration'
          type: array
      type: object
    RetrySchedule:
      items:
        $ref: '#/components/schemas/Duration'
      type: array
    Duration:
      properties:
        secs:
          format: uint64
          minimum: 0
          type: integer
        nanos:
          format: uint32
          minimum: 0
          type: integer
      required:
      - nanos
      - secs
      type: object
    EventTypeUpdate:
      example:
        archived: false
        featureFlag: cool-new-feature
        schemas:
          "1":
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
        description: A user has signed up
      properties:
        description:
          example: A user has signed up
          type: string
          x-konfig-original-example: A user has signed up
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-description
        archived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-archived
        schemas:
          additionalProperties:
            type: object
          description: The schema for the event type for a specific version as a JSON
            schema.
          example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          nullable: true
          type: object
          x-konfig-original-example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-featureFlag
      required:
      - description
      type: object
    EventTypePatch:
      example:
        archived: true
        featureFlag: cool-new-feature
        schemas:
          title: Invoice Paid Event
          description: An invoice was paid by a user
          properties:
            invoiceId:
              description: The invoice id
              type: string
            userId:
              description: The user id
              type: string
          required:
          - invoiceId
          - userId
          type: object
        description: description
      properties:
        description:
          type: string
        archived:
          type: boolean
        schemas:
          additionalProperties:
            type: object
          example:
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
          nullable: true
          type: object
          x-konfig-original-example:
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypePatch-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypePatch-properties-featureFlag
      type: object
    ListResponse_BackgroundTaskOut_:
      example:
        iterator: iterator
        data:
        - task: null
          data: "{}"
          id: id
          status: null
        - task: null
          data: "{}"
          id: id
          status: null
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/BackgroundTaskOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_BackgroundTaskOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_BackgroundTaskOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    BackgroundTaskOut:
      example:
        task: null
        data: "{}"
        id: id
        status: null
      properties:
        data:
          type: object
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - data
      - id
      - status
      - task
      type: object
      x-konfig-is-used-in-successful-response: true
    BackgroundTaskData:
      type: object
    ListResponse_MessageOut_:
      example:
        iterator: iterator
        data:
        - eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          tags:
          - project_1337
          - project_1337
          timestamp: 2000-01-23T04:56:07.000+00:00
        - eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          tags:
          - project_1337
          - project_1337
          timestamp: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    MessageIn:
      example:
        eventId: unique-msg-identifier
        payloadRetentionPeriod: 90
        channels:
        - project_123
        - group_2
        application:
          uid: unique-app-identifier
          metadata: {}
          rateLimit: 1
          name: My first application
        payload:
          email: test@example.com
          type: user.created
          username: test_user
        transformationsParams: "{}"
        eventType: user.signup
        tags:
        - my_tag
        - other
      properties:
        tags:
          description: List of free-form tags that can be filtered by when listing
            messages
          example:
          - my_tag
          - other
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-tags-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - my_tag
          - other
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-tags
        eventId:
          description: Optional unique identifier for the message
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-eventId
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-eventType
        payload:
          example:
            email: test@example.com
            type: user.created
            username: test_user
          type: object
          x-konfig-original-example:
            email: test@example.com
            type: user.created
            username: test_user
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-payload
        channels:
          description: List of free-form identifiers that endpoints can filter by
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-channels-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-channels
        payloadRetentionPeriod:
          default: 90
          example: 90
          format: int64
          maximum: 90
          minimum: 5
          type: integer
          x-konfig-original-example: 90
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-payloadRetentionPeriod
        application:
          $ref: '#/components/schemas/ApplicationIn'
        transformationsParams:
          description: Extra parameters to pass to Transformations (for future use)
          nullable: true
          type: object
      required:
      - eventType
      - payload
      type: object
    MessageStreamOut:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageOut'
          type: array
        iterator:
          type: string
        done:
          type: boolean
      required:
      - data
      - done
      - iterator
      type: object
    MessageRawPayloadOut:
      properties:
        payload:
          example: "{\"email\":\"test@example.com\",\"type\":\"user.created\",\"username\"\
            :\"test_user\"}"
          type: string
          x-konfig-original-example: "{\"email\":\"test@example.com\",\"type\":\"\
            user.created\",\"username\":\"test_user\"}"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageRawPayloadOut-properties-payload
      required:
      - payload
      type: object
    MessageAttemptOut:
      example:
        msg:
          eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          tags:
          - project_1337
          - project_1337
          timestamp: 2000-01-23T04:56:07.000+00:00
        responseStatusCode: 200
        response: "{}"
        endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
        msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
        triggerType: null
        id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
        url: https://example.com/webhook/
        status: null
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-url
        response:
          example: "{}"
          type: string
          x-konfig-original-example: "{}"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-response
        responseStatusCode:
          example: 200
          format: int16
          type: integer
          x-konfig-original-example: 200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-responseStatusCode
        status:
          $ref: '#/components/schemas/MessageStatus'
        triggerType:
          $ref: '#/components/schemas/MessageAttemptTriggerType'
        msgId:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-msgId
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-endpointId
        id:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptOut-properties-id
        timestamp:
          format: date-time
          type: string
        msg:
          $ref: '#/components/schemas/MessageOut'
      required:
      - endpointId
      - id
      - msgId
      - response
      - responseStatusCode
      - status
      - timestamp
      - triggerType
      - url
      type: object
      x-konfig-is-used-in-successful-response: true
    MessageStatus:
      description: |-
        The sending status of the message:
        - Success = 0
        - Pending = 1
        - Fail = 2
        - Sending = 3
      enum:
      - 0
      - 1
      - 2
      - 3
      title: MessageStatus
      type: integer
      x-enum-varnames:
      - Success
      - Pending
      - Fail
      - Sending
    MessageAttemptTriggerType:
      description: |-
        The reason an attempt was made:
        - Scheduled = 0
        - Manual = 1
      enum:
      - 0
      - 1
      title: MessageAttemptTriggerType
      type: integer
      x-enum-varnames:
      - Scheduled
      - Manual
    StatusCodeClass:
      description: |-
        The different classes of HTTP status codes:
        - CodeNone = 0
        - Code1xx = 100
        - Code2xx = 200
        - Code3xx = 300
        - Code4xx = 400
        - Code5xx = 500
      enum:
      - 0
      - 100
      - 200
      - 300
      - 400
      - 500
      title: StatusCodeClass
      type: integer
      x-enum-varnames:
      - CodeNone
      - Code1xx
      - Code2xx
      - Code3xx
      - Code4xx
      - Code5xx
    ListResponse_MessageAttemptOut_:
      example:
        iterator: iterator
        data:
        - msg:
            eventId: unique-msg-identifier
            channels:
            - project_123
            - group_2
            payload:
              email: test@example.com
              type: user.created
              username: test_user
            eventType: user.signup
            id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
            tags:
            - project_1337
            - project_1337
            timestamp: 2000-01-23T04:56:07.000+00:00
          responseStatusCode: 200
          response: "{}"
          endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          triggerType: null
          id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          url: https://example.com/webhook/
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        - msg:
            eventId: unique-msg-identifier
            channels:
            - project_123
            - group_2
            payload:
              email: test@example.com
              type: user.created
              username: test_user
            eventType: user.signup
            id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
            tags:
            - project_1337
            - project_1337
            timestamp: 2000-01-23T04:56:07.000+00:00
          responseStatusCode: 200
          response: "{}"
          endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          triggerType: null
          id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          url: https://example.com/webhook/
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageAttemptOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageAttemptOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageAttemptOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    ListResponse_EndpointMessageOut_:
      example:
        iterator: iterator
        data:
        - eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nextAttempt: 2000-01-23T04:56:07.000+00:00
          tags:
          - project_1337
          - project_1337
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        - eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nextAttempt: 2000-01-23T04:56:07.000+00:00
          tags:
          - project_1337
          - project_1337
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointMessageOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EndpointMessageOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_EndpointMessageOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    EndpointMessageOut:
      description: A model containing information on a given message plus additional
        fields on the last attempt for that message.
      example:
        eventId: unique-msg-identifier
        channels:
        - project_123
        - group_2
        payload:
          email: test@example.com
          type: user.created
          username: test_user
        eventType: user.signup
        id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
        nextAttempt: 2000-01-23T04:56:07.000+00:00
        tags:
        - project_1337
        - project_1337
        status: null
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        tags:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-tags-items
          nullable: true
          type: array
          uniqueItems: true
        status:
          $ref: '#/components/schemas/MessageStatus'
        nextAttempt:
          format: date-time
          nullable: true
          type: string
        eventId:
          description: Optional unique identifier for the message
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-eventId
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-eventType
        payload:
          example:
            email: test@example.com
            type: user.created
            username: test_user
          type: object
          x-konfig-original-example:
            email: test@example.com
            type: user.created
            username: test_user
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-payload
        channels:
          description: List of free-form identifiers that endpoints can filter by
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-channels-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-channels
        id:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointMessageOut-properties-id
        timestamp:
          format: date-time
          type: string
      required:
      - eventType
      - id
      - payload
      - status
      - timestamp
      type: object
    ListResponse_MessageEndpointOut_:
      example:
        iterator: iterator
        data:
        - rateLimit: 0
          description: description
          version: 1
          nextAttempt: 2000-01-23T04:56:07.000+00:00
          url: https://example.com/webhook/
          uid: unique-ep-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          channels:
          - project_123
          - group_2
          disabled: false
          id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          filterTypes:
          - user.signup
          - user.deleted
          status: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - rateLimit: 0
          description: description
          version: 1
          nextAttempt: 2000-01-23T04:56:07.000+00:00
          url: https://example.com/webhook/
          uid: unique-ep-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          channels:
          - project_123
          - group_2
          disabled: false
          id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          filterTypes:
          - user.signup
          - user.deleted
          status: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageEndpointOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageEndpointOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageEndpointOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    MessageEndpointOut:
      example:
        rateLimit: 0
        description: description
        version: 1
        nextAttempt: 2000-01-23T04:56:07.000+00:00
        url: https://example.com/webhook/
        uid: unique-ep-identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        channels:
        - project_123
        - group_2
        disabled: false
        id: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
        filterTypes:
        - user.signup
        - user.deleted
        status: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          description: An example endpoint name
          type: string
        version:
          deprecated: true
          example: 1
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-version
        id:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-id
        status:
          $ref: '#/components/schemas/MessageStatus'
        nextAttempt:
          format: date-time
          nullable: true
          type: string
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageEndpointOut-properties-channels
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - description
      - id
      - status
      - updatedAt
      - url
      - version
      type: object
    ListResponse_MessageAttemptEndpointOut_:
      example:
        iterator: iterator
        data:
        - msg:
            eventId: unique-msg-identifier
            channels:
            - project_123
            - group_2
            payload:
              email: test@example.com
              type: user.created
              username: test_user
            eventType: user.signup
            id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
            tags:
            - project_1337
            - project_1337
            timestamp: 2000-01-23T04:56:07.000+00:00
          responseStatusCode: 200
          response: "{}"
          endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          triggerType: null
          id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          url: https://example.com/webhook/
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        - msg:
            eventId: unique-msg-identifier
            channels:
            - project_123
            - group_2
            payload:
              email: test@example.com
              type: user.created
              username: test_user
            eventType: user.signup
            id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
            tags:
            - project_1337
            - project_1337
            timestamp: 2000-01-23T04:56:07.000+00:00
          responseStatusCode: 200
          response: "{}"
          endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          triggerType: null
          id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          url: https://example.com/webhook/
          status: null
          timestamp: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageAttemptEndpointOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageAttemptEndpointOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_MessageAttemptEndpointOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    MessageAttemptEndpointOut:
      example:
        msg:
          eventId: unique-msg-identifier
          channels:
          - project_123
          - group_2
          payload:
            email: test@example.com
            type: user.created
            username: test_user
          eventType: user.signup
          id: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          tags:
          - project_1337
          - project_1337
          timestamp: 2000-01-23T04:56:07.000+00:00
        responseStatusCode: 200
        response: "{}"
        endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
        msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
        triggerType: null
        id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
        url: https://example.com/webhook/
        status: null
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-url
        response:
          example: "{}"
          type: string
          x-konfig-original-example: "{}"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-response
        responseStatusCode:
          example: 200
          format: int16
          type: integer
          x-konfig-original-example: 200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-responseStatusCode
        status:
          $ref: '#/components/schemas/MessageStatus'
        triggerType:
          $ref: '#/components/schemas/MessageAttemptTriggerType'
        msgId:
          description: The msg's ID
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-msgId
        endpointId:
          description: The ep's ID
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-endpointId
        id:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-id
        timestamp:
          format: date-time
          type: string
        msg:
          $ref: '#/components/schemas/MessageOut'
      required:
      - endpointId
      - id
      - msgId
      - response
      - responseStatusCode
      - status
      - timestamp
      - triggerType
      - url
      type: object
    MessageAttemptHeadersOut:
      properties:
        sentHeaders:
          additionalProperties:
            type: string
          type: object
        responseHeaders:
          items:
            items:
              type: string
            maxItems: 2
            minItems: 2
            type: array
          nullable: true
          type: array
        sensitive:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - sensitive
      - sentHeaders
      type: object
    AppUsageStatsIn:
      example:
        appIds:
        - unique-app-identifier
        - unique-app-identifier
        until: 2000-01-23T04:56:07.000+00:00
        since: 2000-01-23T04:56:07.000+00:00
      properties:
        since:
          format: date-time
          type: string
        until:
          format: date-time
          type: string
        appIds:
          items:
            description: The app's ID or UID
            example: unique-app-identifier
            maxLength: 256
            minLength: 1
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: unique-app-identifier
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppUsageStatsIn-properties-appIds-items
          nullable: true
          type: array
          uniqueItems: true
      required:
      - since
      - until
      type: object
    AppUsageStatsOut:
      example:
        task: null
        id: id
        status: null
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
      x-konfig-is-used-in-successful-response: true
    AggregateEventTypesOut:
      example:
        task: null
        id: id
        status: null
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
      x-konfig-is-used-in-successful-response: true
    ListResponse_IntegrationOut_:
      example:
        iterator: iterator
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: Example Integration
          id: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: Example Integration
          id: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        prevIterator: -iterator
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/IntegrationOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_IntegrationOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_IntegrationOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
      x-konfig-is-used-in-successful-response: true
    IntegrationOut:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: Example Integration
        id: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          example: Example Integration
          type: string
          x-konfig-original-example: Example Integration
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationOut-properties-name
        id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationOut-properties-id
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - name
      - updatedAt
      type: object
      x-konfig-is-used-in-successful-response: true
    IntegrationIn:
      example:
        name: Example Integration
      properties:
        name:
          example: Example Integration
          type: string
          x-konfig-original-example: Example Integration
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationIn-properties-name
      required:
      - name
      type: object
    IntegrationUpdate:
      example:
        name: Example Integration
      properties:
        name:
          example: Example Integration
          type: string
          x-konfig-original-example: Example Integration
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationUpdate-properties-name
      required:
      - name
      type: object
    IntegrationKeyOut:
      example:
        key: integsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      properties:
        key:
          example: integsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          type: string
          x-konfig-original-example: integsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationKeyOut-properties-key
      required:
      - key
      type: object
      x-konfig-is-used-in-successful-response: true
    MessageBroadcastIn:
      properties:
        eventId:
          description: Optional unique identifier for the message
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-eventId
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-eventType
        payload:
          example:
            email: test@example.com
            type: user.created
            username: test_user
          type: object
          x-konfig-original-example:
            email: test@example.com
            type: user.created
            username: test_user
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-payload
        channels:
          description: List of free-form identifiers that endpoints can filter by
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-channels-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-channels
        payloadRetentionPeriod:
          default: 90
          example: 90
          format: int64
          maximum: 90
          minimum: 5
          type: integer
          x-konfig-original-example: 90
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-payloadRetentionPeriod
      required:
      - eventType
      - payload
      type: object
    MessageBroadcastOut:
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
      required:
      - id
      - status
      - task
      type: object
    ListResponse_TemplateOut_:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TemplateOut'
          type: array
        iterator:
          example: iterator
          nullable: true
          type: string
          x-konfig-original-example: iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_TemplateOut_-properties-iterator
        prevIterator:
          example: -iterator
          nullable: true
          type: string
          x-konfig-original-example: -iterator
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ListResponse_TemplateOut_-properties-prevIterator
        done:
          type: boolean
      required:
      - data
      - done
      type: object
    TemplateOut:
      properties:
        description:
          type: string
        id:
          type: string
        orgId:
          type: string
        kind:
          $ref: '#/components/schemas/TransformationTemplateKind'
        name:
          type: string
        logo:
          format: uri
          type: string
        instructions:
          type: string
        instructionsLink:
          format: uri
          nullable: true
          type: string
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateOut-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateOut-properties-filterTypes
        transformation:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateOut-properties-featureFlag
      required:
      - createdAt
      - description
      - id
      - instructions
      - kind
      - logo
      - name
      - orgId
      - transformation
      - updatedAt
      type: object
    TransformationTemplateKind:
      enum:
      - Custom
      - CustomerIO
      - Discord
      - Hubspot
      - Inngest
      - Salesforce
      - Segment
      - Slack
      - Teams
      - TriggerDev
      - Windmill
      - Zapier
      type: string
    TemplateIn:
      properties:
        description:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-description
        name:
          type: string
        logo:
          format: uri
          type: string
        kind:
          $ref: '#/components/schemas/TransformationTemplateKind'
        instructions:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-instructions
        instructionsLink:
          format: uri
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-instructionsLink
          example: null
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-filterTypes
        transformation:
          maxLength: 51200
          minLength: 10
          type: string
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateIn-properties-featureFlag
      required:
      - logo
      - name
      - transformation
      type: object
    TemplateUpdate:
      properties:
        description:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-description
        name:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-name
        logo:
          format: uri
          type: string
        kind:
          $ref: '#/components/schemas/TransformationTemplateKind'
        instructions:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-instructions
        instructionsLink:
          format: uri
          nullable: true
          type: string
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-filterTypes
        transformation:
          maxLength: 51200
          minLength: 10
          type: string
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplateUpdate-properties-featureFlag
      required:
      - logo
      - transformation
      type: object
    TemplatePatch:
      properties:
        description:
          type: string
        name:
          type: string
        logo:
          format: uri
          type: string
        kind:
          $ref: '#/components/schemas/TransformationTemplateKind'
        instructions:
          type: string
        instructionsLink:
          format: uri
          nullable: true
          type: string
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplatePatch-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplatePatch-properties-filterTypes
        transformation:
          maxLength: 51200
          minLength: 10
          type: string
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TemplatePatch-properties-featureFlag
      type: object
    TransformationSimulateIn:
      properties:
        code:
          maxLength: 51200
          minLength: 10
          type: string
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TransformationSimulateIn-properties-eventType
        channels:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-TransformationSimulateIn-properties-channels-items
          nullable: true
          type: array
          uniqueItems: true
        payload:
          type: object
      required:
      - code
      - eventType
      - payload
      type: object
    TransformationSimulateOut:
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
        payload:
          type: string
        method:
          $ref: '#/components/schemas/TransformationHttpMethod'
      required:
      - payload
      - url
      type: object
    GenerateIn:
      properties:
        prompt:
          type: string
      required:
      - prompt
      type: object
    GenerateOut:
      properties:
        id:
          type: string
        object:
          type: string
        created:
          format: int64
          type: integer
        model:
          type: string
        choices:
          items:
            $ref: '#/components/schemas/CompletionChoice'
          type: array
      required:
      - choices
      - created
      - id
      - model
      - object
      type: object
    CompletionChoice:
      properties:
        message:
          $ref: '#/components/schemas/CompletionMessage'
        index:
          format: int64
          type: integer
        finish_reason:
          type: string
      required:
      - finish_reason
      - index
      - message
      type: object
    CompletionMessage:
      properties:
        content:
          type: string
        role:
          type: string
      required:
      - content
      - role
      type: object
    OauthPayloadIn:
      properties:
        code:
          type: string
        redirectUri:
          type: string
      required:
      - code
      - redirectUri
      type: object
    OauthPayloadOut:
      properties:
        error:
          nullable: true
          type: string
        incomingWebhookUrl:
          format: uri
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
      type: object
    EnvironmentSettingsOut:
      properties:
        customColor:
          type: string
        customLogoUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        customFontFamily:
          example: Open Sans
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_ ]+$"
          type: string
          x-konfig-original-example: Open Sans
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-customFontFamily
        customFontFamilyUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        customThemeOverride:
          $ref: '#/components/schemas/CustomThemeOverride'
        displayName:
          nullable: true
          type: string
        enableChannels:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableChannels
        enableMessageTags:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableMessageTags
        enableIntegrationManagement:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableIntegrationManagement
        enableTransformations:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableTransformations
        colorPaletteLight:
          $ref: '#/components/schemas/CustomColorPalette'
        colorPaletteDark:
          $ref: '#/components/schemas/CustomColorPalette'
        showUseSvixPlay:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-showUseSvixPlay
      type: object
    Color:
      type: string
    CustomThemeOverride:
      properties:
        borderRadius:
          $ref: '#/components/schemas/BorderRadiusConfig'
        fontSize:
          $ref: '#/components/schemas/FontSizeConfig'
      type: object
    BorderRadiusConfig:
      properties:
        button:
          $ref: '#/components/schemas/BorderRadiusEnum'
        card:
          $ref: '#/components/schemas/BorderRadiusEnum'
        input:
          $ref: '#/components/schemas/BorderRadiusEnum'
      type: object
    BorderRadiusEnum:
      enum:
      - none
      - lg
      - md
      - sm
      - full
      type: string
    FontSizeConfig:
      properties:
        base:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
      type: object
    CustomColorPalette:
      properties:
        primary:
          type: string
        backgroundPrimary:
          type: string
        backgroundSecondary:
          type: string
        backgroundHover:
          type: string
        textPrimary:
          type: string
        textDanger:
          type: string
        interactiveAccent:
          type: string
        navigationAccent:
          type: string
        buttonPrimary:
          type: string
      type: object
    EnvironmentOut:
      properties:
        version:
          default: 1
          example: 1
          format: int
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EnvironmentOut-properties-version
        createdAt:
          format: date-time
          type: string
        eventTypes:
          items:
            $ref: '#/components/schemas/EventTypeOut'
          type: array
        settings:
          $ref: '#/components/schemas/SettingsOut'
      required:
      - createdAt
      - eventTypes
      type: object
    SettingsOut:
      properties:
        customColor:
          type: string
        customLogoUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        customThemeOverride:
          $ref: '#/components/schemas/CustomThemeOverride'
        customBaseFontSize:
          format: int
          nullable: true
          type: integer
        customFontFamily:
          example: Open Sans
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_ ]+$"
          type: string
          x-konfig-original-example: Open Sans
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-customFontFamily
        customFontFamilyUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        disableEndpointOnFailure:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-disableEndpointOnFailure
        displayName:
          nullable: true
          type: string
        eventCatalogPublished:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-eventCatalogPublished
        enforceHttps:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-enforceHttps
        enableChannels:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-enableChannels
        readOnly:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-readOnly
        enableIntegrationManagement:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-enableIntegrationManagement
        enableTransformations:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-enableTransformations
        colorPaletteLight:
          $ref: '#/components/schemas/CustomColorPalette'
        colorPaletteDark:
          $ref: '#/components/schemas/CustomColorPalette'
        showUseSvixPlay:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsOut-properties-showUseSvixPlay
      type: object
    EnvironmentIn:
      properties:
        version:
          format: int
          type: integer
        createdAt:
          format: date-time
          type: string
        eventTypes:
          items:
            $ref: '#/components/schemas/EventTypeIn'
          nullable: true
          type: array
        settings:
          $ref: '#/components/schemas/SettingsIn'
      required:
      - createdAt
      - version
      type: object
    SettingsIn:
      properties:
        customColor:
          type: string
        customLogoUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        customThemeOverride:
          $ref: '#/components/schemas/CustomThemeOverride'
        customBaseFontSize:
          format: int
          nullable: true
          type: integer
        customFontFamily:
          example: Open Sans
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_ ]+$"
          type: string
          x-konfig-original-example: Open Sans
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-customFontFamily
        customFontFamilyUrl:
          format: uri
          maxLength: 65536
          minLength: 1
          nullable: true
          type: string
        disableEndpointOnFailure:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-disableEndpointOnFailure
        displayName:
          nullable: true
          type: string
        eventCatalogPublished:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-eventCatalogPublished
        enforceHttps:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-enforceHttps
        enableChannels:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-enableChannels
        readOnly:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-readOnly
        enableIntegrationManagement:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-enableIntegrationManagement
        enableTransformations:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-enableTransformations
        colorPaletteLight:
          $ref: '#/components/schemas/CustomColorPalette'
        colorPaletteDark:
          $ref: '#/components/schemas/CustomColorPalette'
        showUseSvixPlay:
          default: true
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SettingsIn-properties-showUseSvixPlay
      type: object
    RotatedUrlOut:
      properties:
        url:
          type: string
      required:
      - url
      type: object
    OneTimeTokenIn:
      properties:
        oneTimeToken:
          type: string
      required:
      - oneTimeToken
      type: object
    OneTimeTokenOut:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    InboundPathParams:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InboundPathParams-properties-app_id
        inbound_token:
          type: string
      required:
      - app_id
      - inbound_token
      type: object
    konfig-generated-schema-paths--api-v1-auth-app-portal-access-app_id-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-auth-dashboard-access-app_id-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-auth-app-app_id-expire-all-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-get-parameters-1-schema:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-post-parameters-0-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-put-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-delete-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-patch-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-2-schema:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-1-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-get-parameters-1-schema:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-get-parameters-4-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-event_type_name-get-parameters-0-schema:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-event_type_name-put-parameters-0-schema:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-0-schema:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-event-type-event_type_name-patch-parameters-0-schema:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-2-schema:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-3-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-6-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-7-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-8-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-1-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-1-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-2-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-1-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-1-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-4-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-5-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-8-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-9-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-10-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-11-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-12-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-1-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-4-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-5-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-6-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-9-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-10-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-11-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-12-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-1-schema:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-2-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-3-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-7-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-8-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-9-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-10-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-1-schema:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-2-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-3-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-1-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-2-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-3-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-7-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-8-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-9-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-10-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-1-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-2-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-3-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-4-schema:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-9-schema-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-10-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-11-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-1-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-2-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-1-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-2-schema:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-1-schema:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-2-schema:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-2-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-1-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-1-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-1-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-1-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-0-schema:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-1-schema:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointCreatedEvent-properties-type:
      example: endpoint.created
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointCreatedEventData-properties-endpointUid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDeletedEvent-properties-type:
      example: endpoint.deleted
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDeletedEventData-properties-endpointUid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDisabledEvent-properties-type:
      example: endpoint.disabled
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointDisabledEventData-properties-endpointUid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdatedEvent-properties-type:
      example: endpoint.updated
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdatedEventData-properties-endpointUid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEvent-properties-type:
      example: message.attempt.exhausted
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-msgId:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-msgEventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptExhaustedEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailedData-properties-id:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEvent-properties-type:
      example: message.attempt.failing
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-msgId:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-msgEventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptFailingEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEvent-properties-type:
      example: message.attempt.recovered
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-appId:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-appUid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-msgId:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-msgEventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptRecoveredEventData-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags-items:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-expiry:
      example: 604800
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppPortalAccessOut-properties-url:
      example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppPortalAccessOut-properties-token:
      example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DashboardAccessOut-properties-url:
      example: https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DashboardAccessOut-properties-token:
      example: appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationTokenExpireIn-properties-expiry:
      example: 60
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationIn-properties-name:
      example: My first application
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationIn-properties-uid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationIn-properties-metadata:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationOut-properties-uid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationOut-properties-name:
      example: My first application
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationOut-properties-id:
      example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_ApplicationOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_ApplicationOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApplicationPatch-properties-uid:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-description:
      example: An example endpoint name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-uid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-disabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-secret:
      example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointIn-properties-metadata:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-id:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-uid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-disabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointOut-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EndpointOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EndpointOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-description:
      example: An example endpoint name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-uid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-disabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointUpdate-properties-metadata:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointPatch-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointPatch-properties-uid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointPatch-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointPatch-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointPatch-properties-secret:
      example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointSecretOut-properties-key:
      example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointSecretRotateIn-properties-key:
      example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointHeadersOut-properties-headers:
      example:
        X-Example: "123"
        X-Foobar: Bar
      properties:
        X-Example:
          example: "123"
          type: string
        X-Foobar:
          example: Bar
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointHeadersOut-properties-sensitive:
      example:
      - Authorization
      items:
        example: Authorization
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointHeadersPatchIn-properties-headers:
      example:
        X-Example: "123"
        X-Foobar: Bar
      properties:
        X-Example:
          example: "123"
          type: string
        X-Foobar:
          example: Bar
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointHeadersIn-properties-headers:
      example:
        X-Example: "123"
        X-Foobar: Bar
      properties:
        X-Example:
          example: "123"
          type: string
        X-Foobar:
          example: Bar
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointTransformationOut-properties-enabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointTransformationSimulateIn-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointTransformationSimulateIn-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventExampleIn-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-tags-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-eventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-payload:
      example:
        email: test@example.com
        type: user.created
        username: test_user
      properties:
        email:
          example: test@example.com
          type: string
        type:
          example: user.created
          type: string
        username:
          example: test_user
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageOut-properties-id:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeIn-properties-description:
      example: A user has signed up
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeIn-properties-name:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeIn-properties-archived:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeIn-properties-schemas:
      example:
        "1":
          title: Invoice Paid Event
          description: An invoice was paid by a user
          properties:
            invoiceId:
              description: The invoice id
              type: string
            userId:
              description: The user id
              type: string
          required:
          - invoiceId
          - userId
          type: object
      properties:
        "1":
          properties:
            title:
              example: Invoice Paid Event
              type: string
            description:
              example: An invoice was paid by a user
              type: string
            properties:
              properties:
                invoiceId:
                  properties:
                    description:
                      example: The invoice id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
                userId:
                  properties:
                    description:
                      example: The user id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
              type: object
            required:
              items:
                example: invoiceId
                type: string
              type: array
            type:
              example: object
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeIn-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeOut-properties-description:
      example: A user has signed up
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeOut-properties-name:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeOut-properties-archived:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeOut-properties-schemas:
      example:
        "1":
          title: Invoice Paid Event
          description: An invoice was paid by a user
          properties:
            invoiceId:
              description: The invoice id
              type: string
            userId:
              description: The user id
              type: string
          required:
          - invoiceId
          - userId
          type: object
      properties:
        "1":
          properties:
            title:
              example: Invoice Paid Event
              type: string
            description:
              example: An invoice was paid by a user
              type: string
            properties:
              properties:
                invoiceId:
                  properties:
                    description:
                      example: The invoice id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
                userId:
                  properties:
                    description:
                      example: The user id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
              type: object
            required:
              items:
                example: invoiceId
                type: string
              type: array
            type:
              example: object
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeOut-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EventTypeOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EventTypeOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-spec:
      example:
        openapi: 3.1.0
        info:
          title: Webhook Example
          version: 1.0.0
        webhooks:
          pet.new:
            post:
              requestBody:
                description: Information about a new pet in the system
                content:
                  application/json:
                    schema:
                      properties:
                        id:
                          format: int64
                          type: integer
                        name:
                          type: string
                        tag:
                          type: string
                      required:
                      - id
                      - name
              responses:
                "200":
                  description: Return a 200 status to indicate that the data was received
                    successfully
      properties:
        openapi:
          example: 3.1.0
          type: string
        info:
          properties:
            title:
              example: Webhook Example
              type: string
            version:
              example: 1.0.0
              type: string
          type: object
        webhooks:
          properties:
            pet.new:
              properties:
                post:
                  properties:
                    requestBody:
                      properties:
                        description:
                          example: Information about a new pet in the system
                          type: string
                        content:
                          properties:
                            application/json:
                              properties:
                                schema:
                                  properties:
                                    properties:
                                      properties:
                                        id:
                                          properties:
                                            format:
                                              example: int64
                                              type: string
                                            type:
                                              example: integer
                                              type: string
                                          type: object
                                        name:
                                          properties:
                                            type:
                                              example: string
                                              type: string
                                          type: object
                                        tag:
                                          properties:
                                            type:
                                              example: string
                                              type: string
                                          type: object
                                      type: object
                                    required:
                                      items:
                                        example: id
                                        type: string
                                      type: array
                                  type: object
                              type: object
                          type: object
                      type: object
                    responses:
                      properties:
                        "200":
                          properties:
                            description:
                              example: Return a 200 status to indicate that the data
                                was received successfully
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-specRaw:
      example:
        openapi: 3.1.0
        info:
          title: Webhook Example
          version: 1.0.0
        webhooks:
          pet.new:
            post:
              requestBody:
                description: Information about a new pet in the system
                content:
                  application/json:
                    schema:
                      properties:
                        id:
                          format: int64
                          type: integer
                        name:
                          type: string
                        tag:
                          type: string
                      required:
                      - id
                      - name
              responses:
                "200":
                  description: Return a 200 status to indicate that the data was received
                    successfully
      properties:
        openapi:
          example: 3.1.0
          type: string
        info:
          properties:
            title:
              example: Webhook Example
              type: string
            version:
              example: 1.0.0
              type: string
          type: object
        webhooks:
          properties:
            pet.new:
              properties:
                post:
                  properties:
                    requestBody:
                      properties:
                        description:
                          example: Information about a new pet in the system
                          type: string
                        content:
                          properties:
                            application/json:
                              properties:
                                schema:
                                  properties:
                                    properties:
                                      properties:
                                        id:
                                          properties:
                                            format:
                                              example: int64
                                              type: string
                                            type:
                                              example: integer
                                              type: string
                                          type: object
                                        name:
                                          properties:
                                            type:
                                              example: string
                                              type: string
                                          type: object
                                        tag:
                                          properties:
                                            type:
                                              example: string
                                              type: string
                                          type: object
                                      type: object
                                    required:
                                      items:
                                        example: id
                                        type: string
                                      type: array
                                  type: object
                              type: object
                          type: object
                      type: object
                    responses:
                      properties:
                        "200":
                          properties:
                            description:
                              example: Return a 200 status to indicate that the data
                                was received successfully
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeImportOpenApiOutData-properties-modified-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeUpdate-properties-description:
      example: A user has signed up
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeUpdate-properties-archived:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeUpdate-properties-schemas:
      example:
        "1":
          title: Invoice Paid Event
          description: An invoice was paid by a user
          properties:
            invoiceId:
              description: The invoice id
              type: string
            userId:
              description: The user id
              type: string
          required:
          - invoiceId
          - userId
          type: object
      properties:
        "1":
          properties:
            title:
              example: Invoice Paid Event
              type: string
            description:
              example: An invoice was paid by a user
              type: string
            properties:
              properties:
                invoiceId:
                  properties:
                    description:
                      example: The invoice id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
                userId:
                  properties:
                    description:
                      example: The user id
                      type: string
                    type:
                      example: string
                      type: string
                  type: object
              type: object
            required:
              items:
                example: invoiceId
                type: string
              type: array
            type:
              example: object
              type: string
          type: object
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypeUpdate-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypePatch-properties-schemas:
      example:
        title: Invoice Paid Event
        description: An invoice was paid by a user
        properties:
          invoiceId:
            description: The invoice id
            type: string
          userId:
            description: The user id
            type: string
        required:
        - invoiceId
        - userId
        type: object
      properties:
        title:
          example: Invoice Paid Event
          type: string
        description:
          example: An invoice was paid by a user
          type: string
        properties:
          properties:
            invoiceId:
              properties:
                description:
                  example: The invoice id
                  type: string
                type:
                  example: string
                  type: string
              type: object
            userId:
              properties:
                description:
                  example: The user id
                  type: string
                type:
                  example: string
                  type: string
              type: object
          type: object
        required:
          items:
            example: invoiceId
            type: string
          type: array
        type:
          example: object
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EventTypePatch-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_BackgroundTaskOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_BackgroundTaskOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-tags:
      example:
      - my_tag
      - other
      items:
        example: my_tag
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-tags-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-eventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-payload:
      example:
        email: test@example.com
        type: user.created
        username: test_user
      properties:
        email:
          example: test@example.com
          type: string
        type:
          example: user.created
          type: string
        username:
          example: test_user
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageIn-properties-payloadRetentionPeriod:
      example: 90
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageRawPayloadOut-properties-payload:
      example: "{\"email\":\"test@example.com\",\"type\":\"user.created\",\"username\"\
        :\"test_user\"}"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-response:
      example: "{}"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-responseStatusCode:
      example: 200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-msgId:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptOut-properties-id:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageAttemptOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageAttemptOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EndpointMessageOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_EndpointMessageOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-tags-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-eventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-payload:
      example:
        email: test@example.com
        type: user.created
        username: test_user
      properties:
        email:
          example: test@example.com
          type: string
        type:
          example: user.created
          type: string
        username:
          example: test_user
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EndpointMessageOut-properties-id:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageEndpointOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageEndpointOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-id:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-uid:
      example: unique-ep-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-disabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageEndpointOut-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageAttemptEndpointOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_MessageAttemptEndpointOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-url:
      example: https://example.com/webhook/
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-response:
      example: "{}"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-responseStatusCode:
      example: 200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-msgId:
      example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-endpointId:
      example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageAttemptEndpointOut-properties-id:
      example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AppUsageStatsIn-properties-appIds-items:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_IntegrationOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_IntegrationOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-IntegrationOut-properties-name:
      example: Example Integration
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-IntegrationOut-properties-id:
      example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-IntegrationIn-properties-name:
      example: Example Integration
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-IntegrationUpdate-properties-name:
      example: Example Integration
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-IntegrationKeyOut-properties-key:
      example: integsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-eventId:
      example: unique-msg-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-payload:
      example:
        email: test@example.com
        type: user.created
        username: test_user
      properties:
        email:
          example: test@example.com
          type: string
        type:
          example: user.created
          type: string
        username:
          example: test_user
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-channels:
      example:
      - project_123
      - group_2
      items:
        example: project_123
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-MessageBroadcastIn-properties-payloadRetentionPeriod:
      example: 90
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_TemplateOut_-properties-iterator:
      example: iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ListResponse_TemplateOut_-properties-prevIterator:
      example: -iterator
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateOut-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateOut-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateOut-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-description:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-instructions:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-instructionsLink:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateIn-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-description:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-name:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-instructions:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplateUpdate-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplatePatch-properties-filterTypes:
      example:
      - user.signup
      - user.deleted
      items:
        example: user.signup
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplatePatch-properties-filterTypes-items:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TemplatePatch-properties-featureFlag:
      example: cool-new-feature
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TransformationSimulateIn-properties-eventType:
      example: user.signup
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TransformationSimulateIn-properties-channels-items:
      example: project_1337
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-customFontFamily:
      example: Open Sans
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableChannels:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableMessageTags:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableIntegrationManagement:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-enableTransformations:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentSettingsOut-properties-showUseSvixPlay:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EnvironmentOut-properties-version:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-customFontFamily:
      example: Open Sans
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-disableEndpointOnFailure:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-eventCatalogPublished:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-enforceHttps:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-enableChannels:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-readOnly:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-enableIntegrationManagement:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-enableTransformations:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsOut-properties-showUseSvixPlay:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-customFontFamily:
      example: Open Sans
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-disableEndpointOnFailure:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-eventCatalogPublished:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-enforceHttps:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-enableChannels:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-readOnly:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-enableIntegrationManagement:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-enableTransformations:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SettingsIn-properties-showUseSvixPlay:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InboundPathParams-properties-app_id:
      example: unique-app-identifier
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-post--api-v1-auth-app-portal-access-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-app-portal-access-app_id-post-parameters-0-schema
        idempotency-key:
          type: string
        featureFlags:
          description: The set of feature flags the created token will have access
            to.
          example: []
          items:
            example: cool-new-feature
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: cool-new-feature
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags-items
          type: array
          uniqueItems: true
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-featureFlags
        expiry:
          default: 604800
          description: "How long the token will be valid for, in seconds. Valid values\
            \ are between 1 hour and 7 days. The default is 7 days."
          example: 604800
          format: uint64
          maximum: 604800
          minimum: 3600
          nullable: true
          type: integer
          x-konfig-original-example: 604800
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppPortalAccessIn-properties-expiry
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-auth-dashboard-access-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-dashboard-access-app_id-post-parameters-0-schema
        idempotency-key:
          type: string
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-auth-logout:
      properties:
        idempotency-key:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-auth-app-app_id-expire-all:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-auth-app-app_id-expire-all-post-parameters-0-schema
        idempotency-key:
          type: string
        expiry:
          description: How many seconds until the old key is expired.
          example: 60
          format: int64
          maximum: 259200
          minimum: 0
          nullable: true
          type: integer
          x-konfig-original-example: 60
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationTokenExpireIn-properties-expiry
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-app:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-get-parameters-1-schema
        order:
          $ref: '#/components/schemas/Ordering'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - order
    konfig-generated-schema-single-parameter-schema-post--api-v1-app:
      properties:
        get_if_exists:
          default: false
          description: "Get an existing application, or create a new one if doesn't\
            \ exist. It's two separate functions in the libs."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-post-parameters-0-schema
        idempotency-key:
          type: string
        name:
          example: My first application
          minLength: 1
          type: string
          x-konfig-original-example: My first application
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-name
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the application
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-uid
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-metadata
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - get_if_exists
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-delete-parameters-0-schema
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-get-parameters-0-schema
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
    konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-patch-parameters-0-schema
        name:
          type: string
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: The app's UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationPatch-properties-uid
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
    konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-put-parameters-0-schema
        name:
          example: My first application
          minLength: 1
          type: string
          x-konfig-original-example: My first application
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-name
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the application
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-uid
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApplicationIn-properties-metadata
      required:
      - app_id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-0-schema
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-get-parameters-2-schema
        order:
          $ref: '#/components/schemas/Ordering'
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - limit
      - iterator
      - order
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-post-parameters-0-schema
        idempotency-key:
          type: string
        description:
          default: ""
          example: An example endpoint name
          type: string
          x-konfig-original-example: An example endpoint name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-description
        version:
          default: 1
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          nullable: true
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-version
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-channels
        secret:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-secret
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointIn-properties-metadata
      required:
      - app_id
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-endpoint-endpoint_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-delete-parameters-1-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-get-parameters-1-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-patch-parameters-1-schema
        description:
          type: string
        version:
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-version
        rateLimit:
          format: uint16
          minimum: 0
          nullable: true
          type: integer
        uid:
          description: The ep's UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-uid
        url:
          format: uri
          type: string
        disabled:
          type: boolean
        filterTypes:
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-filterTypes-items
          nullable: true
          type: array
          uniqueItems: true
        channels:
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-channels-items
          nullable: true
          type: array
          uniqueItems: true
        secret:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointPatch-properties-secret
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-endpoint-endpoint_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-put-parameters-1-schema
        description:
          default: ""
          example: An example endpoint name
          type: string
          x-konfig-original-example: An example endpoint name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-description
        version:
          default: 1
          deprecated: true
          example: 1
          format: uint16
          minimum: 1
          nullable: true
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-version
        rateLimit:
          format: uint16
          minimum: 1
          nullable: true
          type: integer
        uid:
          description: Optional unique identifier for the endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-uid
        url:
          example: https://example.com/webhook/
          format: uri
          maxLength: 65536
          minLength: 1
          type: string
          x-konfig-original-example: https://example.com/webhook/
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-url
        disabled:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-disabled
        filterTypes:
          example:
          - user.signup
          - user.deleted
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes-items
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - user.signup
          - user.deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-filterTypes
        channels:
          description: List of message channels this endpoint listens to (omit for
            all)
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels-items
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-channels
        metadata:
          additionalProperties:
            type: string
          example: {}
          type: object
          x-konfig-original-example: {}
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointUpdate-properties-metadata
      required:
      - app_id
      - endpoint_id
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-secret:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-get-parameters-1-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-secret-rotate-post-parameters-1-schema
        idempotency-key:
          type: string
        key:
          description: "The endpoint's verification secret. If `null` is passed, a\
            \ secret is automatically generated. Format: `base64` encoded random bytes\
            \ optionally prefixed with `whsec_`. Recommended size: 24."
          example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          nullable: true
          pattern: "^(whsec_)?[a-zA-Z0-9+/=]{32,100}$"
          type: string
          x-konfig-original-example: whsec_C2FVsBQIhrscChlQIMV+b5sSYspob7oD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointSecretRotateIn-properties-key
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-stats:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-stats-get-parameters-1-schema
        since:
          description: Filter the range to data starting from this date
          format: date-time
          nullable: true
          type: string
        until:
          description: Filter the range to data ending by this date
          format: date-time
          nullable: true
          type: string
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
      - since
      - until
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-recover:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-recover-post-parameters-1-schema
        idempotency-key:
          type: string
        since:
          format: date-time
          type: string
        until:
          format: date-time
          nullable: true
          type: string
      required:
      - app_id
      - endpoint_id
      - since
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-replay-missing:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-replay-missing-post-parameters-1-schema
        idempotency-key:
          type: string
        since:
          format: date-time
          type: string
        until:
          format: date-time
          nullable: true
          type: string
      required:
      - app_id
      - endpoint_id
      - since
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-headers:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-get-parameters-1-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id-headers:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-patch-parameters-1-schema
        headers:
          additionalProperties:
            nullable: true
            type: string
          example:
            X-Example: "123"
            X-Foobar: Bar
          type: object
          x-konfig-original-example:
            X-Example: "123"
            X-Foobar: Bar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersPatchIn-properties-headers
      required:
      - app_id
      - endpoint_id
      - headers
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-endpoint-endpoint_id-headers:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-headers-put-parameters-1-schema
        headers:
          additionalProperties:
            type: string
          example:
            X-Example: "123"
            X-Foobar: Bar
          type: object
          x-konfig-original-example:
            X-Example: "123"
            X-Foobar: Bar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EndpointHeadersIn-properties-headers
      required:
      - app_id
      - endpoint_id
      - headers
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-transformation:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-get-parameters-1-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-patch--api-v1-app-app_id-endpoint-endpoint_id-transformation:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-transformation-patch-parameters-1-schema
        code:
          maxLength: 51200
          minLength: 10
          nullable: true
          type: string
        enabled:
          type: boolean
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-endpoint-endpoint_id-send-example:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-0-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-send-example-post-parameters-1-schema
        idempotency-key:
          type: string
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventExampleIn-properties-eventType
      required:
      - app_id
      - endpoint_id
      - eventType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - endpoint_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-event-type:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: user.signup
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-1-schema
        order:
          $ref: '#/components/schemas/Ordering'
        include_archived:
          default: false
          description: When `true` archived (deleted but not expunged) items are included
            in the response
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-3-schema
        with_content:
          default: false
          description: When `true` the full item (including the schema) is included
            in the response
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-get-parameters-4-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - order
      - include_archived
      - with_content
    konfig-generated-schema-single-parameter-schema-post--api-v1-event-type:
      properties:
        idempotency-key:
          type: string
        description:
          example: A user has signed up
          type: string
          x-konfig-original-example: A user has signed up
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-description
        name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-name
        archived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-archived
        schemas:
          additionalProperties:
            type: object
          description: The schema for the event type for a specific version as a JSON
            schema.
          example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          nullable: true
          type: object
          x-konfig-original-example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeIn-properties-featureFlag
      required:
      - description
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-event-type-import-openapi:
      properties:
        idempotency-key:
          type: string
        spec:
          additionalProperties:
            type: object
          description: A pre-parsed JSON spec.
          example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          nullable: true
          type: object
          x-konfig-original-example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-spec
        specRaw:
          description: "A string, parsed by the server as YAML or JSON."
          example: "{\"openapi\":\"3.1.0\",\"info\":{\"title\":\"Webhook Example\"\
            ,\"version\":\"1.0.0\"},\"webhooks\":{\"pet.new\":{\"post\":{\"requestBody\"\
            :{\"description\":\"Information about a new pet in the system\",\"content\"\
            :{\"application/json\":{\"schema\":{\"properties\":{\"id\":{\"format\"\
            :\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"tag\"\
            :{\"type\":\"string\"}},\"required\":[\"id\",\"name\"]}}}},\"responses\"\
            :{\"200\":{\"description\":\"Return a 200 status to indicate that the\
            \ data was received successfully\"}}}}}}"
          nullable: true
          type: string
          x-konfig-original-example:
            openapi: 3.1.0
            info:
              title: Webhook Example
              version: 1.0.0
            webhooks:
              pet.new:
                post:
                  requestBody:
                    description: Information about a new pet in the system
                    content:
                      application/json:
                        schema:
                          properties:
                            id:
                              format: int64
                              type: integer
                            name:
                              type: string
                            tag:
                              type: string
                          required:
                          - id
                          - name
                  responses:
                    "200":
                      description: Return a 200 status to indicate that the data was
                        received successfully
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeImportOpenApiIn-properties-specRaw
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-delete--api-v1-event-type-event_type_name:
      properties:
        event_type_name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-0-schema
        expunge:
          default: false
          description: By default event types are archived when "deleted". Passing
            this to `true` deletes them entirely.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-delete-parameters-1-schema
      required:
      - event_type_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - event_type_name
      - expunge
    konfig-generated-schema-single-parameter-schema-get--api-v1-event-type-event_type_name:
      properties:
        event_type_name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-get-parameters-0-schema
      required:
      - event_type_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - event_type_name
    konfig-generated-schema-single-parameter-schema-patch--api-v1-event-type-event_type_name:
      properties:
        event_type_name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-patch-parameters-0-schema
        description:
          type: string
        archived:
          type: boolean
        schemas:
          additionalProperties:
            type: object
          example:
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
          nullable: true
          type: object
          x-konfig-original-example:
            title: Invoice Paid Event
            description: An invoice was paid by a user
            properties:
              invoiceId:
                description: The invoice id
                type: string
              userId:
                description: The user id
                type: string
            required:
            - invoiceId
            - userId
            type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypePatch-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypePatch-properties-featureFlag
      required:
      - event_type_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - event_type_name
    konfig-generated-schema-single-parameter-schema-put--api-v1-event-type-event_type_name:
      properties:
        event_type_name:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-event-type-event_type_name-put-parameters-0-schema
        description:
          example: A user has signed up
          type: string
          x-konfig-original-example: A user has signed up
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-description
        archived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-archived
        schemas:
          additionalProperties:
            type: object
          description: The schema for the event type for a specific version as a JSON
            schema.
          example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          nullable: true
          type: object
          x-konfig-original-example:
            "1":
              title: Invoice Paid Event
              description: An invoice was paid by a user
              properties:
                invoiceId:
                  description: The invoice id
                  type: string
                userId:
                  description: The user id
                  type: string
              required:
              - invoiceId
              - userId
              type: object
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-schemas
        featureFlag:
          example: cool-new-feature
          maxLength: 256
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: cool-new-feature
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EventTypeUpdate-properties-featureFlag
      required:
      - description
      - event_type_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - event_type_name
    konfig-generated-schema-single-parameter-schema-get--api-v1-background-task:
      properties:
        status:
          $ref: '#/components/schemas/BackgroundTaskStatus'
        task:
          $ref: '#/components/schemas/BackgroundTaskType'
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          nullable: true
          type: string
        order:
          $ref: '#/components/schemas/Ordering'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - status
      - task
      - limit
      - iterator
      - order
    konfig-generated-schema-single-parameter-schema-get--api-v1-background-task-task_id:
      properties:
        task_id:
          type: string
      required:
      - task_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - task_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-0-schema
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-2-schema
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-3-schema
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        with_content:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-6-schema
        tag:
          description: Filter messages matching the provided tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-7-schema
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-get-parameters-8-schema-items
          nullable: true
          type: array
          uniqueItems: true
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - limit
      - iterator
      - channel
      - before
      - after
      - with_content
      - tag
      - event_types
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-msg:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-0-schema
        with_content:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-post-parameters-1-schema
        idempotency-key:
          type: string
        tags:
          description: List of free-form tags that can be filtered by when listing
            messages
          example:
          - my_tag
          - other
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-tags-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - my_tag
          - other
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-tags
        eventId:
          description: Optional unique identifier for the message
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-eventId
        eventType:
          description: The event type's name
          example: user.signup
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: user.signup
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-eventType
        payload:
          example:
            email: test@example.com
            type: user.created
            username: test_user
          type: object
          x-konfig-original-example:
            email: test@example.com
            type: user.created
            username: test_user
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-payload
        channels:
          description: List of free-form identifiers that endpoints can filter by
          example:
          - project_123
          - group_2
          items:
            example: project_1337
            maxLength: 128
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: project_1337
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-channels-items
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
          x-konfig-original-example:
          - project_123
          - group_2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-channels
        payloadRetentionPeriod:
          default: 90
          example: 90
          format: int64
          maximum: 90
          minimum: 5
          type: integer
          x-konfig-original-example: 90
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-MessageIn-properties-payloadRetentionPeriod
        application:
          $ref: '#/components/schemas/ApplicationIn'
        transformationsParams:
          description: Extra parameters to pass to Transformations (for future use)
          nullable: true
          type: object
      required:
      - app_id
      - eventType
      - payload
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - with_content
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-0-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-1-schema
        with_content:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-get-parameters-2-schema
      required:
      - app_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - msg_id
      - with_content
    konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-msg-msg_id-content:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-0-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-content-delete-parameters-1-schema
      required:
      - app_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - msg_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-attempt-endpoint-endpoint_id:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-1-schema
        status:
          $ref: '#/components/schemas/MessageStatus'
        status_code_class:
          $ref: '#/components/schemas/StatusCodeClass'
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-4-schema
        tag:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-5-schema
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        with_content:
          default: true
          description: When `true` attempt content is included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-8-schema
        with_msg:
          default: false
          description: "When `true`, the message information is included in the response"
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-9-schema
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-10-schema-items
          nullable: true
          type: array
          uniqueItems: true
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-11-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-endpoint-endpoint_id-get-parameters-12-schema
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - status
      - status_code_class
      - channel
      - tag
      - before
      - after
      - with_content
      - with_msg
      - event_types
      - app_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-attempt-msg-msg_id:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-1-schema
        status:
          $ref: '#/components/schemas/MessageStatus'
        status_code_class:
          $ref: '#/components/schemas/StatusCodeClass'
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-4-schema
        tag:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-5-schema
        endpoint_id:
          description: Filter the attempts based on the attempted endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-6-schema
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        with_content:
          default: true
          description: When `true` attempt content is included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-9-schema
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-10-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-11-schema
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-attempt-msg-msg_id-get-parameters-12-schema-items
          nullable: true
          type: array
          uniqueItems: true
      required:
      - app_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - status
      - status_code_class
      - channel
      - tag
      - endpoint_id
      - before
      - after
      - with_content
      - app_id
      - msg_id
      - event_types
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-endpoint-endpoint_id-msg:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-1-schema
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-2-schema
        tag:
          description: Filter response based on the message tags
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-3-schema
        status:
          $ref: '#/components/schemas/MessageStatus'
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        with_content:
          default: true
          description: When `true` message payloads are included in the response
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-7-schema
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-8-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-9-schema
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-endpoint-endpoint_id-msg-get-parameters-10-schema-items
          nullable: true
          type: array
          uniqueItems: true
      required:
      - app_id
      - endpoint_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - channel
      - tag
      - status
      - before
      - after
      - with_content
      - app_id
      - endpoint_id
      - event_types
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-endpoint:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-1-schema
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-2-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-get-parameters-3-schema
      required:
      - app_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - app_id
      - msg_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-1-schema
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-2-schema
        tag:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-3-schema
        status:
          $ref: '#/components/schemas/MessageStatus'
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-7-schema-items
          nullable: true
          type: array
          uniqueItems: true
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-8-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-9-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-attempt-get-parameters-10-schema
      required:
      - app_id
      - endpoint_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - channel
      - tag
      - status
      - before
      - after
      - event_types
      - app_id
      - msg_id
      - endpoint_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-attempt:
      properties:
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-1-schema
        endpoint_id:
          description: Filter the attempts based on the attempted endpoint
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-2-schema
        channel:
          description: Filter response based on the channel
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-3-schema
        tag:
          description: Filter response based on the tag
          example: project_1337
          maxLength: 128
          nullable: true
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: project_1337
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-4-schema
        status:
          $ref: '#/components/schemas/MessageStatus'
        before:
          description: Only include items created before a certain date
          format: date-time
          nullable: true
          type: string
        after:
          description: Only include items created after a certain date
          format: date-time
          nullable: true
          type: string
        status_code_class:
          $ref: '#/components/schemas/StatusCodeClass'
        event_types:
          description: Filter response based on the event type
          items:
            description: The event type's name
            example: user.signup
            maxLength: 256
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: user.signup
            x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-9-schema-items
          nullable: true
          type: array
          uniqueItems: true
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-10-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-get-parameters-11-schema
      required:
      - app_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - limit
      - iterator
      - endpoint_id
      - channel
      - tag
      - status
      - before
      - after
      - status_code_class
      - event_types
      - app_id
      - msg_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-msg-msg_id-attempt-attempt_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-0-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-1-schema
        attempt_id:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-get-parameters-2-schema
      required:
      - app_id
      - attempt_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - msg_id
      - attempt_id
    konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-0-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-1-schema
        attempt_id:
          description: The attempt's ID
          example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-attempt-attempt_id-content-delete-parameters-2-schema
      required:
      - app_id
      - attempt_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - msg_id
      - attempt_id
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-0-schema
        msg_id:
          description: The msg's ID or UID
          example: unique-msg-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-msg-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-1-schema
        endpoint_id:
          description: The ep's ID or UID
          example: unique-ep-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-ep-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-msg-msg_id-endpoint-endpoint_id-resend-post-parameters-2-schema
        idempotency-key:
          type: string
      required:
      - app_id
      - endpoint_id
      - msg_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - msg_id
      - endpoint_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-post--api-v1-stats-usage-app:
      properties:
        idempotency-key:
          type: string
        since:
          format: date-time
          type: string
        until:
          format: date-time
          type: string
        appIds:
          items:
            description: The app's ID or UID
            example: unique-app-identifier
            maxLength: 256
            minLength: 1
            pattern: "^[a-zA-Z0-9\\-_.]+$"
            type: string
            x-konfig-original-example: unique-app-identifier
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-AppUsageStatsIn-properties-appIds-items
          nullable: true
          type: array
          uniqueItems: true
      required:
      - since
      - until
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-put--api-v1-stats-usage-event-types:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-0-schema
        limit:
          description: Limit the number of returned items
          format: uint64
          maximum: 250
          minimum: 1
          type: integer
        iterator:
          description: The iterator returned from a prior invocation
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          nullable: true
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-get-parameters-2-schema
      required:
      - app_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - limit
      - iterator
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-integration:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-post-parameters-0-schema
        idempotency-key:
          type: string
        name:
          example: Example Integration
          type: string
          x-konfig-original-example: Example Integration
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationIn-properties-name
      required:
      - app_id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-delete--api-v1-app-app_id-integration-integ_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-0-schema
        integ_id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-delete-parameters-1-schema
      required:
      - app_id
      - integ_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - integ_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration-integ_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-0-schema
        integ_id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-get-parameters-1-schema
      required:
      - app_id
      - integ_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - integ_id
    konfig-generated-schema-single-parameter-schema-put--api-v1-app-app_id-integration-integ_id:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-0-schema
        integ_id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-put-parameters-1-schema
        name:
          example: Example Integration
          type: string
          x-konfig-original-example: Example Integration
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-IntegrationUpdate-properties-name
      required:
      - app_id
      - integ_id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - integ_id
    konfig-generated-schema-single-parameter-schema-get--api-v1-app-app_id-integration-integ_id-key:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-0-schema
        integ_id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-get-parameters-1-schema
      required:
      - app_id
      - integ_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - integ_id
    konfig-generated-schema-single-parameter-schema-post--api-v1-app-app_id-integration-integ_id-key-rotate:
      properties:
        app_id:
          description: The app's ID or UID
          example: unique-app-identifier
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_.]+$"
          type: string
          x-konfig-original-example: unique-app-identifier
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-0-schema
        integ_id:
          description: The integ's ID
          example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
          x-konfig-original-example: integ_1srOrx2ZWZBpBUvZwXKQmoEYga2
          x-konfig-generated-schema: konfig-generated-schema-paths--api-v1-app-app_id-integration-integ_id-key-rotate-post-parameters-1-schema
        idempotency-key:
          type: string
      required:
      - app_id
      - integ_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - app_id
      - integ_id
      - idempotency-key
    konfig-generated-schema-single-parameter-schema-get--api-v1-health:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
  securitySchemes:
    HTTPBearer:
      description: HTTP Bearer token passed in the `Authorization` header
      scheme: bearer
      type: http
      x-konfig-globally-required-security: false
x-tagGroups:
- tags:
  - Application
  - Event Type
  - Background Tasks
  name: General
- tags:
  - Authentication
  - Endpoint
  - Message
  - Message Attempt
  - Integration
  name: Application specific
- tags:
  - Health
  name: Utility
- tags:
  - Webhooks
  name: Webhooks
- tags:
  - Statistics
  name: Statistics
x-webhooks:
  endpoint.created:
    post:
      tags:
      - Webhooks
      summary: endpoint.created
      operationId: endpoint.created
      description: Sent when an endpoint is created.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.created
            schema:
              $ref: '#/components/schemas/EndpointCreatedEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.created
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  endpoint.deleted:
    post:
      tags:
      - Webhooks
      summary: endpoint.deleted
      operationId: endpoint.deleted
      description: Sent when an endpoint is deleted.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.deleted
            schema:
              $ref: '#/components/schemas/EndpointDeletedEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.deleted
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  endpoint.disabled:
    post:
      tags:
      - Webhooks
      summary: endpoint.disabled
      operationId: endpoint.disabled
      description: Sent when an endpoint has been automatically disabled after continuous
        failures.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
                failSince: 2022-11-06T15:04:05Z
              type: endpoint.disabled
            schema:
              $ref: '#/components/schemas/EndpointDisabledEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
                failSince: 2022-11-06T15:04:05Z
              type: endpoint.disabled
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  endpoint.updated:
    post:
      tags:
      - Webhooks
      summary: endpoint.updated
      operationId: endpoint.updated
      description: Sent when an endpoint is updated.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.updated
            schema:
              $ref: '#/components/schemas/EndpointUpdatedEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                endpointUid: unique-endpoint-identifier
              type: endpoint.updated
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  message.attempt.exhausted:
    post:
      tags:
      - Webhooks
      summary: message.attempt.exhausted
      operationId: message.attempt.exhausted
      description: Sent when a message delivery has failed (all of the retry attempts
        have been exhausted).
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
                  responseStatusCode: 500
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.exhausted
            schema:
              $ref: '#/components/schemas/MessageAttemptExhaustedEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2
                  responseStatusCode: 500
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.exhausted
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  message.attempt.failing:
    post:
      tags:
      - Webhooks
      summary: message.attempt.failing
      operationId: message.attempt.failing
      description: |-
        Sent after a message has been failing for a few times.
        It's sent on the fourth failure. It complements `message.attempt.exhausted` which is sent after the last failure.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2X
                  responseStatusCode: 500
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.failing
            schema:
              $ref: '#/components/schemas/MessageAttemptFailingEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2X
                  responseStatusCode: 500
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.failing
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully
  message.attempt.recovered:
    post:
      tags:
      - Webhooks
      summary: message.attempt.recovered
      operationId: message.attempt.recovered
      description: Sent on a successful dispatch after an earlier failure op webhook
        has already been sent.
      requestBody:
        content:
          application/json:
            example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2X
                  responseStatusCode: 200
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.recovered
            schema:
              $ref: '#/components/schemas/MessageAttemptRecoveredEvent'
            x-konfig-original-example:
              data:
                appId: app_1srOrx2ZWZBpBUvZwXKQmoEYga2
                appUid: unique-app-identifier
                endpointId: ep_1srOrx2ZWZBpBUvZwXKQmoEYga2
                lastAttempt:
                  id: atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2X
                  responseStatusCode: 200
                  timestamp: 2022-11-06T15:04:05Z
                msgEventId: unique-msg-identifier
                msgId: msg_1srOrx2ZWZBpBUvZwXKQmoEYga2
              type: message.attempt.recovered
      responses:
        "2XX":
          description: Return any 2XX status to indicate that the data was received
            successfully

